   CREATE OR REPLACE FUNCTION public.rejeita_item(p_user_id INTEGER, p_pedido_id INTEGER)
RETURNS VOID AS $$
BEGIN
  -- Rejeita itens sem número
  --UPDATE item_pedido_temp
  --SET status = 'rejeitado'
 -- WHERE user_id = p_user_id
  --  AND numero IS NULL
  -- AND pedido_id  = p_pedido_id 
 -- AND  status ='inicio' ; 

UPDATE item_pedido_temp
SET status = 'rejeitado'
WHERE user_id   = p_user_id
  AND pedido_id = p_pedido_id
  AND status    = 'inicio'
  AND COALESCE(NULLIF(TRIM(numero::text), ''), '0') = '0';



  -- Rejeita bebidas sem volume
  UPDATE item_pedido_temp
  SET status = 'rejeitado'
  WHERE user_id = p_user_id
    AND categoria = 'bebida'
    AND volume IS NULL 
   AND pedido_id  = p_pedido_id
   AND  status ='inicio'   ; 

  -- Rejeita itens sem valor
  UPDATE item_pedido_temp
  SET status = 'rejeitado'
  WHERE user_id = p_user_id
    AND valor IS NULL 
   AND pedido_id  = p_pedido_id  
  AND  status ='inicio'; 

 UPDATE item_pedido_temp
SET status  = 'rejeitado',
    tamanho = 'não informado'
WHERE user_id   =  p_user_id
  AND pedido_id =   p_pedido_id 
  AND valor IS NOT NULL 
  AND COALESCE(unaccent(lower(btrim(tamanho))), '') NOT IN ('media','medio','grande') 
and lower(categoria) = 'pizza' 
  AND  status ='inicio' ;
  
UPDATE public.item_pedido_temp AS b
SET status = 'rejeitado'
WHERE b.user_id   = p_user_id
  AND b.pedido_id = p_pedido_id
  AND lower(b.categoria) = 'borda' 
and  b.status ='inicio' 
  AND NOT EXISTS (
        SELECT 1
        FROM public.item_pedido_temp AS p
        WHERE p.user_id   = b.user_id
          AND p.pedido_id = b.pedido_id
          AND p.numero     = b.numero_fracao
          AND lower(p.categoria) = 'pizza'
         AND  p.status ='concluido' 
  );



END;
$$ LANGUAGE plpgsql SECURITY DEFINER;

GRANT EXECUTE ON FUNCTION public.rejeita_item(INTEGER, INTEGER) TO anon;
GRANT EXECUTE ON FUNCTION public.rejeita_item(INTEGER, INTEGER) TO authenticated;
 