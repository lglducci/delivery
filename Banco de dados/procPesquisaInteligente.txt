 CREATE OR REPLACE FUNCTION BuscaPizzaSaborInteligente(
  p_sabor1 text,
  p_user_id int,
  p_pedido_id int,
  p_id_empresa int,
  p_sabor2 text DEFAULT NULL
)
RETURNS TABLE (
  numero int,
  nome text,
  descricao text,
  preco_grande numeric,
  preco_medio numeric,
  preco_pequena numeric,
  mensagem text
)
LANGUAGE plpgsql
AS $$
DECLARE
  v_qtd int := 0;
  v_log text := '';
  v_s1 text := unaccent(lower(coalesce(p_sabor1,'')));
  v_s2 text := unaccent(lower(coalesce(p_sabor2,'')));
BEGIN
  -- 1) Verifica quantas pizzas têm o primeiro sabor
  SELECT COUNT(*)::int
  INTO v_qtd
  FROM cardapio c
  WHERE c.id_empresa = p_id_empresa
    AND c.categoria = 'pizza'
    AND unaccent(lower(c.descricao)) ILIKE '%' || v_s1 || '%';

  -- 2) Nenhuma encontrada
  IF v_qtd = 0 THEN
    v_log := format('Nenhuma pizza com "%s"', p_sabor1);
    INSERT INTO log_debug (etapa, comando, retorno, user_id, pedido_id, id_empresa)
    VALUES ('BuscaPizzaSaborInteligente', p_sabor1, v_log, p_user_id, p_pedido_id, p_id_empresa);

    RETURN QUERY
    SELECT NULL::int, NULL::text, NULL::text, NULL::numeric, NULL::numeric, NULL::numeric,
           format('Nenhuma pizza com "%s". Informe dois sabores, ex: "atum e mussarela".', p_sabor1);
    RETURN;
  END IF;

  -- 3) Até 6 pizzas → lista direto (com preços)
  IF v_qtd <= 6 THEN
    v_log := format('Encontradas %s pizzas com "%s"', v_qtd, p_sabor1);
    INSERT INTO log_debug (etapa, comando, retorno, user_id, pedido_id, id_empresa)
    VALUES ('BuscaPizzaSaborInteligente', p_sabor1, v_log, p_user_id, p_pedido_id, p_id_empresa);

    RETURN QUERY
    SELECT 
      c.numero::int,
      c.nome,
      c.descricao,
      c.preco_grande::numeric,
      c.preco_medio::numeric,
      c.preco_pequena::numeric,
      format('Encontrei %s pizzas com "%s". Escolha 1…%s e informe o tamanho.', v_qtd, p_sabor1, v_qtd)
    FROM cardapio c
    WHERE c.id_empresa = p_id_empresa
      AND c.categoria = 'pizza'
      AND unaccent(lower(c.descricao)) ILIKE '%' || v_s1 || '%'
    ORDER BY c.numero
    LIMIT 6;
    RETURN;
  END IF;

  -- 4) Mais de 6 → pede outro sabor, se ainda não veio
  IF v_qtd > 6 AND (p_sabor2 IS NULL OR btrim(p_sabor2) = '') THEN
    v_log := format('Mais de 6 pizzas com "%s". Pede outro sabor.', p_sabor1);
    INSERT INTO log_debug (etapa, comando, retorno, user_id, pedido_id, id_empresa)
    VALUES ('BuscaPizzaSaborInteligente', p_sabor1, v_log, p_user_id, p_pedido_id, p_id_empresa);

    RETURN QUERY
    SELECT NULL::int, NULL::text, NULL::text, NULL::numeric, NULL::numeric, NULL::numeric,
           format('Existem muitas pizzas com "%s". Me diga outro sabor para refinar a busca.', p_sabor1);
    RETURN;
  END IF;

  -- 5) Refinamento com 2 sabores (interseção)
  RETURN QUERY
  SELECT 
    c.numero::int,
    c.nome,
    c.descricao,
    c.preco_grande::numeric,
    c.preco_medio::numeric,
    c.preco_pequena::numeric,
    format('Pizzas encontradas com "%s" e "%s". Escolha o número desejado.', p_sabor1, p_sabor2)
  FROM cardapio c
  WHERE c.id_empresa = p_id_empresa
    AND c.categoria = 'pizza'
    AND unaccent(lower(c.descricao)) ILIKE '%' || v_s1 || '%'
    AND unaccent(lower(c.descricao)) ILIKE '%' || v_s2 || '%'
  ORDER BY c.numero
  LIMIT 6;

  v_log := format('Busca refinada com "%s" e "%s"', p_sabor1, p_sabor2);
  INSERT INTO log_debug (etapa, comando, retorno, user_id, pedido_id, id_empresa)
  VALUES ('BuscaPizzaSaborInteligente', p_sabor1 || ' + ' || coalesce(p_sabor2,''),
          v_log, p_user_id, p_pedido_id, p_id_empresa);
END;
$$;
