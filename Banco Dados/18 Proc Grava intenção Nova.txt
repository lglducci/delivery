  CREATE OR REPLACE FUNCTION grava_intencao_opcao(
    p_user_id   INT,
    p_pedido_id INT,
    p_empresa_id INT, 
    p_nome      TEXT
)
RETURNS TABLE (linha TEXT) AS $$
BEGIN
  RETURN QUERY
  WITH base AS (
    -- Busca pizza/esfirra/borda/item
    SELECT 
       b.numero::INT,
       b.nome,
       b.preco_grande AS valor_grande,
       b.preco_media  AS valor_medio,
       b.categoria,
       b.tipo,
       b.descricao
    FROM busca_cardapio((
           SELECT string_agg(num, ', ' ORDER BY num::INT)
           FROM (
             SELECT DISTINCT c.numero::TEXT AS num
             FROM cardapio c
             WHERE lower(c.categoria) IN ('pizza','esfirra','borda','item')
               AND c.nome ILIKE '%' || p_nome || '%'
              and   c.id_empresa = p_empresa_id 
     
           ) t
         )) b

    UNION ALL

    -- Busca bebidas
    SELECT 
       b.numero::INT,
       b.nome,
       b.preco_grande AS valor_grande,
       b.preco_media  AS valor_medio,
       b.categoria,
       b.tipo,
       b.descricao
    FROM busca_cardapio((
           SELECT string_agg(num, ', ' ORDER BY num::INT)
           FROM (
             SELECT DISTINCT c.numero::TEXT AS num
             FROM cardapio c
             WHERE lower(c.categoria) = 'bebida'
               AND c.palavras_chave ILIKE '%' || p_nome || '%'
              and   c.id_empresa = p_empresa_id 
           ) t
         )) b
  ),
  formatado AS (
    SELECT
      ROW_NUMBER() OVER (PARTITION BY base.categoria ORDER BY base.numero)::INT AS opcao,
      base.categoria,
      format(
        'üîπ *(%s)* %s ‚Äì *(G) R$%s / (M) R$%s* *[%s]*' || E'\n' ||
        'üìù %s' || E'\n' ||
        'üí° Exemplo: "1 %s %s grande"',
        base.numero,
        base.nome,
        to_char(base.valor_grande, 'FM999G999G990D00'),
        to_char(base.valor_medio, 'FM999G999G990D00'),
        base.tipo,
        COALESCE(NULLIF(base.descricao,''),'(sem descri√ß√£o)'),
        base.categoria,
        base.numero
      ) AS linha_fmt,
      base.numero
    FROM base
  )
  SELECT 
    string_agg(
      CASE 
        WHEN opcao = 1 THEN 
          E'\nCategoria ' || categoria || E'\n' || linha_fmt
        ELSE 
          linha_fmt
      END,
      E'\n\n'
      ORDER BY numero
    ) AS linha
  FROM formatado;
END;
$$ LANGUAGE plpgsql;
