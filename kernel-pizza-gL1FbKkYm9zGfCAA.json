{"createdAt":"2025-09-18T15:44:58.320Z","updatedAt":"2025-10-19T00:10:25.075Z","id":"gL1FbKkYm9zGfCAA","name":"Kernel Pizza","active":false,"isArchived":false,"nodes":[{"parameters":{"operation":"executeQuery","query":" SELECT rejeita_item( {{ $('DadoPedido').item.json.user_id }}, {{ $('DadoPedido').item.json.pedido_id }}, {{ $('Dados Lead').item.json.id_empresa }}   );","options":{}},"type":"n8n-nodes-base.postgres","typeVersion":2.6,"position":[3392,-416],"id":"d5d30080-47a6-459c-b463-883f0f46f96a","name":"RejeitaItem","credentials":{"postgres":{"id":"3NLaVyXonSrCcLE3","name":"Postgres account"}}},{"parameters":{"fieldToSplitOut":"output.bebidas","options":{}},"type":"n8n-nodes-base.splitOut","typeVersion":1,"position":[848,-720],"id":"7a608843-94ae-4a9d-8a55-9f4222a0f6ab","name":"Bebidas","notes":"TEMPLATE DESENVOLVIDO POR NOCODE STARTUP\nhttps://nocodestartup.io/\n\nFORMAÇÃO GESTOR DE AGENTES DE IA:\nhttps://nocodestartup.io/formacao-gestor-agentes-ia/"},{"parameters":{"fieldToSplitOut":" output.pizzas_fracionadas","options":{}},"type":"n8n-nodes-base.splitOut","typeVersion":1,"position":[848,-528],"id":"49dbeeb0-7863-4321-abc5-6aa8716b5d4c","name":"Pizzas Fracionada","notes":"TEMPLATE DESENVOLVIDO POR NOCODE STARTUP\nhttps://nocodestartup.io/\n\nFORMAÇÃO GESTOR DE AGENTES DE IA:\nhttps://nocodestartup.io/formacao-gestor-agentes-ia/"},{"parameters":{"fieldToSplitOut":"output.pizzas_inteiras","options":{}},"type":"n8n-nodes-base.splitOut","typeVersion":1,"position":[848,-400],"id":"e738ed86-7847-426a-928a-9dd96bf35e0a","name":"Pizzas Inteira","notes":"TEMPLATE DESENVOLVIDO POR NOCODE STARTUP\nhttps://nocodestartup.io/\n\nFORMAÇÃO GESTOR DE AGENTES DE IA:\nhttps://nocodestartup.io/formacao-gestor-agentes-ia/"},{"parameters":{"fieldToSplitOut":"output.esfirras","options":{}},"type":"n8n-nodes-base.splitOut","typeVersion":1,"position":[848,-272],"id":"158da210-0bc8-433a-9120-6fd036ad4d85","name":"Esfirra","notes":"TEMPLATE DESENVOLVIDO POR NOCODE STARTUP\nhttps://nocodestartup.io/\n\nFORMAÇÃO GESTOR DE AGENTES DE IA:\nhttps://nocodestartup.io/formacao-gestor-agentes-ia/"},{"parameters":{"tableId":"item_pedido_temp","fieldsUi":{"fieldValues":[{"fieldId":"user_id","fieldValue":"={{ $('MontPedido').item.json.user_id }}"},{"fieldId":"quantidade","fieldValue":"={{ $json.quantidade }}"},{"fieldId":"tipo","fieldValue":"bebida"},{"fieldId":"categoria","fieldValue":"bebida"},{"fieldId":"nome","fieldValue":"={{ $json.nome }}"},{"fieldId":"volume","fieldValue":"= {{ (($json.volume ?? '').toString().replace(/[\\s\\u00A0\\u200B-\\u200D\\uFEFF]+/g, '') === '')\n    ? ' volume desconhecido'\n    : ($json.volume ?? '').toString().replace(/[\\s\\u00A0\\u200B-\\u200D\\uFEFF]+/g, '') }}"},{"fieldId":"fracionada","fieldValue":"false"},{"fieldId":"pedido_id","fieldValue":"={{ $('MontPedido').item.json.pedido_id }}"},{"fieldId":"numero","fieldValue":"={{ $json.numero ? $json.numero : 0 }}"},{"fieldId":"comando_original","fieldValue":"={{ $json.comando_original }}"},{"fieldId":"id_empresa","fieldValue":"= {{ $('Dados Lead').item.json.id_empresa }}"}]}},"type":"n8n-nodes-base.supabase","typeVersion":1,"position":[1088,-720],"id":"f7635034-812e-4fbd-aa0d-9042e5cc4409","name":"Itembebida","credentials":{"supabaseApi":{"id":"CcvRddDPb5xelxfb","name":"Supabase account"}}},{"parameters":{"tableId":"item_pedido_temp","fieldsUi":{"fieldValues":[{"fieldId":"user_id","fieldValue":"={{ $('MontPedido').item.json.user_id }}"},{"fieldId":"quantidade","fieldValue":"={{ $json.quantidade }}"},{"fieldId":"categoria","fieldValue":"pizza"},{"fieldId":"fracionada","fieldValue":"true"},{"fieldId":"numero","fieldValue":"= {{ $json.metade1 }}"},{"fieldId":"numero_fracao","fieldValue":"={{ $json.metade2 }}"},{"fieldId":"tamanho","fieldValue":"grande"},{"fieldId":"fracionada","fieldValue":"true"},{"fieldId":"pedido_id","fieldValue":"={{ $('MontPedido').item.json.pedido_id }}"},{"fieldId":"nome","fieldValue":"={{ $json.nome }}"},{"fieldId":"nome_fracao","fieldValue":"={{ $json.nome_fracao }}"},{"fieldId":"pizza_referencia","fieldValue":"={{$json.pizza_referencia.trim()}}"},{"fieldId":"comando_original","fieldValue":"={{ $json.comando_original }}"},{"fieldId":"id_empresa","fieldValue":"= {{ $('Dados Lead').item.json.id_empresa }}"}]}},"type":"n8n-nodes-base.supabase","typeVersion":1,"position":[1104,-528],"id":"1a425d55-acc5-40b3-8035-6dea956073b8","name":"ItemFracionado","credentials":{"supabaseApi":{"id":"CcvRddDPb5xelxfb","name":"Supabase account"}}},{"parameters":{"tableId":"item_pedido_temp","fieldsUi":{"fieldValues":[{"fieldId":"user_id","fieldValue":"={{ $('MontPedido').item.json.user_id }}"},{"fieldId":"quantidade","fieldValue":"={{ $json.quantidade }}"},{"fieldId":"categoria","fieldValue":"pizza"},{"fieldId":"fracionada","fieldValue":"false"},{"fieldId":"numero","fieldValue":"={{ String($json.numero ?? '').trim() === '' ? null : $json.numero }}"},{"fieldId":"tamanho","fieldValue":"={{ $json.tamanho.toLowerCase() }}"},{"fieldId":"fracionada","fieldValue":"false"},{"fieldId":"pedido_id","fieldValue":"={{ $('MontPedido').item.json.pedido_id }}"},{"fieldId":"nome","fieldValue":"={{ $json.nome?.trim() === '' ? null : $json.nome }}"},{"fieldId":"pizza_referencia","fieldValue":"={{ $json.pizza_referencia }}"},{"fieldId":"comando_original","fieldValue":"={{ $json.comando_original }}"},{"fieldId":"id_empresa","fieldValue":"= {{ $('Dados Lead').item.json.id_empresa }}"}]}},"type":"n8n-nodes-base.supabase","typeVersion":1,"position":[1104,-400],"id":"09a72d7a-7fcc-4cd4-97a6-28bd531c962c","name":"ItemInteira","credentials":{"supabaseApi":{"id":"CcvRddDPb5xelxfb","name":"Supabase account"}}},{"parameters":{"tableId":"item_pedido_temp","fieldsUi":{"fieldValues":[{"fieldId":"user_id","fieldValue":"={{ $('MontPedido').item.json.user_id }}"},{"fieldId":"quantidade","fieldValue":"={{ $json.quantidade }}"},{"fieldId":"tipo","fieldValue":"bebida"},{"fieldId":"categoria","fieldValue":"esfirra"},{"fieldId":"nome","fieldValue":"={{ $json.nome?.trim() === '' ? null : $json.nome }}"},{"fieldId":"tipo","fieldValue":"={{ $json.tipo?.trim() === '' ? null : $json.tipo }}"},{"fieldId":"fracionada","fieldValue":"false"},{"fieldId":"pedido_id","fieldValue":"={{ $('MontPedido').item.json.pedido_id }}"},{"fieldId":"numero","fieldValue":"= {{ $json.numero }}"},{"fieldId":"comando_original","fieldValue":"={{ $json.comando_original }}"},{"fieldId":"id_empresa","fieldValue":"= {{ $('Dados Lead').item.json.id_empresa }}"}]}},"type":"n8n-nodes-base.supabase","typeVersion":1,"position":[1104,-272],"id":"59df7bdc-aed6-46b7-9f35-1a2bf7ec7cf3","name":"ItemEsfirra","credentials":{"supabaseApi":{"id":"CcvRddDPb5xelxfb","name":"Supabase account"}}},{"parameters":{"options":{}},"type":"@n8n/n8n-nodes-langchain.outputParserAutofixing","typeVersion":1,"position":[144,-304],"id":"b399cce6-9e20-4758-989a-b43190cb9942","name":"Auto-fixing Output Parser","notes":"TEMPLATE DESENVOLVIDO POR NOCODE STARTUP\nhttps://nocodestartup.io/\n\nFORMAÇÃO GESTOR DE AGENTES DE IA:\nhttps://nocodestartup.io/formacao-gestor-agentes-ia/"},{"parameters":{"operation":"executeQuery","query":" \n\n\nCALL ReordenarItensConcluidos( {{ $('DadoPedido').item.json.user_id }}, {{ $('DadoPedido').item.json.pedido_id }} , {{ $('Dados Lead').item.json.id_empresa }} );\n","options":{}},"type":"n8n-nodes-base.postgres","typeVersion":2.6,"position":[3792,-416],"id":"86faff93-e8fb-47a4-84e7-6d67471a8cd9","name":"OrdenaPedido","credentials":{"postgres":{"id":"3NLaVyXonSrCcLE3","name":"Postgres account"}}},{"parameters":{"operation":"executeQuery","query":" UPDATE Item_pedido_temp AS i\nSET  status = 'concluido',\n   ordem_item = 0\n \nWHERE  status = 'inicio' and\n    user_id =  {{ $('DadoPedido').item.json.user_id }} and i.pedido_id = {{ $('DadoPedido').item.json.pedido_id }} and i.numero <> 0 and \ni.id_empresa = {{ $('Dados Lead').item.json.id_empresa }} ;\n","options":{}},"type":"n8n-nodes-base.postgres","typeVersion":2.6,"position":[3616,-416],"id":"b5ebf3b9-d2df-4845-8e4c-e0c83e3097fa","name":"ConcluiTudo","credentials":{"postgres":{"id":"3NLaVyXonSrCcLE3","name":"Postgres account"}}},{"parameters":{"fieldToSplitOut":"output.bordas","options":{}},"type":"n8n-nodes-base.splitOut","typeVersion":1,"position":[848,0],"id":"e56769d0-adcf-4271-8573-80a1dc184634","name":"Bordas","notes":"TEMPLATE DESENVOLVIDO POR NOCODE STARTUP\nhttps://nocodestartup.io/\n\nFORMAÇÃO GESTOR DE AGENTES DE IA:\nhttps://nocodestartup.io/formacao-gestor-agentes-ia/"},{"parameters":{"numberInputs":6},"type":"n8n-nodes-base.merge","typeVersion":3.2,"position":[1872,-480],"id":"ec18115b-1dc9-4971-b260-adebc6788470","name":"Merge1","alwaysOutputData":false,"onError":"continueRegularOutput"},{"parameters":{"model":{"__rl":true,"value":"gpt-4.1-mini","mode":"list","cachedResultName":"gpt-4.1-mini"},"options":{}},"type":"@n8n/n8n-nodes-langchain.lmChatOpenAi","typeVersion":1.2,"position":[16,-64],"id":"29668865-9ed1-45b0-941b-049371b5e133","name":"OpenAI Chat Model","credentials":{"openAiApi":{"id":"YvUoOPijIpNeTjed","name":"OpenAi account"}}},{"parameters":{"schemaType":"manual","inputSchema":" {\n  \"type\": \"object\",\n  \"properties\": {\n    \"pizzas_inteiras\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"quantidade\": { \"type\": \"integer\" },\n          \"numero\": { \"type\": \"integer\" },\n          \"tamanho\": { \"type\": \"string\" },\n           \"nome\": { \"type\": \"string\" },\n           \"pizza_referencia\":  { \"type\": \"string\" },\n           \"comando_original\":  { \"type\": \"string\" }\n          \n        },\n        \"required\": [\"quantidade\", \"numero\", \"tamanho\", \"pedido_id\"]\n      }\n    },\n    \"pizzas_fracionadas\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"quantidade\": { \"type\": \"integer\" },\n          \"metade1\": { \"type\": \"integer\" },\n          \"metade2\": { \"type\": \"integer\" },\n            \"nome\": { \"type\": \"string\" },\n            \"nome_fracao\": { \"type\": \"string\" },\n           \"pizza_referencia\":  { \"type\": \"string\" },\n           \"comando_original\":  { \"type\": \"string\" }\n         \n        },\n        \"required\": [\"quantidade\", \"metade1\", \"metade2\",\"pedido_id\"]\n      }\n    },\n    \"bebidas\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"quantidade\": { \"type\": \"integer\" },\n           \"numero\": { \"type\": \"integer\" },\n          \"nome\": { \"type\": \"string\" },\n          \"volume\": { \"type\": \"string\" },\n           \"comando_original\":  { \"type\": \"string\" }\n         \n        },\n        \"required\": [\"quantidade\",\"numero\" ,\"nome\", \"volume\",\"comando_original\"]\n      }\n    },\n    \"esfirras\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"quantidade\": { \"type\": \"integer\" },\n          \"numero\": { \"type\": \"integer\" },\n          \"nome\": { \"type\": \"string\" },\n          \"tipo\": { \"type\": \"string\" },\n           \"comando_original\":  { \"type\": \"string\" }\n        },\n        \"required\": [\"quantidade\", \"numero\", \"nome\", \"tipo\"]\n      }\n    },\n    \"bordas\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"numero\": { \"type\": \"integer\" },\n          \"nome\": { \"type\": \"string\" } ,\n           \"pizza_referencia\":  { \"type\": \"string\" },\n          \"tamanho\": { \"type\": \"string\" }, \n          \"categoria\": { \"type\": \"string\" },\n           \"comando_original\":  { \"type\": \"string\" },\n            \"pizza_pai\": { \"type\": \"integer\" }\n  \n         \n    },\n        \"required\": [\"numero\", \"pizza_referencia\"]\n      }\n    },\n    \"item\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"object\",\n        \"properties\": { \n          \"numero\": { \"type\": \"integer\" },\n          \"nome\": { \"type\": \"string\" } ,\n            \"tamanho\": { \"type\": \"string\" },\n           \"pizza_referencia\":  { \"type\": \"string\" } ,\n           \"comando_original\":  { \"type\": \"string\" },\n            \"pizza_pai\": { \"type\": \"integer\" }\n          \n    },\n        \"required\": [\"nome\", \"pizza_pai\"]\n      }\n    }\n\n    \n  },\n  \"required\": [\n    \"pizzas_inteiras\",\n    \"pizzas_fracionadas\",\n    \"bebidas\",\n    \"esfirras\",\n    \"bordas\" \n  ]\n}\n\n   "},"type":"@n8n/n8n-nodes-langchain.outputParserStructured","typeVersion":1.2,"position":[240,-112],"id":"8e713269-9051-4c42-82c1-636de7005114","name":"Structured Output Parser [Schema]","notes":"TEMPLATE DESENVOLVIDO POR NOCODE STARTUP\nhttps://nocodestartup.io/\n\nFORMAÇÃO GESTOR DE AGENTES DE IA:\nhttps://nocodestartup.io/formacao-gestor-agentes-ia/"},{"parameters":{"fieldToSplitOut":"output.item","options":{}},"type":"n8n-nodes-base.splitOut","typeVersion":1,"position":[848,-144],"id":"52506e17-3640-4a5c-97f2-d75318f09678","name":"item4","notes":"TEMPLATE DESENVOLVIDO POR NOCODE STARTUP\nhttps://nocodestartup.io/\n\nFORMAÇÃO GESTOR DE AGENTES DE IA:\nhttps://nocodestartup.io/formacao-gestor-agentes-ia/"},{"parameters":{"tableId":"item_pedido_temp","fieldsUi":{"fieldValues":[{"fieldId":"user_id","fieldValue":"={{ $('MontPedido').item.json.user_id }}"},{"fieldId":"quantidade","fieldValue":"=1"},{"fieldId":"tipo","fieldValue":"item"},{"fieldId":"categoria","fieldValue":"item"},{"fieldId":"nome","fieldValue":"={{ $json.nome?.trim() === '' ? null : $json.nome }}"},{"fieldId":"numero","fieldValue":"={{ $json.numero }}"},{"fieldId":"fracionada","fieldValue":"=false"},{"fieldId":"pedido_id","fieldValue":"={{ $('MontPedido').item.json.pedido_id }}"},{"fieldId":"tamanho","fieldValue":"={{ $json.tamanho }}"},{"fieldId":"comando_original","fieldValue":"={{ $json.comando_original }}"},{"fieldId":"id_empresa","fieldValue":"= {{ $('Dados Lead').item.json.id_empresa }}"},{"fieldId":"id_pizza_pai","fieldValue":"={{ $json.pizza_pai }}"}]}},"type":"n8n-nodes-base.supabase","typeVersion":1,"position":[1104,-144],"id":"5f4ecb21-f345-44c7-92f8-9be2a993f5f8","name":"Item4","credentials":{"supabaseApi":{"id":"CcvRddDPb5xelxfb","name":"Supabase account"}}},{"parameters":{"operation":"executeQuery","query":"SELECT AtualizaValorFracionado(  {{ $('DadoPedido').item.json.user_id }},{{ $('DadoPedido').item.json.pedido_id }},{{ $('Dados Lead').item.json.id_empresa }} );","options":{}},"type":"n8n-nodes-base.postgres","typeVersion":2.6,"position":[2976,-416],"id":"a381a11d-a7c7-4aa3-aa57-c6a67985f4bb","name":"AtualizaValorPizzaFracionada2","credentials":{"postgres":{"id":"3NLaVyXonSrCcLE3","name":"Postgres account"}}},{"parameters":{"operation":"executeQuery","query":"SELECT   atualizar_valores_itens_temp( {{ $('DadoPedido').item.json.user_id }},{{ $('DadoPedido').item.json.pedido_id }} , {{ $('Dados Lead').item.json.id_empresa }});","options":{}},"type":"n8n-nodes-base.postgres","typeVersion":2.6,"position":[2752,-416],"id":"157dbe1e-050f-456b-ac79-2d88e1607752","name":"AtualizaValorItem2","credentials":{"postgres":{"id":"3NLaVyXonSrCcLE3","name":"Postgres account"}}},{"parameters":{"assignments":{"assignments":[{"id":"a3c83333-8ce3-4995-8230-b361099aa1e4","name":"user_id","value":"={{ $('When Executed by Another Workflow').item.json.user_id }}","type":"number"},{"id":"d7c14753-505f-48ee-a344-fa565ace43df","name":"pedido_id","value":"={{ $('When Executed by Another Workflow').item.json.pedido_id }}","type":"number"},{"id":"fdf33d81-37b4-46c9-b56a-6787b3d92dac","name":"rotina","value":"={{ $('When Executed by Another Workflow').item.json.rotina }}","type":"number"}]},"options":{}},"type":"n8n-nodes-base.set","typeVersion":3.4,"position":[-3696,-672],"id":"a6418514-62bb-4f8a-b1e3-7debd49a46c5","name":"MontPedido"},{"parameters":{"assignments":{"assignments":[{"id":"8033b503-a34e-4682-a40a-b60b315714e6","name":"user_id","value":"={{ $json.user_id }}","type":"number"},{"id":"bd4fde4d-0d15-4271-945c-571b24973379","name":"pedido_id","value":"={{ $json.pedido_id }}","type":"number"}]},"options":{}},"type":"n8n-nodes-base.set","typeVersion":3.4,"position":[2080,-416],"id":"8373ecb1-043b-4540-895e-8bb63b1ffe3a","name":"DadoPedido","executeOnce":true},{"parameters":{"assignments":{"assignments":[{"id":"9f488c5c-0b3b-48e9-87b1-5a22d513d1ec","name":"IdConversa","value":"={{ $('When Executed by Another Workflow').item.json.telefone }}","type":"string"},{"id":"388e17d9-4d3a-40a6-9a45-52b166aa17b5","name":"telefone","value":"={{ $('When Executed by Another Workflow').item.json.telefone }}","type":"number"},{"id":"8b88d192-9c8b-4b70-be50-09eb1e7a9228","name":"id_empresa","value":"={{ $('When Executed by Another Workflow').item.json.id_empresa }}","type":"number"},{"id":"1b6cea25-199f-4b87-a642-6c849db9d357","name":"instance","value":"={{ $('When Executed by Another Workflow').item.json.instance }}","type":"string"},{"id":"10658e9e-6349-419d-8c28-76d717f23931","name":"apikey","value":"={{ $('When Executed by Another Workflow').item.json.apikey }}","type":"string"}]},"options":{}},"id":"63df038e-25e8-410b-8781-94308aa7e0c4","name":"Dados Lead","type":"n8n-nodes-base.set","typeVersion":3.4,"position":[-3888,-672],"notes":"TEMPLATE DESENVOLVIDO POR NOCODE STARTUP\nhttps://nocodestartup.io/\n\nFORMAÇÃO GESTOR DE AGENTES DE IA:\nhttps://nocodestartup.io/formacao-gestor-agentes-ia/"},{"parameters":{"operation":"executeQuery","query":" \n\nUPDATE item_pedido_temp AS ib\nSET id_pizza_pai = ip.item_id\nFROM item_pedido_temp AS ip\nWHERE ib.pizza_referencia IS NOT NULL\n  AND LENGTH(TRIM(ib.pizza_referencia)) > 1\n  AND ib.status = 'inicio'\n  AND ib.categoria IN ('item','borda')\n  AND ip.pizza_referencia IS NOT NULL\n  AND LENGTH(TRIM(ip.pizza_referencia)) > 1\n  AND ip.status = 'inicio'\n  AND ip.categoria = 'pizza'\n  AND ib.user_id = ip.user_id\n  AND ib.pedido_id = ip.pedido_id\n  AND ib.user_id =  {{ $('DadoPedido').item.json.user_id }} \n  AND ib.pedido_id =  {{ $('DadoPedido').item.json.pedido_id }}\n  AND ib.pizza_referencia = ip.pizza_referencia\n  and ib.id_empresa = {{ $('Dados Lead').item.json.id_empresa }} \n  and ib.id_empresa = ip.id_empresa;\n\n ","options":{}},"type":"n8n-nodes-base.postgres","typeVersion":2.6,"position":[2320,-416],"id":"623d8730-7d3e-4b28-b8f2-47db6bc22d80","name":"VinculaBordaItemPizza","credentials":{"postgres":{"id":"3NLaVyXonSrCcLE3","name":"Postgres account"}}},{"parameters":{"model":{"__rl":true,"mode":"list","value":"gpt-4.1-mini"},"options":{"temperature":0.4}},"type":"@n8n/n8n-nodes-langchain.lmChatOpenAi","typeVersion":1.2,"position":[-592,-992],"id":"0f56742b-affa-497c-bde4-75bf60479a63","name":"OpenAI Chat Model2","credentials":{"openAiApi":{"id":"YvUoOPijIpNeTjed","name":"OpenAi account"}}},{"parameters":{"operation":"update","tableId":"usuario","matchType":"allFilters","filters":{"conditions":[{"keyName":"user_id","condition":"eq","keyValue":"={{ $('MontPedido').item.json.user_id }}"},{"keyName":"id_empresa","condition":"eq","keyValue":"={{ $('Dados Lead').item.json.id_empresa }}"}]},"fieldsUi":{"fieldValues":[{"fieldId":"endereço","fieldValue":"={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('fieldValues0_Field_Value', `endereço `, 'string') }}"},{"fieldId":"bairro","fieldValue":"={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('fieldValues1_Field_Value', `bairro`, 'string') }}"}]}},"type":"n8n-nodes-base.supabaseTool","typeVersion":1,"position":[128,-944],"id":"5dd9d402-25cd-475b-88a2-bfd4d571b918","name":"SalvaEndereco","credentials":{"supabaseApi":{"id":"CcvRddDPb5xelxfb","name":"Supabase account"}}},{"parameters":{"tableId":"comentario_pedido_temp","fieldsUi":{"fieldValues":[{"fieldId":"user_id","fieldValue":"={{ $json.user_id }}"},{"fieldId":"pedido_id","fieldValue":"={{ $json.pedido_id }}"},{"fieldId":"comentario","fieldValue":"={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('fieldValues2_Field_Value', `Comentario campo`, 'string') }}"},{"fieldId":"id_empresa","fieldValue":"={{ $('Dados Lead').item.json.id_empresa }}"}]}},"type":"n8n-nodes-base.supabaseTool","typeVersion":1,"position":[-336,-976],"id":"4466276d-e81b-455b-a0d7-bc04e4bd27c4","name":"Comentario","credentials":{"supabaseApi":{"id":"CcvRddDPb5xelxfb","name":"Supabase account"}}},{"parameters":{"operation":"update","tableId":"pedido_temp","filters":{"conditions":[{"keyName":"user_id","condition":"eq","keyValue":"={{ $('MontPedido').item.json.user_id }}"},{"keyName":"pedido_id","condition":"eq","keyValue":"= {{ $('MontPedido').item.json.pedido_id }}"},{"keyName":"id_empresa","condition":"eq","keyValue":"= {{ $('Dados Lead').item.json.id_empresa }}"}]},"fieldsUi":{"fieldValues":[{"fieldId":"tipo_cobranca","fieldValue":"={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('fieldValues0_Field_Value', `forma_pagto`, 'string') }}"}]}},"type":"n8n-nodes-base.supabaseTool","typeVersion":1,"position":[-224,-944],"id":"c654bfb2-2b66-4255-8f5a-0a0c547d7d3f","name":"SalvaFormaPagto","credentials":{"supabaseApi":{"id":"CcvRddDPb5xelxfb","name":"Supabase account"}}},{"parameters":{"descriptionType":"manual","toolDescription":"Execute a SQL query in Postgres fechamento ","operation":"executeQuery","query":"SELECT * from finalizar_pedido(    {{ $('MontPedido').item.json.user_id }} , {{ $('MontPedido').item.json.pedido_id }}, {{ $('Dados Lead').item.json.id_empresa }} ) ;","options":{}},"type":"n8n-nodes-base.postgresTool","typeVersion":2.6,"position":[-128,-960],"id":"527da8aa-05f5-43a7-bcf0-344fdaf6d5ba","name":"Fechamento","credentials":{"postgres":{"id":"3NLaVyXonSrCcLE3","name":"Postgres account"}}},{"parameters":{"resource":"messages-api","instanceName":"={{ $('Dados Lead').item.json.instance }}","remoteJid":"={{ $('Dados Lead').item.json.IdConversa }}","messageText":"=```{{ $json.output }}```","options_message":{"delay":4}},"type":"n8n-nodes-evolution-api.evolutionApi","typeVersion":1,"position":[-64,-1248],"id":"eb621430-0a3a-4261-ae41-1c9ebf61d4d2","name":"MenuCardapio1","credentials":{"evolutionApi":{"id":"ApqS5DPziUrzonYT","name":"Evolution account"}}},{"parameters":{"operation":"executeQuery","query":"update Pedido_temp \n  set status = 'enviado'\n  where user_id =   {{ $('MontPedido').item.json.user_id }}  \n  and   pedido_id =    {{ $('MontPedido').item.json.pedido_id }}  and  status = 'fechamento'  ;\n \n  ","options":{}},"type":"n8n-nodes-base.postgresTool","typeVersion":2.6,"position":[0,-960],"id":"0670b9ba-bc75-48f9-9e7b-f3e940fd84f0","name":"Execute a SQL query in Postgres","credentials":{"postgres":{"id":"3NLaVyXonSrCcLE3","name":"Postgres account"}}},{"parameters":{"assignments":{"assignments":[{"id":"66a91f66-e755-4120-b22f-44c814f56162","name":"message","value":"={{ $('When Executed by Another Workflow').item.json.mensagem }}","type":"string"}]},"options":{}},"type":"n8n-nodes-base.set","typeVersion":3.4,"position":[-4128,-672],"id":"03833dad-39dc-4ec9-8164-85890b68dea4","name":"MensagemTraduzida","notes":"TEMPLATE DESENVOLVIDO POR NOCODE STARTUP\nhttps://nocodestartup.io/\n\nFORMAÇÃO GESTOR DE AGENTES DE IA:\nhttps://nocodestartup.io/formacao-gestor-agentes-ia/"},{"parameters":{"resource":"messages-api","instanceName":"=delivery","remoteJid":"= {{ $('Dados Lead').item.json.IdConversa }}","messageText":"=```{{ $('GetProximaMontagem').item.json.montamensagemopcoes }}```","options_message":{"delay":4}},"type":"n8n-nodes-evolution-api.evolutionApi","typeVersion":1,"position":[1712,-3120],"id":"a5155701-51df-4242-a46c-914118a1e42b","name":"MenuCardapio2","credentials":{"evolutionApi":{"id":"ApqS5DPziUrzonYT","name":"Evolution account"}}},{"parameters":{"operation":"executeQuery","query":" SELECT * FROM  GetPizzaMontagem(    {{ $('MontPedido').item.json.user_id }} , {{ $('MontPedido').item.json.pedido_id }} , {{ $('Dados Lead').item.json.id_empresa }}) ;","options":{}},"type":"n8n-nodes-base.postgres","typeVersion":2.6,"position":[32,-2096],"id":"b013dad7-f696-4bc4-b5f9-a25fdbfd2ef6","name":"Montagem","alwaysOutputData":true,"credentials":{"postgres":{"id":"3NLaVyXonSrCcLE3","name":"Postgres account"}}},{"parameters":{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"88562244-0734-4bd1-ad22-d614ab675052","leftValue":"={{ $json.numero }}","rightValue":0,"operator":{"type":"number","operation":"exists","singleValue":true}}],"combinator":"and"},"options":{}},"type":"n8n-nodes-base.if","typeVersion":2.2,"position":[-432,-1904],"id":"ca874184-03fe-4330-b617-21cba9e9efcb","name":"If1"},{"parameters":{"jsCode":" // n8n Function node\nconst msg = $('MensagemTraduzida').item?.json?.message ?? ($json.message ?? '');\nconst nums = (String(msg).match(/\\d+/g) || []).map(n => Number(n));\n\nif (nums.length === 1 && Number.isFinite(nums[0])) {\n  return [{ json: { numero: nums[0], mensagem: 'ok' } }];\n}\n\nreturn [{ json: { numero: 0, mensagem: 'blabdbsfsb' } }];\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[-624,-1904],"id":"05c4727e-6e13-4a05-9352-de827b1c2cf4","name":"Code2"},{"parameters":{"resource":"messages-api","instanceName":"=delivery","remoteJid":"={{$('Dados Lead').item.json.IdConversa }}","messageText":"=``` Escolha uma opção valida por favor.```","options_message":{"delay":4}},"type":"n8n-nodes-evolution-api.evolutionApi","typeVersion":1,"position":[-176,-1664],"id":"80a741de-611d-4292-8dee-55292e2a2521","name":"MenuCardapio3","credentials":{"evolutionApi":{"id":"ApqS5DPziUrzonYT","name":"Evolution account"}}},{"parameters":{"promptType":"define","text":"={{ $('MensagemTraduzida').item.json.message }}","options":{"systemMessage":"= # Persona     \nVocê é um atendente da Pizzaria La Cantina responsável por fechar pedidos de forma organizada, clara e simpática.  \nSeu papel é colher os dados finais (endereço, bairro, forma de pagamento) e, somente quando tudo estiver confirmado, executar a tool `finalizar_pedido( )`.\n\n# Regras de Atendimento\n\n1. Ordem obrigatória de coleta:\n   - Primeiro: Solicite endereço completo (rua + número) e bairro.  \n     → Chame `SalvaEndereco( endereco, bairro)`  \n\n   - Depois: Solicite a forma de pagamento.  \n     → Chame `SalvaFormaPagto(forma_pagto)`  \n\n   - Comentário/observação: **não pergunte diretamente**.  \n     - Se o cliente espontaneamente informar algo (ex: “sem cebola”, “deixar na portaria”),  \n       → Chame `Comentario(user_id, pedido_id, comentario)`.  \n     - Se o cliente não falar nada → pule esta etapa.  \n\n   - Por último: Execute `finalizar_pedido(user_id, pedido_id)`  \n     - **Mostre exatamente o texto retornado pela procedure**, sem alterar ou reformatar.  \n\n2. Sempre valide as respostas do cliente:  \n   - Se ele enviar só a rua sem bairro → peça de novo.  \n   - Se a forma de pagamento não for válida → peça novamente.  \n\n3. Se alguma tool retornar erro → avise o cliente de forma simples e peça novamente o dado.  \n\n⚠️ Regra de segurança:\nSe já coletou endereço, bairro e pagamento, e conseguiu executar `finalizar_pedido()`, \nNUNCA volte a perguntar de novo. Apenas finalize.\n\n\n4. Nunca finalize o pedido sem executar `finalizar_pedido()`.  \n\n5. Nunca invente informações. Use somente o que o cliente forneceu.  \n\n6. Linguagem curta, simpática e objetiva.  \n   - Exemplo:  \n     \"Ótimo, endereço anotado! Agora, qual será a forma de pagamento?\"\n\n7. Quando a tool `finalizar_pedido()` + `DadosPessoais()`, for executada e retornar o resumo final:\n   - Mostre esse texto ao cliente.\n   - Diga uma mensagem simpática de encerramento como:\n     \"🍕 Seu pedido foi finalizado com sucesso! Obrigado e bom apetite!\"\n   - **Depois disso, não faça mais perguntas nem chame outras tools.**\n   - Encerre a conversa imediatamente.\n   - **Não faça mais perguntas nem chame outras tools.**\n\n\n\n","maxIterations":18}},"type":"@n8n/n8n-nodes-langchain.agent","typeVersion":2.2,"position":[-416,-1248],"id":"ad59e662-f3b3-4946-b211-c4d37f4bf9b1","name":"Fechamento1"},{"parameters":{"rules":{"values":[{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"leftValue":"={{ $json.rotina }}","rightValue":3,"operator":{"type":"number","operation":"equals"},"id":"e3160797-555d-41ca-a0d5-60a5caf4fb75"}],"combinator":"and"},"renameOutput":true,"outputKey":"montagem"},{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"e96fc6ed-5139-4fcb-8523-91c5ad9d6f23","leftValue":"={{ $json.rotina }}","rightValue":2,"operator":{"type":"number","operation":"equals"}}],"combinator":"and"},"renameOutput":true,"outputKey":"fechamento"},{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"0fb4b223-80cf-4071-ba32-727a64e9d77f","leftValue":"={{ $json.rotina }}","rightValue":1,"operator":{"type":"number","operation":"equals"}}],"combinator":"and"},"renameOutput":true,"outputKey":"constroi"},{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"94c93021-d462-4a50-b6e5-fc4a36940a8d","leftValue":"={{ $json.rotina }}","rightValue":4,"operator":{"type":"number","operation":"equals"}}],"combinator":"and"},"renameOutput":true,"outputKey":"carrinho"},{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"008113d2-8596-47d5-afcd-9fbba28eecd9","leftValue":"={{ $json.rotina }}","rightValue":5,"operator":{"type":"number","operation":"equals"}}],"combinator":"and"},"renameOutput":true,"outputKey":"atendimento"},{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"e92030e4-19d9-461e-a5db-b65377b2c707","leftValue":"={{ $json.rotina }}","rightValue":6,"operator":{"type":"number","operation":"equals"}}],"combinator":"and"},"renameOutput":true,"outputKey":"mensagem"},{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"f447a1c3-5108-4683-9bda-2589de5ac9a5","leftValue":"={{ $json.rotina }}","rightValue":7,"operator":{"type":"number","operation":"equals"}}],"combinator":"and"},"renameOutput":true,"outputKey":"Fracionado"}]},"options":{}},"type":"n8n-nodes-base.switch","typeVersion":3.2,"position":[-3536,-752],"id":"83c5c999-841e-4b52-b01a-df440f3849d1","name":"Switch"},{"parameters":{"assignments":{"assignments":[{"id":"a5fd9f1d-4997-436e-bf2e-efe14d717756","name":"message.content","value":"={{ $json.message.content }}","type":"string"}]},"options":{}},"type":"n8n-nodes-base.set","typeVersion":3.4,"position":[3968,-416],"id":"f324bd22-6191-418e-86de-ebf4d82fab46","name":"FildsCarrinho"},{"parameters":{"operation":"executeQuery","query":"UPDATE pedido_temp p\nSET     status = 'enviado'\nWHERE   p.user_id =  {{ $('MontPedido').item.json.user_id }} and        p.pedido_id  = {{ $('MontPedido').item.json.pedido_id}} AND    p.id_empresa = {{ $('Dados Lead').item.json.id_empresa }}\n    \n  AND EXISTS (\n    SELECT 1\n    FROM item_pedido_temp i\n    WHERE i.user_id   = p.user_id\n      AND i.pedido_id = p.pedido_id\n      AND i.status    = 'opcoes'  \n      AND i.id_empresa =  {{ $('Dados Lead').item.json.id_empresa }}\n  );","options":{}},"type":"n8n-nodes-base.postgres","typeVersion":2.6,"position":[32,-1888],"id":"7d725b83-4762-4500-b841-81055374a6c8","name":"AjudaMontagem","credentials":{"postgres":{"id":"3NLaVyXonSrCcLE3","name":"Postgres account"}}},{"parameters":{},"type":"n8n-nodes-base.noOp","typeVersion":1,"position":[2304,-3328],"id":"e9b1a4c7-c111-4fec-b512-d0fb3c10cdc5","name":"No Operation, do nothing7","notes":"TEMPLATE DESENVOLVIDO POR NOCODE STARTUP\nhttps://nocodestartup.io/\n\nFORMAÇÃO GESTOR DE AGENTES DE IA:\nhttps://nocodestartup.io/formacao-gestor-agentes-ia/"},{"parameters":{"operation":"executeQuery","query":"\nupdate item_opcoes\nset habilitada = true  \nwhere item_id = {{ $json.item_id }}  and\nopcao =  {{ $('Code2').item.json.numero }} and \n  id_empresa =  {{ $('Dados Lead').item.json.id_empresa }}; \n","options":{}},"type":"n8n-nodes-base.postgres","typeVersion":2.6,"position":[192,-2096],"id":"967b5815-37f7-4a8c-a340-048823ebc3ce","name":"HabilitaOpcao","credentials":{"postgres":{"id":"3NLaVyXonSrCcLE3","name":"Postgres account"}}},{"parameters":{"operation":"executeQuery","query":"\nupdate item_pedido_temp as  i \nset status = 'concluido',\nnumero = o.numero ,\nnome =    '(' || o.numero::text || ') ' || o.nome,\nvalor_unitario =  o.preco,\nvalor = o.preco * i.quantidade \nfrom item_opcoes as o \nwhere i.item_id = {{ $('Montagem').item.json.item_id }}  and\ni.numero = 0 and  user_id=  {{ $('MontPedido').item.json.user_id }} and pedido_id = {{ $('MontPedido').item.json.pedido_id }} and i.id_empresa =  {{ $('Dados Lead').item.json.id_empresa }}\nand o.item_id =  i.item_id and \no.habilitada = true and i.numero = 0\n  and o.parte = 1 and o.id_empresa =  {{ $('Dados Lead').item.json.id_empresa }} ;","options":{}},"type":"n8n-nodes-base.postgres","typeVersion":2.6,"position":[368,-2096],"id":"7b4d8d69-b07a-41df-be33-95d0914d0124","name":"AtualizaOpcao","credentials":{"postgres":{"id":"3NLaVyXonSrCcLE3","name":"Postgres account"}}},{"parameters":{"operation":"executeQuery","query":"  SELECT * FROM  MontaMensagemOpcoes(    {{ $('MontPedido').item.json.user_id }} , {{ $('MontPedido').item.json.pedido_id }} , {{ $('Dados Lead').item.json.id_empresa }} ) ;","options":{}},"type":"n8n-nodes-base.postgres","typeVersion":2.6,"position":[720,-2096],"id":"fbf6143f-8e15-4b76-977d-721e821ca09d","name":"GetProximaMontagem","credentials":{"postgres":{"id":"3NLaVyXonSrCcLE3","name":"Postgres account"}}},{"parameters":{"operation":"executeQuery","query":"\nupdate item_pedido_temp as  i \nset status = 'concluido',\nnumero_fracao = o.numero ,\nnome =   ' 1/2 (' || i.numero ::text || ') ' || i.nome || ' 1/2 (' || o.numero ::text || ') ' || o.nome,\nvalor_unitario =  o.preco,\nvalor =  ( o.preco + i.valor)/2  * i.quantidade \nfrom item_opcoes as o \nwhere i.item_id = {{ $('Montagem').item.json.item_id }}  and  user_id=  {{ $('MontPedido').item.json.user_id }}\n   and pedido_id = {{ $('MontPedido').item.json.pedido_id }} \n   and i.id_empresa = {{ $('Dados Lead').item.json.id_empresa }}\nand o.item_id =  i.item_id and \no.habilitada = true and i.numero_fracao = 0\nand o.parte = 2  \nand o.id_empresa =  {{ $('Dados Lead').item.json.id_empresa }};","options":{}},"type":"n8n-nodes-base.postgres","typeVersion":2.6,"position":[544,-2096],"id":"7233eb73-4fa8-4afb-b134-5e4f2b4a593c","name":"AtualizaOpcaoParte2","credentials":{"postgres":{"id":"3NLaVyXonSrCcLE3","name":"Postgres account"}}},{"parameters":{"jsCode":" const raw = ($json.calcula_pre_pedido || \"\").replace(/\\r\\n/g, \"\\n\");\nconst txt = raw.trim();\n\nif (!txt) {\n  return { texto_alinhado: \"não existe registro\" };\n}\n\nconst lines = txt.split(\"\\n\").map(l => l.trimEnd());\n\n// Se não tiver \"Resumo:\", devolve o corpo original\nconst start = lines.findIndex(l => /resumo:/i.test(l));\nif (start === -1) {\n  return { texto_alinhado: txt };\n}\n\nlet end = lines.findIndex((l, i) => i > start && (\n  /forma de pagamento/i.test(l) || /entrega:/i.test(l) || /total:/i.test(l) || /total de itens/i.test(l)\n));\nif (end === -1) end = lines.length;\n\nconst header = lines.slice(0, start + 1);\nconst itemLines = lines.slice(start + 1, end).filter(l => l.trim());\nconst footer = lines.slice(end);\n\n// ---- parsing ajustado ----\nconst parsed = itemLines.map(line => {\n  const match = line.match(/(R\\$\\s*[\\d\\.,]+)$/);\n  if (!match) return { num: \"\", desc: line.trim(), valor: \"\" };\n\n  const valor = match[1].replace(\"R$\", \"\").trim();\n  const left = line.slice(0, match.index).trim();\n\n  // captura do número inicial (ex: (1) Nome ...)\n  const numMatch = left.match(/^\\((\\d+)\\)\\s*(.*)$/);\n  let num = \"\", desc = left;\n  if (numMatch) {\n    num = numMatch[1];\n    desc = numMatch[2].trim();\n  }\n\n  return { num, desc, valor };\n});\n\nconst maxNum = parsed.reduce((m, o) => Math.max(m, o.num.length), 0);\nconst maxDesc = parsed.reduce((m, o) => Math.max(m, o.desc.length), 0);\n\n// monta itens alinhados com cabeçalho\nconst itensAlinhados = [\n  \"Item \".padEnd(maxNum + 2, \" \") +\n  \"Descrição\".padEnd(maxDesc + 4, \" \") +\n  \"Valor\"\n];\n\nparsed.forEach(o => {\n  itensAlinhados.push(\n    o.num.padEnd(maxNum + 2, \" \") +\n    o.desc.padEnd(maxDesc + 4, \" \") +\n    \"R$ \" + o.valor\n  );\n});\n\n// ---- corpo final ----\nconst corpo = [\n  ...header,\n  ...itensAlinhados,\n  ...footer\n].join(\"\\n\");\n\nreturn { texto_alinhado: \"\\n\" + corpo + \"\\n\" };\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[-32,560],"id":"5cdd4602-8ddf-4b75-b58f-c014e88fc449","name":"Code5"},{"parameters":{"operation":"executeQuery","query":" select calcula_pre_pedido( {{ $('MontPedido').item.json.user_id }},  {{ $('MontPedido').item.json.pedido_id }},{{ $('Dados Lead').item.json.id_empresa }} );\n ","options":{}},"type":"n8n-nodes-base.postgres","typeVersion":2.6,"position":[-192,560],"id":"a4665190-e8cb-43a1-b470-2ce8b117a0f6","name":"Carrinho1","credentials":{"postgres":{"id":"3NLaVyXonSrCcLE3","name":"Postgres account"}}},{"parameters":{"workflowId":{"__rl":true,"value":"gL1FbKkYm9zGfCAA","mode":"list","cachedResultName":"Kernel Pizza"},"workflowInputs":{"mappingMode":"defineBelow","value":{"mensagem":"={{ $('MensagemTraduzida').item.json.message }}","user_id":"={{ $('MontPedido').item.json.user_id }}   ","rotina":4,"telefone":"= {{ $('Dados Lead').item.json.IdConversa }}","pedido_id":"={{ $('MontPedido').item.json.pedido_id }}","id_empresa":"={{ $('Dados Lead').item.json.id_empresa }}"},"matchingColumns":[],"schema":[{"id":"mensagem","displayName":"mensagem","required":false,"defaultMatch":false,"display":true,"canBeUsedToMatch":true,"type":"string"},{"id":"user_id","displayName":"user_id","required":false,"defaultMatch":false,"display":true,"canBeUsedToMatch":true,"type":"number"},{"id":"pedido_id","displayName":"pedido_id","required":false,"defaultMatch":false,"display":true,"canBeUsedToMatch":true,"type":"number"},{"id":"telefone","displayName":"telefone","required":false,"defaultMatch":false,"display":true,"canBeUsedToMatch":true,"type":"string"},{"id":"rotina","displayName":"rotina","required":false,"defaultMatch":false,"display":true,"canBeUsedToMatch":true,"type":"number"},{"id":"id_empresa","displayName":"id_empresa","required":false,"defaultMatch":false,"display":true,"canBeUsedToMatch":true,"type":"number","removed":false}],"attemptToConvertTypes":false,"convertFieldsToString":false}},"type":"@n8n/n8n-nodes-langchain.toolWorkflow","typeVersion":2.2,"position":[1872,-1712],"id":"ee04e4b8-f722-4b55-98a9-2c7c01ddeab5","name":"ExecutaMontagem1"},{"parameters":{"modelId":{"__rl":true,"value":"gpt-4o-mini","mode":"list","cachedResultName":"GPT-4O-MINI"},"messages":{"values":[{"content":"=O seu objetivo é montar sua pizza com suas pizzas que possuem varias opções.\nUse no telefone      "}]},"options":{}},"type":"@n8n/n8n-nodes-langchain.openAi","typeVersion":1.8,"position":[1728,-1920],"id":"e1d76639-af39-4ff7-86ed-cf6247b74659","name":"Chama Carrinho1","credentials":{"openAiApi":{"id":"YvUoOPijIpNeTjed","name":"OpenAi account"}}},{"parameters":{"operation":"executeQuery","query":"CALL ReordenarItensConcluidos( {{ $('MontPedido').item.json.user_id }}, {{ $('MontPedido').item.json.pedido_id }} , {{ $('Dados Lead').item.json.id_empresa }} );\n","options":{}},"type":"n8n-nodes-base.postgres","typeVersion":2.6,"position":[896,-2096],"id":"b3496803-20dc-47ac-adf4-4dda07129499","name":"ReordenaItem","credentials":{"postgres":{"id":"3NLaVyXonSrCcLE3","name":"Postgres account"}}},{"parameters":{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"91cd74fc-0b48-4ac5-bdf6-1c63db95d0df","leftValue":"={{$json.status}}","rightValue":"montagem","operator":{"type":"string","operation":"equals","name":"filter.operator.equals"}}],"combinator":"and"},"options":{}},"type":"n8n-nodes-base.if","typeVersion":2.2,"position":[1456,-2096],"id":"7652137f-96c2-48e2-9d28-c9dd3876dc60","name":"If"},{"parameters":{},"type":"n8n-nodes-base.noOp","typeVersion":1,"position":[2080,-1920],"id":"ea89cc39-e375-43b6-9b45-37273fbef762","name":"No Operation, do nothing","notes":"TEMPLATE DESENVOLVIDO POR NOCODE STARTUP\nhttps://nocodestartup.io/\n\nFORMAÇÃO GESTOR DE AGENTES DE IA:\nhttps://nocodestartup.io/formacao-gestor-agentes-ia/"},{"parameters":{"sessionIdType":"customKey","sessionKey":"= {{ $json.userkey }}"},"type":"@n8n/n8n-nodes-langchain.memoryPostgresChat","typeVersion":1.3,"position":[-720,1536],"id":"19087e8d-bcc4-4ce0-a4ca-a50eb1a7cb75","name":"Postgres Chat Memory","credentials":{"postgres":{"id":"3NLaVyXonSrCcLE3","name":"Postgres account"}}},{"parameters":{"options":{}},"type":"@n8n/n8n-nodes-langchain.embeddingsOpenAi","typeVersion":1.2,"position":[-480,2368],"id":"087d8439-799e-4ffe-9764-9fbbd0ddf7fc","name":"Embeddings OpenAI1","credentials":{"openAiApi":{"id":"YvUoOPijIpNeTjed","name":"OpenAi account"}}},{"parameters":{"tableName":{"__rl":true,"value":"documents","mode":"list","cachedResultName":"documents"},"options":{"queryName":"match_documents"}},"type":"@n8n/n8n-nodes-langchain.vectorStoreSupabase","typeVersion":1.3,"position":[-480,2240],"id":"d115406b-9dc2-4615-a7af-87dd9f5963e8","name":"Supabase Vector Store1","credentials":{"supabaseApi":{"id":"CcvRddDPb5xelxfb","name":"Supabase account"}}},{"parameters":{"description":" Use essa tool para coletar informações dos serviços do gestor de agente IA"},"type":"@n8n/n8n-nodes-langchain.toolVectorStore","typeVersion":1.1,"position":[-400,1856],"id":"a8b299f2-1253-4a37-b504-006338e37d88","name":"Answer questions with a vector store"},{"parameters":{"model":{"__rl":true,"mode":"list","value":"gpt-4.1-mini"},"options":{}},"type":"@n8n/n8n-nodes-langchain.lmChatOpenAi","typeVersion":1.2,"position":[-128,2288],"id":"5666fc5c-44ab-434b-b294-38852afc2a12","name":"OpenAI Chat Model1","credentials":{"openAiApi":{"id":"YvUoOPijIpNeTjed","name":"OpenAi account"}}},{"parameters":{"content":"## Agente vendedor e auxilia na compra\n** ","height":1024,"width":2048},"type":"n8n-nodes-base.stickyNote","typeVersion":1,"position":[-864,1008],"id":"0f38425f-e805-4c16-b805-fc94fe2cc000","name":"Sticky Note2"},{"parameters":{"content":"## Download Arquivo\n**Dowload do arquivo do gooogle drive ** to edit me. [Guide](https://docs.n8n.io/workflows/sticky-notes/)","height":512,"width":864,"color":4},"type":"n8n-nodes-base.stickyNote","typeVersion":1,"position":[-656,2064],"id":"1ecbfd8b-5a88-4181-ac13-a6f3ae4c7086","name":"Sticky Note3"},{"parameters":{"model":{"__rl":true,"mode":"list","value":"gpt-4.1-mini"},"options":{"temperature":0.2}},"type":"@n8n/n8n-nodes-langchain.lmChatOpenAi","typeVersion":1.2,"position":[-848,1552],"id":"9837c83b-ac8f-477a-b8d2-6100d65728f6","name":"OpenAI Chat Model5","credentials":{"openAiApi":{"id":"YvUoOPijIpNeTjed","name":"OpenAi account"}}},{"parameters":{"workflowInputs":{"values":[{"name":"mensagem"},{"name":"user_id","type":"number"},{"name":"pedido_id","type":"number"},{"name":"telefone"},{"name":"rotina","type":"number"},{"name":"id_empresa","type":"number"},{"name":"instance"},{"name":"apikey"}]}},"type":"n8n-nodes-base.executeWorkflowTrigger","typeVersion":1.1,"position":[-4400,-672],"id":"cc6d6912-cf38-4e7d-9d5e-f165d4a45897","name":"When Executed by Another Workflow"},{"parameters":{"content":"## Modulo carrinho \n** Aqui vc mostra o carrinho para o cliente ","height":608,"width":3184,"color":4},"type":"n8n-nodes-base.stickyNote","typeVersion":1,"position":[-816,384],"id":"bcc8b5de-a95c-4a51-b531-cbed80d3e98d","name":"Sticky Note"},{"parameters":{"content":"## Modulo Cardapio\n** Aqui vc montao carrinho para o cliente ","height":1088,"width":7632,"color":5},"type":"n8n-nodes-base.stickyNote","typeVersion":1,"position":[-784,-784],"id":"e2401d09-2b2b-4087-8868-ac589420c042","name":"Sticky Note1"},{"parameters":{"content":"## Modulo Fechamento\n** Aqui faz o fechamento pedindo  o endereço e  bairro forma de pagamento","height":592,"width":1200,"color":3},"type":"n8n-nodes-base.stickyNote","typeVersion":1,"position":[-800,-1360],"id":"81ee85ea-9ea5-453e-9a81-105fe89dc03d","name":"Sticky Note4"},{"parameters":{"content":"## Modulo Montagem Opções\n** Aqui vc mostra o carrinho para o cliente ","height":800,"width":3264,"color":5},"type":"n8n-nodes-base.stickyNote","typeVersion":1,"position":[-752,-2208],"id":"9022d7d4-49f0-4f40-9bbc-151c6905996e","name":"Sticky Note5"},{"parameters":{},"type":"n8n-nodes-base.noOp","typeVersion":1,"position":[960,1072],"id":"cdfb4d3c-0fed-4078-9462-a4a75550242e","name":"No Operation, do nothing9","notes":"TEMPLATE DESENVOLVIDO POR NOCODE STARTUP\nhttps://nocodestartup.io/\n\nFORMAÇÃO GESTOR DE AGENTES DE IA:\nhttps://nocodestartup.io/formacao-gestor-agentes-ia/"},{"parameters":{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"a7f9f510-5e06-4a49-b2f6-190484faeaac","leftValue":"={{$('MensagemTraduzida').item.json.message}}","rightValue":"sair","operator":{"type":"string","operation":"equals","name":"filter.operator.equals"}}],"combinator":"and"},"options":{}},"type":"n8n-nodes-base.if","typeVersion":2.2,"position":[480,1184],"id":"80c7dcb0-0636-4204-8191-919abb82db42","name":"If2"},{"parameters":{},"type":"n8n-nodes-base.noOp","typeVersion":1,"position":[768,1312],"id":"22916a34-2a82-42fb-ad53-d824a3cfec29","name":"No Operation, do nothing10","notes":"TEMPLATE DESENVOLVIDO POR NOCODE STARTUP\nhttps://nocodestartup.io/\n\nFORMAÇÃO GESTOR DE AGENTES DE IA:\nhttps://nocodestartup.io/formacao-gestor-agentes-ia/"},{"parameters":{"sessionIdType":"customKey","sessionKey":"= {{ $json.userkey }}"},"type":"@n8n/n8n-nodes-langchain.memoryPostgresChat","typeVersion":1.3,"position":[-464,-992],"id":"40ad7878-1145-4da3-b4d0-0af9aeea9e19","name":"Postgres Chat Memory2","credentials":{"postgres":{"id":"3NLaVyXonSrCcLE3","name":"Postgres account"}}},{"parameters":{},"type":"n8n-nodes-base.noOp","typeVersion":1,"position":[144,-1248],"id":"05cbadc9-f1c7-4707-8007-31b42e9934e8","name":"No Operation, do nothing2","notes":"TEMPLATE DESENVOLVIDO POR NOCODE STARTUP\nhttps://nocodestartup.io/\n\nFORMAÇÃO GESTOR DE AGENTES DE IA:\nhttps://nocodestartup.io/formacao-gestor-agentes-ia/"},{"parameters":{"promptType":"define","text":"=<mensagem_do_usuario>\n{{ $('When Executed by Another Workflow').item.json.mensagem }}\n</mensagem_do_usuario>","hasOutputParser":true,"messages":{"messageValues":[{"message":"=  {\n  \"pizzas_inteiras\": [\n    { \"quantidade\": int, \"numero\": int, \"tamanho\": str , \"nome\": str, \"pizza_referencia\": str, \"comando_original\": str  }   // pizza_referencia é uma relação com a borda ou com item \n  ],\n  \"pizzas_fracionadas\": [\n    { \"quantidade\": int, \"metade1\": int, \"metade2\": int , \"nome\": str, \n\"nome_fracao\": str , \"pizza_referencia\": str, \"comando_original\": str }\n  ],\n  \"bebidas\": [\n    { \"quantidade\": int, \"numero\": int, \"nome\": str, \"volume\": str , \"comando_original\": str }\n  ],\n \"esfirras\": [\n  { \"quantidade\": int, \"numero\": int, \"nome\": str, \"tipo\": str , \"comando_original\": str } // tipo: \"salgada\" ou \"doce\"\n  ],\n  \"bordas\": [\n   \n { \"numero\": int, \"nome\": str, \"pizza_referencia\": str , \"tamanho\": str, \"categoria\": str, \"comando_original\": str, \"pizza_pai\": int } // pizza_referencia é uma relação da borda com a pizza \n\n\n// \"pizza_referencia\" = string que identifica a pizza onde será aplicada\n  ]\n \"item\": [\n    { \"numero\": int,\"nome\": str, \"tamanho\": str , \"pizza_pai\": int , \"comando_original\": str, \"pizza_pai\": int } //  \n  ]\n\n\n}\n\n⚠️ Regras obrigatórias:\n- Sempre retorne exatamente essas 5 listas, mesmo que estejam vazias.\n- Use apenas os nomes de campos e estrutura mostrados acima.\n- Retorne **apenas o JSON válido**, sem explicações, comentários ou texto adicional.\n\nSe o usuário informar apenas ‘pizza N’, não descarte. Gere {quantidade:1, numero:N, tamanho:'media'} em pizzas_inteiras.”\n\n“Nunca omita itens ambíguos; use defaults: quantidade=1, tamanho='media'.”\n\n“Não valide com o cardápio. A validação será feita depois; sempre retorne o item.”\n\n\"A palavra uma , duas  refere-se sempre  quantidade  exemplo uma  pizza mussarela ou uma pizza presunto e queijo é quantidade..\"\n\n\n\nPrioridade de interpretação\n\nSe houver padrões de pizza fracionada no formato {Q? 1/2 A (e|,|+|/) 1/2 B}, crie um item em pizzas_fracionadas com {quantidade: Q || 1, metade1: A, metade2: B}.\n\nNunca crie pizzas_inteiras para números A ou B quando eles estiverem dentro de um padrão fracionado.\n\nSó trate “pizza N” (inteira) quando não fizer parte de um padrão 1/2 N.  \n\nSo trate   \"pizza\" se tiver explicito que se trata de \"pizza\"\n\nSo trate   \"esfirra \" se tiver explicito que se trata de \"esfirra\"\n\no comando_origianal guaro valor da string que gerou o json  exemplo :  “1 pizza 1/2 14  e 1/2 21”\n\nRegras específicas para BORDAS (muito importante):\n- Se a mensagem contiver “borda”, o texto imediatamente após a palavra “borda”\n  até antes de “ao item”, “no item”, “item”, “pizza” ou o fim da frase, é o campo \"nome\".\n- Normalize espaços e minúsculas (ex.: \"Borda   Cheddar\" → nome: \"cheddar\").\n\n- Sempre preencha \"categoria\":\"borda\" e \"pizza_pai\" com o número do item/pizza alvo quando presente (ex.: \"item_id  1\" → pizza_pai: 1).\n- Não use o campo \"item[]\"; bordas devem ir apenas em \"bordas[]\".\n- Defaults para borda quando ausentes: numero=0, tamanho=\"\", pizza_referencia=\"\".\n\n\n\nExemplos:\n\n“1 pizza 1/2 14  e 1/2 21” → pizzas_fracionadas: [{quantidade:1, metade1:14, metade2:21, nome:'', nome_fracao: '' } ]\n\n“2 1/2 10, 1/2 15” → pizzas_fracionadas: [{quantidade:2, metade1:10, metade2:15 , nome:'', nome_fracao: '' }]\n\n“14 e 21” (sem 1/2) → pizzas_inteiras: [{q:1,n:14,media},{q:1,n:21,media }]\n\n\n\n“1 pizza 1/2 mussarela  e 1/2 presunto e queijo ” → pizzas_fracionadas: [{quantidade:1, metade1:0, metade2:0, nome:mussarela, nome_fracao: presunto e queijo } ]\n\n“1 pizza meia  mussarela  e meia  presunto e queijo ” → pizzas_fracionadas: [{quantidade:1, metade1:0, metade2:0, nome:mussarela, nome_fracao: presunto e queijo } ]\n\nSe o cliente disser meia  interprete como 1/2\n\n\n \nBebidas — defaults e sinônimos (obrigatório)\n\nSe o cliente disser “lata” e não informar volume, use 350ml.\n\nSe o cliente disser “long neck” e não informar volume, use 330ml.\n\nSe o cliente pedir coca/coca-cola sem volume, use 2l.\n\nNunca rejeite bebidas por falta de volume quando se aplicar uma regra acima.\n\nNormalize o campo volume sempre em minúsculas e sem espaços (ex.: 350ml, 330ml, 2l).\n\nExemplos\n\nse vier \"1 borda catupiry para item_id 2277\"  \n\n [ { \"quantidade\": 1, \"numero\": 300, \"nome\": '', \"tipo\": 'borda' , \"comando_original\": '1 borda catupiry para item_id 2277', \"pizza_pai\": 2277}]\n\nse vier \"1 item catupiry para item_id 2277\"  \n\n [ { \"quantidade\": 1, \"numero\": 300, \"nome\": '', \"tipo\": 'item' , \"comando_original\": '1 item catupiry para item_id 2277', \"pizza_pai\": 2277}]\n\n\n“3 long neck heineken” → bebidas: [{ \"quantidade\": 3,  \"numero\": 53, \"nome\": \"heineken\", \"volume\": \"330ml\" }]\n\n“lata bud” → bebidas: [{ \"quantidade\": 1,  \"numero\": 54, \"nome\": \"budweiser\", \"volume\": \"350ml\" }]\n\n“2 coca” → bebidas: [{ \"quantidade\": 2, \"numero\": 54,  \"nome\": \"coca cola\", \"volume\": \"2l\" }]\nPedido:\n{pedido}\n\nquando numa string de comando tiver 1 pizza musssarela  1 borda chedaar na qual o codigo da pizza não for identifica,  crie no campo   \"pizza_referencia\" uma amarração entre 1 pizza mussarela e borda   \"pizza_referencia\" pode ser um codigo unico. Isso vale tambpem para pizza fracionada \n\n"}]}},"type":"@n8n/n8n-nodes-langchain.chainLlm","typeVersion":1.6,"position":[16,-544],"id":"03c7b5ef-890b-43ea-9e04-b190ee33affa","name":"LLM CONSTRUTOR","retryOnFail":true,"notes":"TEMPLATE DESENVOLVIDO POR NOCODE STARTUP\nhttps://nocodestartup.io/\n\nFORMAÇÃO GESTOR DE AGENTES DE IA:\nhttps://nocodestartup.io/formacao-gestor-agentes-ia/"},{"parameters":{"operation":"executeQuery","query":"update  pedido_temp \n  set status ='enviado'\n  where user_id =  {{ $('MontPedido').item.json.user_id }} \n  and pedido_id =  {{ $('MontPedido').item.json.pedido_id }} and id_empresa ={{ $('Dados Lead').item.json.id_empresa }};","options":{}},"type":"n8n-nodes-base.postgres","typeVersion":2.6,"position":[768,1072],"id":"87ed4ddd-095b-440d-9d8e-6d64659047da","name":"VoltaStatusCompra","credentials":{"postgres":{"id":"3NLaVyXonSrCcLE3","name":"Postgres account"}}},{"parameters":{},"type":"n8n-nodes-base.noOp","typeVersion":1,"position":[16,-1664],"id":"602cbc2e-c87d-4dfe-9914-efae860edc4d","name":"No Operation, do nothing12","notes":"TEMPLATE DESENVOLVIDO POR NOCODE STARTUP\nhttps://nocodestartup.io/\n\nFORMAÇÃO GESTOR DE AGENTES DE IA:\nhttps://nocodestartup.io/formacao-gestor-agentes-ia/"},{"parameters":{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"92b4a80f-9642-42ba-9d5b-534e35757324","leftValue":"={{ $json.count }}","rightValue":0,"operator":{"type":"number","operation":"gt"}}],"combinator":"and"},"options":{}},"type":"n8n-nodes-base.if","typeVersion":2.2,"position":[-624,608],"id":"282fed4a-f80f-4c12-937f-f79d0cf2835c","name":"If6"},{"parameters":{},"type":"n8n-nodes-base.noOp","typeVersion":1,"position":[64,768],"id":"816547d8-1c45-4b01-9b1c-2bbb52f4be75","name":"No Operation, do nothing33","notes":"TEMPLATE DESENVOLVIDO POR NOCODE STARTUP\nhttps://nocodestartup.io/\n\nFORMAÇÃO GESTOR DE AGENTES DE IA:\nhttps://nocodestartup.io/formacao-gestor-agentes-ia/"},{"parameters":{"resource":"messages-api","instanceName":"={{ $('Dados Lead').item.json.instance }}","remoteJid":"={{ $('Dados Lead').item.json.IdConversa }}","messageText":"= ```🛒Seu carrinho esta vazio.```","options_message":{}},"type":"n8n-nodes-evolution-api.evolutionApi","typeVersion":1,"position":[-208,768],"id":"c44460bd-5fab-4e05-9c03-3fb45a11ba9a","name":"MenuCardapio34","credentials":{"evolutionApi":{"id":"ApqS5DPziUrzonYT","name":"Evolution account"}}},{"parameters":{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"d1c05fb6-32da-4a44-bc69-393a6d7e07c5","leftValue":"={{ $('MensagemTraduzida').item.json.message }}","rightValue":"não","operator":{"type":"string","operation":"notEquals"}}],"combinator":"and"},"options":{}},"type":"n8n-nodes-base.if","typeVersion":2.2,"position":[-240,-2080],"id":"2a9bae29-9b7e-40f2-8a36-99bf336a655b","name":"If4"},{"parameters":{"resource":"messages-api","instanceName":"=delivery","remoteJid":"={{$('Dados Lead').item.json.IdConversa }}","messageText":"= ``` Montagem recusada pelo cliente. \n     Vamos encontrar outro caminho.\n     Consulte por um sabor, exemplo: Frango, ou Baiana.```","options_message":{"delay":4}},"type":"n8n-nodes-evolution-api.evolutionApi","typeVersion":1,"position":[240,-1888],"id":"132ea165-a6a0-4242-92a0-1ace75e2fc61","name":"MenuCardapio4","credentials":{"evolutionApi":{"id":"ApqS5DPziUrzonYT","name":"Evolution account"}}},{"parameters":{},"type":"n8n-nodes-base.noOp","typeVersion":1,"position":[432,-1888],"id":"0b4e6e01-d8a2-4b91-bdf8-747e9e337437","name":"No Operation, do nothing14","notes":"TEMPLATE DESENVOLVIDO POR NOCODE STARTUP\nhttps://nocodestartup.io/\n\nFORMAÇÃO GESTOR DE AGENTES DE IA:\nhttps://nocodestartup.io/formacao-gestor-agentes-ia/"},{"parameters":{"operation":"executeQuery","query":"UPDATE pedido_temp p\nSET     status = 'montagem'\nWHERE   p.user_id =  {{ $('MontPedido').item.json.user_id }} and     p.pedido_id  = {{ $('MontPedido').item.json.pedido_id}} and \n  p.id_empresa ={{ $('Dados Lead').item.json.id_empresa }} \n  AND EXISTS (\n    SELECT 1\n    FROM item_pedido_temp i\n    WHERE i.user_id   = p.user_id\n      AND i.pedido_id = p.pedido_id\n      AND i.status    = 'opcoes'  \n      and i.id_empresa ={{ $('Dados Lead').item.json.id_empresa }} \n  );","options":{}},"type":"n8n-nodes-base.postgres","typeVersion":2.6,"position":[3200,-416],"id":"7f5542f1-07cf-4576-a11f-971df97b1de9","name":"AjudaMontagem1","credentials":{"postgres":{"id":"3NLaVyXonSrCcLE3","name":"Postgres account"}}},{"parameters":{"content":"## Modulo carrinho \n** Aqui vc mostra o carrinho para o cliente ","height":464,"width":1392},"type":"n8n-nodes-base.stickyNote","typeVersion":1,"position":[-4480,-800],"id":"cf7a12fb-ab4c-4665-a8e3-d753fa6a9fdf","name":"Sticky Note6"},{"parameters":{"operation":"get","tableId":"pedido_temp","filters":{"conditions":[{"keyName":"user_id","keyValue":"={{ $('MontPedido').item.json.user_id }}"},{"keyName":"pedido_id","keyValue":"={{ $('MontPedido').item.json.pedido_id }}"},{"keyName":"id_empresa","keyValue":"={{ $('Dados Lead').item.json.id_empresa }}"}]}},"type":"n8n-nodes-base.supabase","typeVersion":1,"position":[336,560],"id":"0dce018a-adcc-41f6-a081-3117a67b7f5e","name":"Get Pedido","credentials":{"supabaseApi":{"id":"CcvRddDPb5xelxfb","name":"Supabase account"}}},{"parameters":{"operation":"executeQuery","query":"select count(*) ::INT from item_pedido_temp  \n  WHERE user_id =  {{ $('MontPedido').item.json.user_id }}\n  and pedido_id =  {{ $('MontPedido').item.json.pedido_id }} and id_empresa ={{ $('Dados Lead').item.json.id_empresa }};\n\n ","options":{}},"type":"n8n-nodes-base.postgres","typeVersion":2.6,"position":[-800,608],"id":"c4919120-c317-4def-8f35-fbfaf9a45749","name":"CarinhoVazio","credentials":{"postgres":{"id":"3NLaVyXonSrCcLE3","name":"Postgres account"}}},{"parameters":{"tableId":"item_pedido_temp","fieldsUi":{"fieldValues":[{"fieldId":"user_id","fieldValue":"={{ $('MontPedido').item.json.user_id }}"},{"fieldId":"quantidade","fieldValue":"=1"},{"fieldId":"tipo","fieldValue":"borda"},{"fieldId":"categoria","fieldValue":"borda"},{"fieldId":"nome","fieldValue":"={{ $('Bordas').item.json.nome }}"},{"fieldId":"numero","fieldValue":"={{ $json.numero ? $json.numero : 0 }}"},{"fieldId":"fracionada","fieldValue":"=false"},{"fieldId":"pedido_id","fieldValue":"={{ $('MontPedido').item.json.pedido_id }}"},{"fieldId":"tamanho","fieldValue":"={{ $json.tamanho }}"},{"fieldId":"pizza_referencia","fieldValue":"={{ $json.pizza_referencia }}"},{"fieldId":"comando_original","fieldValue":"={{ $json.comando_original }}"},{"fieldId":"id_empresa","fieldValue":"= {{ $('Dados Lead').item.json.id_empresa }}"},{"fieldId":"id_pizza_pai","fieldValue":"={{ $json.pizza_pai }}"}]}},"type":"n8n-nodes-base.supabase","typeVersion":1,"position":[1088,16],"id":"754e1ee8-60ce-4a79-9dc7-aa77cf2359e8","name":"BordaItem","credentials":{"supabaseApi":{"id":"CcvRddDPb5xelxfb","name":"Supabase account"}}},{"parameters":{"fieldToSplitOut":"output.mensagens","options":{}},"type":"n8n-nodes-base.splitOut","typeVersion":1,"position":[-240,2896],"id":"371dd4c5-e3c8-48fa-bb52-20df92beeed4","name":"Split Out1","notes":"TEMPLATE DESENVOLVIDO POR NOCODE STARTUP\nhttps://nocodestartup.io/\n\nFORMAÇÃO GESTOR DE AGENTES DE IA:\nhttps://nocodestartup.io/formacao-gestor-agentes-ia/"},{"parameters":{"options":{}},"type":"n8n-nodes-base.splitInBatches","typeVersion":3,"position":[80,2896],"id":"e821bada-2d96-4eb9-9797-7fab98fc518d","name":"Loop Over Items1","notes":"TEMPLATE DESENVOLVIDO POR NOCODE STARTUP\nhttps://nocodestartup.io/\n\nFORMAÇÃO GESTOR DE AGENTES DE IA:\nhttps://nocodestartup.io/formacao-gestor-agentes-ia/"},{"parameters":{"amount":2},"type":"n8n-nodes-base.wait","typeVersion":1.1,"position":[656,3184],"id":"15eee28e-dd3a-4736-82ec-ea4a6f57b4b4","name":"Wait3","webhookId":"65ff8064-0a3a-4195-bf63-5cc130c8fe48","notes":"TEMPLATE DESENVOLVIDO POR NOCODE STARTUP\nhttps://nocodestartup.io/\n\nFORMAÇÃO GESTOR DE AGENTES DE IA:\nhttps://nocodestartup.io/formacao-gestor-agentes-ia/"},{"parameters":{"options":{}},"type":"@n8n/n8n-nodes-langchain.outputParserAutofixing","typeVersion":1,"position":[-480,3088],"id":"bab1f7e8-9e27-4c02-93fb-f773186870a3","name":"Auto-fixing Output Parser1","notes":"TEMPLATE DESENVOLVIDO POR NOCODE STARTUP\nhttps://nocodestartup.io/\n\nFORMAÇÃO GESTOR DE AGENTES DE IA:\nhttps://nocodestartup.io/formacao-gestor-agentes-ia/"},{"parameters":{"model":{"__rl":true,"value":"gpt-4.1-mini","mode":"list","cachedResultName":"gpt-4.1-mini"},"options":{}},"type":"@n8n/n8n-nodes-langchain.lmChatOpenAi","typeVersion":1.2,"position":[-560,3248],"id":"ff15ad5f-ef1d-4f8b-870b-555f5adbc1a8","name":"OpenAI Chat Model3","credentials":{"openAiApi":{"id":"YvUoOPijIpNeTjed","name":"OpenAi account"}}},{"parameters":{"promptType":"define","text":"=<mensagem_do_usuario>\n {{ $('MensagemTraduzida').item.json.message }}\n</mensagem_do_usuario>","hasOutputParser":true,"messages":{"messageValues":[{"message":"=Apenas estruture a <mensagem_do_usuario> no formato JSON solicitado no output parser e seguindo as instruções de formatação abaixo. Não altere nada mais na mensagem\n\n# Formatação\n- Divida as mensagens para que fiquem naturais e humanizadas;\n- Divida as mensagens conforme estrutura do output parser para que não fiquem muito longas (maiores que 240 caractéres);\n- Não separe mensagens vazias;\n- Use quebras de linhas (\\n\\n) após pontos finais;\n- Para negrito (bold) use apenas um '' nunca duas '' (exemplo: *negrito).\n\nExemplo de formato JSON:\n{\n\"mensagens\": [\"Mensagem 0\", \"Mensagem 1\", \"Mensagem 2\"]\n}"}]}},"type":"@n8n/n8n-nodes-langchain.chainLlm","typeVersion":1.6,"position":[-576,2896],"id":"1821fa6f-6b66-4fc5-abda-1871d9d882f0","name":"Basic LLM Chain"},{"parameters":{"content":"## Humanizar Resposta\nQuebra de mensagens em mensagens menores e com contexto.","height":760,"width":580,"color":5},"type":"n8n-nodes-base.stickyNote","typeVersion":1,"position":[-640,2640],"id":"b9defda7-6888-48b1-80fb-4eda3cc16c90","name":"Sticky Note31"},{"parameters":{"content":"## Envio das Respostas ao Usuário\nEnvio das mensagens quebradas para o usuário","height":760,"width":900,"color":5},"type":"n8n-nodes-base.stickyNote","typeVersion":1,"position":[-48,2640],"id":"c53e9200-f7f6-412d-a4bc-246b02cd810d","name":"Sticky Note32"},{"parameters":{"content":"Ajuste sua instância e autenficiação da Evolution","height":300,"width":230,"color":3},"type":"n8n-nodes-base.stickyNote","typeVersion":1,"position":[336,2944],"id":"053bfb95-b6ab-4075-a9b0-17968f037d2f","name":"Sticky Note33"},{"parameters":{"resource":"messages-api","instanceName":"={{$('Dados Lead').item.json.instance.trim()}}","remoteJid":"={{$('Dados Lead').item.json.IdConversa}}","messageText":"=```{{ $json['output.mensagens'] }}```","options_message":{}},"type":"n8n-nodes-evolution-api.evolutionApi","typeVersion":1,"position":[368,3056],"id":"964992f0-33f0-42e2-9452-fb4933a48e7c","name":"CardapioConsulta1","credentials":{"evolutionApi":{"id":"ApqS5DPziUrzonYT","name":"Evolution account"}}},{"parameters":{},"type":"n8n-nodes-base.noOp","typeVersion":1,"position":[384,2720],"id":"0cc57840-437e-43ef-83b3-d0aa78776b42","name":"No Operation, do nothing15","notes":"TEMPLATE DESENVOLVIDO POR NOCODE STARTUP\nhttps://nocodestartup.io/\n\nFORMAÇÃO GESTOR DE AGENTES DE IA:\nhttps://nocodestartup.io/formacao-gestor-agentes-ia/"},{"parameters":{"schemaType":"manual","inputSchema":"{\n  \"type\": \"object\",\n  \"properties\": {\n    \"mensagens\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"string\"\n      }\n    }\n  },\n  \"required\": [\"mensagens\"]\n}"},"type":"@n8n/n8n-nodes-langchain.outputParserStructured","typeVersion":1.2,"position":[-288,3248],"id":"fa47fce4-13d1-42dc-8dd1-95e7dc8a4b33","name":"Structured Output Parser [Schema]1","notes":"TEMPLATE DESENVOLVIDO POR NOCODE STARTUP\nhttps://nocodestartup.io/\n\nFORMAÇÃO GESTOR DE AGENTES DE IA:\nhttps://nocodestartup.io/formacao-gestor-agentes-ia/"},{"parameters":{"workflowId":{"__rl":true,"value":"gL1FbKkYm9zGfCAA","mode":"list","cachedResultName":"Kernel Pizza"},"workflowInputs":{"mappingMode":"defineBelow","value":{"mensagem":"= ```{{ $json.texto }}```\n ","user_id":"= {{ $('MontPedido').item.json.user_id }}  ","rotina":6,"telefone":"= {{ $('Dados Lead').item.json.IdConversa }}","pedido_id":"={{ $('MontPedido').item.json.pedido_id }}\n\n","id_empresa":"={{ $('Dados Lead').item.json.id_empresa }}","instance":"={{ $('Dados Lead').item.json.instance }}","apikey":"={{ $('Dados Lead').item.json.apikey }}"},"matchingColumns":[],"schema":[{"id":"mensagem","displayName":"mensagem","required":false,"defaultMatch":false,"display":true,"canBeUsedToMatch":true,"type":"string"},{"id":"user_id","displayName":"user_id","required":false,"defaultMatch":false,"display":true,"canBeUsedToMatch":true,"type":"number"},{"id":"pedido_id","displayName":"pedido_id","required":false,"defaultMatch":false,"display":true,"canBeUsedToMatch":true,"type":"number"},{"id":"telefone","displayName":"telefone","required":false,"defaultMatch":false,"display":true,"canBeUsedToMatch":true,"type":"string"},{"id":"rotina","displayName":"rotina","required":false,"defaultMatch":false,"display":true,"canBeUsedToMatch":true,"type":"number"},{"id":"id_empresa","displayName":"id_empresa","required":false,"defaultMatch":false,"display":true,"canBeUsedToMatch":true,"type":"number","removed":false},{"id":"instance","displayName":"instance","required":false,"defaultMatch":false,"display":true,"canBeUsedToMatch":true,"type":"string","removed":false},{"id":"apikey","displayName":"apikey","required":false,"defaultMatch":false,"display":true,"canBeUsedToMatch":true,"type":"string","removed":false}],"attemptToConvertTypes":false,"convertFieldsToString":false}},"type":"@n8n/n8n-nodes-langchain.toolWorkflow","typeVersion":2.2,"position":[1408,784],"id":"8346869c-1cb4-4e2f-9c2a-11c2d1ac90b9","name":"ExecutaMontagem4"},{"parameters":{},"type":"n8n-nodes-base.noOp","typeVersion":1,"position":[1648,592],"id":"162a3128-d9ab-41ec-a73e-3eb452e6040a","name":"No Operation, do nothing16","notes":"TEMPLATE DESENVOLVIDO POR NOCODE STARTUP\nhttps://nocodestartup.io/\n\nFORMAÇÃO GESTOR DE AGENTES DE IA:\nhttps://nocodestartup.io/formacao-gestor-agentes-ia/"},{"parameters":{"assignments":{"assignments":[{"id":"8d56a457-c56c-4b92-955d-6fdac64b4c99","name":"texto","value":"={{ $json.texto_alinhado}}","type":"string"},{"id":"9609e8d7-0651-415c-a5c9-c0adc8555428","name":"dica","value":"={{ $('dicas').item.json.dica }}","type":"string"}]},"options":{}},"type":"n8n-nodes-base.set","typeVersion":3.4,"position":[160,560],"id":"01cc8f21-b955-493e-abb4-ebced6abbb75","name":"FieldsCarrinho"},{"parameters":{"assignments":{"assignments":[{"id":"cb9bbfc2-3f0e-467a-ae77-f64a2c0d16b4","name":"texto","value":"={{$('FieldsCarrinho').item.json.texto }}\n ```Estamos iniciando o processo de fechamento 🔓. Vamos solicitar algumas informações ℹ️ para fechar.```","type":"string"}]},"options":{}},"type":"n8n-nodes-base.set","typeVersion":3.4,"position":[816,400],"id":"505aaa02-19c2-4ed0-a869-375ca0720b6a","name":"Fechar"},{"parameters":{"assignments":{"assignments":[{"id":"c6f87764-1b56-4a13-877e-549aa05559d8","name":"texto","value":"=  {{ $('FieldsCarrinho').item.json.texto }}\n   Vamos Fechar seu pedido🔒? ","type":"string"}]},"options":{}},"type":"n8n-nodes-base.set","typeVersion":3.4,"position":[816,688],"id":"ef451012-45fc-4a6c-9fa9-98b4199bbe3a","name":"NãoFechar"},{"parameters":{"numberInputs":4},"type":"n8n-nodes-base.merge","typeVersion":3.2,"position":[1120,560],"id":"4afc9cd6-235e-4522-8901-5f8a85ab952c","name":"Merge"},{"parameters":{"operation":"executeQuery","query":"select status from pedido_temp \n  where user_id =  {{ $('MontPedido').item.json.user_id }} \n  and pedido_id =  {{ $('MontPedido').item.json.pedido_id }} and \n   id_empresa =  {{ $('Dados Lead').item.json.id_empresa }}; ","options":{}},"type":"n8n-nodes-base.postgres","typeVersion":2.6,"position":[1264,-2096],"id":"470c4d2a-ccbc-45a2-9dbb-700911345d30","name":"PegaStusPedido","credentials":{"postgres":{"id":"3NLaVyXonSrCcLE3","name":"Postgres account"}}},{"parameters":{"assignments":{"assignments":[{"id":"a842c6a3-ab23-4c9f-9902-80496bb13a18","name":"ProxMontagem","value":"={{ $('GetProximaMontagem').item.json.montamensagemopcoes }}","type":"string"}]},"options":{}},"type":"n8n-nodes-base.set","typeVersion":3.4,"position":[1072,-2096],"id":"f345fe5b-2d4c-4bbc-81c9-19cb3ac44809","name":"FieldsMontagem"},{"parameters":{"workflowId":{"__rl":true,"value":"gL1FbKkYm9zGfCAA","mode":"list","cachedResultName":"Kernel Pizza"},"workflowInputs":{"mappingMode":"defineBelow","value":{"mensagem":"={{ $('FieldsMontagem').item.json.ProxMontagem }}","user_id":"={{ $('MontPedido').item.json.user_id }}   ","telefone":"= {{ $('Dados Lead').item.json.IdConversa }}","pedido_id":"={{ $('MontPedido').item.json.pedido_id }}","id_empresa":"={{ $('Dados Lead').item.json.id_empresa }}","rotina":6},"matchingColumns":[],"schema":[{"id":"mensagem","displayName":"mensagem","required":false,"defaultMatch":false,"display":true,"canBeUsedToMatch":true,"type":"string"},{"id":"user_id","displayName":"user_id","required":false,"defaultMatch":false,"display":true,"canBeUsedToMatch":true,"type":"number"},{"id":"pedido_id","displayName":"pedido_id","required":false,"defaultMatch":false,"display":true,"canBeUsedToMatch":true,"type":"number"},{"id":"telefone","displayName":"telefone","required":false,"defaultMatch":false,"display":true,"canBeUsedToMatch":true,"type":"string"},{"id":"rotina","displayName":"rotina","required":false,"defaultMatch":false,"display":true,"canBeUsedToMatch":true,"type":"number"},{"id":"id_empresa","displayName":"id_empresa","required":false,"defaultMatch":false,"display":true,"canBeUsedToMatch":true,"type":"number","removed":false}],"attemptToConvertTypes":false,"convertFieldsToString":false}},"type":"@n8n/n8n-nodes-langchain.toolWorkflow","typeVersion":2.2,"position":[1856,-2048],"id":"d6a9866c-e173-49ed-a381-b499b4c3bd7e","name":"ExecutaMontagem"},{"parameters":{"modelId":{"__rl":true,"value":"gpt-4o-mini","mode":"list","cachedResultName":"GPT-4O-MINI"},"messages":{"values":[{"content":"=O seu objetivo é montar sua pizza com suas pizzas que possuem varias opções.\nUse no telefone     "}]},"options":{}},"type":"@n8n/n8n-nodes-langchain.openAi","typeVersion":1.8,"position":[1712,-2256],"id":"661a7b3d-1abc-47d7-82b7-c3863ae49cb5","name":"Chama Carrinho","credentials":{"openAiApi":{"id":"YvUoOPijIpNeTjed","name":"OpenAi account"}}},{"parameters":{},"type":"n8n-nodes-base.noOp","typeVersion":1,"position":[2064,-2256],"id":"fa90a3be-3a94-441d-9e49-ec840fa7e9e8","name":"No Operation, do nothing8","notes":"TEMPLATE DESENVOLVIDO POR NOCODE STARTUP\nhttps://nocodestartup.io/\n\nFORMAÇÃO GESTOR DE AGENTES DE IA:\nhttps://nocodestartup.io/formacao-gestor-agentes-ia/"},{"parameters":{"modelId":{"__rl":true,"value":"gpt-4o-mini","mode":"list","cachedResultName":"GPT-4O-MINI"},"messages":{"values":[{"content":"=O seu objetivo é montar sua pizza com suas pizzas que possuem varias opções.\nUse no telefone      \n\n   \n"}]},"options":{}},"type":"@n8n/n8n-nodes-langchain.openAi","typeVersion":1.8,"position":[1296,592],"id":"504168e5-8f81-4e2a-a3f4-843b2f6a93fc","name":"ChamaConversational","credentials":{"openAiApi":{"id":"YvUoOPijIpNeTjed","name":"OpenAi account"}}},{"parameters":{"workflowId":{"__rl":true,"value":"gL1FbKkYm9zGfCAA","mode":"list","cachedResultName":"Kernel Pizza"},"workflowInputs":{"mappingMode":"defineBelow","value":{"mensagem":"= ```{{ $json.output }}```","user_id":"= {{ $('MontPedido').item.json.user_id }}  ","rotina":6,"telefone":"= {{ $('Dados Lead').item.json.IdConversa }}","pedido_id":"={{ $('MontPedido').item.json.pedido_id }}\n\n","id_empresa":"={{ $('Dados Lead').item.json.id_empresa }}","instance":"={{ $('Dados Lead').item.json.instance }}","apikey":"={{ $('Dados Lead').item.json.apikey }}"},"matchingColumns":[],"schema":[{"id":"mensagem","displayName":"mensagem","required":false,"defaultMatch":false,"display":true,"canBeUsedToMatch":true,"type":"string"},{"id":"user_id","displayName":"user_id","required":false,"defaultMatch":false,"display":true,"canBeUsedToMatch":true,"type":"number"},{"id":"pedido_id","displayName":"pedido_id","required":false,"defaultMatch":false,"display":true,"canBeUsedToMatch":true,"type":"number"},{"id":"telefone","displayName":"telefone","required":false,"defaultMatch":false,"display":true,"canBeUsedToMatch":true,"type":"string"},{"id":"rotina","displayName":"rotina","required":false,"defaultMatch":false,"display":true,"canBeUsedToMatch":true,"type":"number"},{"id":"id_empresa","displayName":"id_empresa","required":false,"defaultMatch":false,"display":true,"canBeUsedToMatch":true,"type":"number","removed":false},{"id":"instance","displayName":"instance","required":false,"defaultMatch":false,"display":true,"canBeUsedToMatch":true,"type":"string","removed":false},{"id":"apikey","displayName":"apikey","required":false,"defaultMatch":false,"display":true,"canBeUsedToMatch":true,"type":"string","removed":false}],"attemptToConvertTypes":false,"convertFieldsToString":false}},"type":"@n8n/n8n-nodes-langchain.toolWorkflow","typeVersion":2.2,"position":[240,1344],"id":"eba482cd-9878-47b6-a497-421ac54cbe7f","name":"ExecutaMontagem5"},{"parameters":{"modelId":{"__rl":true,"value":"gpt-4o-mini","mode":"list","cachedResultName":"GPT-4O-MINI"},"messages":{"values":[{"content":"=O seu objetivo é montar sua pizza com suas pizzas que possuem varias opções.\nUse no telefone      \n\n \n"}]},"options":{}},"type":"@n8n/n8n-nodes-langchain.openAi","typeVersion":1.8,"position":[64,1168],"id":"d86e6911-125e-428f-9c5c-60228eeec1b8","name":"ChamaConversational1","credentials":{"openAiApi":{"id":"YvUoOPijIpNeTjed","name":"OpenAi account"}}},{"parameters":{"jsCode":"   const dicas = [\n  \"💡Dica: Você pode pedir pizza pelo número do cardápio.\\n Ex: '1 pizza 12 grande'\",\n  \"💡Dica: Para excluir um item:\\nDigite 'Carrinho' → depois 'Excluir item 1'\",\n  \"💡Dica: Pizza fracionada só no tamanho grande 😉\\n Ex: '1/2 mussarela e 1/2 calabresa (grande)'\",\n  \"💡Dica: Pizza fracionada só no tamanho grande 😉\\n Ex: '1/2 9  e 1/2 28  grande'\",\n  \"💡Dica: Pizza fracionada com borda cheedar 😉\\n Ex: '1/2 mussarela e 1/2 calabresa (grande) borda cheddar'\",\n  \"💡Dica: Se você já escolheu o número da Pizza? \\n😉 Ex: '1/2 21 e 1/2 12  (grande) '\",\n  \"💡Dica: Para consultar sabores basta digitar um nome, tipo: 'Marguerita' ou Frango ou Baiana\",\n  \"💡Dica: Você pode pedir também por voz 🎤 (se não entender, escreva)\",\n  \"💡Dica: Quer ver a lista de dúvidas mais comuns? \\n Digite: ajuda\",\n  \"💡Dica: Quer sair do modo ajuda? \\nDigite: sair\",\n  \"💡Dica: O modo ajuda não lhe permite comprar. \\nDigite: sair\",\n   \"💡Dica:Esta em duvida?.\\nDigite: cardapio\",\n  \"💡Dica: E se eu errar o nome da pizza?.\\n Entraremos no modo montagem.\\n'Ele vai te dar as opções.'\",\n   \"💡Dica: E se eu errar o nome da pizza?.\\n E não quiser o modo montagem?\\ 'Digite não.'\" , \n   \"💡Dica:  Consultar por nome , exemplo  'baiana', permite você ver todos os detalhes item.'\" ,\n   \"💡Dica:  O que seria a montagem? \\nAjudamos você a escolher entre duas ou mais opções apenas digitando uma opção 1...3, caso tenha.'\" \n];\n\nconst random = dicas[Math.floor(Math.random() * dicas.length)];\n\nreturn [{ json: { dica: random } }];\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[-384,560],"id":"15324b06-6d36-43fb-bd6b-e48b21a9be5f","name":"dicas"},{"parameters":{"description":"O seu objetivo é oferecer digas aleatórias ","jsCode":"    const dicas = [\n  \"💡Dica: Você pode pedir pizza pelo número do cardápio.\\n Ex: '1 pizza 12 grande'\",\n  \"💡Dica: Para excluir um item:\\nDigite 'Carrinho' → depois 'Excluir item 1'\",\n  \"💡Dica: Pizza fracionada só no tamanho grande 😉\\n Ex: '1/2 mussarela e 1/2 calabresa (grande)'\",\n  \"💡Dica: Pizza fracionada só no tamanho grande 😉\\n Ex: '1/2 9  e 1/2 28  grande'\",\n  \"💡Dica: Pizza fracionada com borda cheedar 😉\\n Ex: '1/2 mussarela e 1/2 calabresa (grande) borda cheddar'\",\n  \"💡Dica: Se você já escolheu o número da Pizza? \\n😉 Ex: '1/2 21 e 1/2 12  (grande) '\",\n  \"💡Dica: Para consultar sabores basta digitar um nome, tipo: 'Marguerita' ou Frango ou Baiana\",\n  \"💡Dica: Você pode pedir também por voz 🎤 (se não entender, escreva)\",\n  \"💡Dica: Quer ver a lista de dúvidas mais comuns? \\n Digite: ajuda\",\n  \"💡Dica: Quer sair do modo ajuda? \\nDigite: sair\",\n  \"💡Dica: O modo ajuda não lhe permite comprar. \\nDigite: sair\",\n   \"💡Dica:Esta em duvida?.\\nDigite: cardapio\",\n  \"💡Dica: E se eu errar o nome da pizza?.\\n Entraremos no modo montagem.\\n'Ele vai te dar as opções.'\",\n   \"💡Dica: E se eu errar o nome da pizza?.\\n E não quiser o modo montagem?\\ 'Digite não.'\" , \n   \"💡Dica:  Consultar por nome , exemplo  'baiana', permite você ver todos os detalhes item.'\" ,\n   \"💡Dica:  O que seria a montagem? \\nAjudamos você a escolher entre duas ou mais opções apenas digitando uma opção 1...3, caso tenha.'\" \n];\n\nconst random = dicas[Math.floor(Math.random() * dicas.length)];\n\nreturn [{ json: { dica: random } }];\n"},"type":"@n8n/n8n-nodes-langchain.toolCode","typeVersion":1.3,"position":[288,1568],"id":"24a58ff1-b5fc-49cb-8446-9ca308a48f25","name":"GetDicaAleatoria"},{"parameters":{"rules":{"values":[{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"leftValue":"={{ $json.status }}","rightValue":"finalizar","operator":{"type":"string","operation":"equals"},"id":"81bd78a6-4445-40b6-aa35-3297adbbb043"}],"combinator":"and"},"renameOutput":true,"outputKey":"finalizar"},{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"f8a93896-352c-4558-a8e1-ab396b888320","leftValue":"={{ $json.status }}","rightValue":"ingrediente","operator":{"type":"string","operation":"equals","name":"filter.operator.equals"}}],"combinator":"and"},"renameOutput":true,"outputKey":"ingrediente"},{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"b8425a1a-ae21-474b-a489-90e98ab03d11","leftValue":"={{ $json.status }}","rightValue":"enviado","operator":{"type":"string","operation":"equals","name":"filter.operator.equals"}}],"combinator":"and"},"renameOutput":true,"outputKey":"enviado"}]},"options":{}},"type":"n8n-nodes-base.switch","typeVersion":3.2,"position":[512,544],"id":"d7a059c1-c2ae-49d3-9797-9ab479eaf51a","name":"Switch1"},{"parameters":{"assignments":{"assignments":[{"id":"cb9bbfc2-3f0e-467a-ae77-f64a2c0d16b4","name":"texto","value":"= {{$('FieldsCarrinho').item.json.texto }}\n```Ok, vou ajudar você a adicionar itens.\nPor favor, informe quais itens deseja adicionar ao seu carrinho. \nExemplos:  Adicionar borda cheedar   ao item 1 \n           Adicionar item  mussarela ao item 2\nObs: Item 1 ou 2 é relativo ao carrinho.\nEscolha o item do seu carrinho de 1 a ...{{ $('CarinhoVazio').item.json.count }}``` ","type":"string"}]},"options":{}},"type":"n8n-nodes-base.set","typeVersion":3.4,"position":[816,544],"id":"11542d90-9322-498e-9d04-ee4d486ffac4","name":"AddIngridiente"},{"parameters":{"content":"##  Consular e escolher Opções\nCancelar um pedido","height":952,"width":1604,"color":5},"type":"n8n-nodes-base.stickyNote","typeVersion":1,"position":[-576,3440],"id":"dfa39c33-6758-4971-a724-883a0f8db73d","name":"Sticky Note34"},{"parameters":{"workflowId":{"__rl":true,"value":"gl0RYjlzfJknufRk","mode":"list","cachedResultName":"consulta"},"workflowInputs":{"mappingMode":"defineBelow","value":{"mensagem":"={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('mensagem', `sabor`, 'string') }}","user_id":"= {{ $('MontPedido').item.json.user_id }}  ","rotina":7,"telefone":"={{ $('Dados Lead').item.json.IdConversa }}","pedido_id":"={{ $('MontPedido').item.json.pedido_id }}","id_empresa":"={{ $('Dados Lead').item.json.id_empresa }}"},"matchingColumns":[],"schema":[{"id":"mensagem","displayName":"mensagem","required":false,"defaultMatch":false,"display":true,"canBeUsedToMatch":true,"type":"string"},{"id":"user_id","displayName":"user_id","required":false,"defaultMatch":false,"display":true,"canBeUsedToMatch":true,"type":"number"},{"id":"pedido_id","displayName":"pedido_id","required":false,"defaultMatch":false,"display":true,"canBeUsedToMatch":true,"type":"number"},{"id":"telefone","displayName":"telefone","required":false,"defaultMatch":false,"display":true,"canBeUsedToMatch":true,"type":"string"},{"id":"rotina","displayName":"rotina","required":false,"defaultMatch":false,"display":true,"canBeUsedToMatch":true,"type":"number"},{"id":"id_empresa","displayName":"id_empresa","required":false,"defaultMatch":false,"display":true,"canBeUsedToMatch":true,"type":"number","removed":false}],"attemptToConvertTypes":false,"convertFieldsToString":false}},"type":"@n8n/n8n-nodes-langchain.toolWorkflow","typeVersion":2.2,"position":[-448,1552],"id":"f92419c4-7795-4a5c-9faa-2e675554afc1","name":"ConsultaOnlineVendas"},{"parameters":{"description":"Intencao  de comra da pizzaria","workflowId":{"__rl":true,"value":"gL1FbKkYm9zGfCAA","mode":"list","cachedResultName":"Kernel Pizza"},"workflowInputs":{"mappingMode":"defineBelow","value":{"user_id":"={{ $('MontPedido').item.json.user_id }}","pedido_id":"= {{ $('MontPedido').item.json.pedido_id }}","id_empresa":"={{ $('Dados Lead').item.json.id_empresa }}","rotina":1,"mensagem":"={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('mensagem', `itencao  `, 'string') }}","telefone":"={{ $('Dados Lead').item.json.IdConversa }}","instance":"= {{ $('Dados Lead').item.json.instance }}","apikey":"={{ $('Dados Lead').item.json.apikey }}"},"matchingColumns":[],"schema":[{"id":"mensagem","displayName":"mensagem","required":false,"defaultMatch":false,"display":true,"canBeUsedToMatch":true,"type":"string","removed":false},{"id":"user_id","displayName":"user_id","required":false,"defaultMatch":false,"display":true,"canBeUsedToMatch":true,"type":"number","removed":false},{"id":"pedido_id","displayName":"pedido_id","required":false,"defaultMatch":false,"display":true,"canBeUsedToMatch":true,"type":"number","removed":false},{"id":"telefone","displayName":"telefone","required":false,"defaultMatch":false,"display":true,"canBeUsedToMatch":true,"type":"string","removed":false},{"id":"rotina","displayName":"rotina","required":false,"defaultMatch":false,"display":true,"canBeUsedToMatch":true,"type":"number","removed":false},{"id":"id_empresa","displayName":"id_empresa","required":false,"defaultMatch":false,"display":true,"canBeUsedToMatch":true,"type":"number","removed":false},{"id":"instance","displayName":"instance","required":false,"defaultMatch":false,"display":true,"canBeUsedToMatch":true,"type":"string","removed":false},{"id":"apikey","displayName":"apikey","required":false,"defaultMatch":false,"display":true,"canBeUsedToMatch":true,"type":"string","removed":false}],"attemptToConvertTypes":false,"convertFieldsToString":false}},"type":"@n8n/n8n-nodes-langchain.toolWorkflow","typeVersion":2.2,"position":[-320,1648],"id":"2c80ee40-6d47-4fcd-9068-e60d6c00e774","name":"IntencaoCompra"},{"parameters":{},"type":"n8n-nodes-base.noOp","typeVersion":1,"position":[4416,-416],"id":"8a310352-d226-4885-a4c6-e130b1b13aeb","name":"No Operation, do nothing22","notes":"TEMPLATE DESENVOLVIDO POR NOCODE STARTUP\nhttps://nocodestartup.io/\n\nFORMAÇÃO GESTOR DE AGENTES DE IA:\nhttps://nocodestartup.io/formacao-gestor-agentes-ia/"},{"parameters":{"sessionIdType":"customKey","sessionKey":"5516992975836"},"type":"@n8n/n8n-nodes-langchain.memoryPostgresChat","typeVersion":1.3,"position":[-240,3952],"id":"a6e965c4-2a6a-4889-8b99-57ae3431428d","name":"Postgres Chat Memory1","credentials":{"postgres":{"id":"3NLaVyXonSrCcLE3","name":"Postgres account"}}},{"parameters":{"model":{"__rl":true,"mode":"list","value":"gpt-4.1-mini"},"options":{}},"type":"@n8n/n8n-nodes-langchain.lmChatOpenAi","typeVersion":1.2,"position":[-384,3952],"id":"20724aef-242f-4c0b-b33b-47f91596962f","name":"OpenAI Chat Model6","credentials":{"openAiApi":{"id":"YvUoOPijIpNeTjed","name":"OpenAi account"}}},{"parameters":{},"type":"n8n-nodes-base.noOp","typeVersion":1,"position":[528,3728],"id":"0251bb9b-d024-42d1-a9f6-3fa529e45f7a","name":"No Operation, do nothing24","notes":"TEMPLATE DESENVOLVIDO POR NOCODE STARTUP\nhttps://nocodestartup.io/\n\nFORMAÇÃO GESTOR DE AGENTES DE IA:\nhttps://nocodestartup.io/formacao-gestor-agentes-ia/"},{"parameters":{"workflowId":{"__rl":true,"value":"gL1FbKkYm9zGfCAA","mode":"list","cachedResultName":"Kernel Pizza"},"workflowInputs":{"mappingMode":"defineBelow","value":{"mensagem":"= ```{{ $json.output }}```","user_id":"= {{ $('MontPedido').item.json.user_id }}  ","rotina":6,"telefone":"= {{ $('Dados Lead').item.json.IdConversa }}","pedido_id":"={{ $('MontPedido').item.json.pedido_id }}\n\n","id_empresa":"={{ $('Dados Lead').item.json.id_empresa }}"},"matchingColumns":[],"schema":[{"id":"mensagem","displayName":"mensagem","required":false,"defaultMatch":false,"display":true,"canBeUsedToMatch":true,"type":"string"},{"id":"user_id","displayName":"user_id","required":false,"defaultMatch":false,"display":true,"canBeUsedToMatch":true,"type":"number"},{"id":"pedido_id","displayName":"pedido_id","required":false,"defaultMatch":false,"display":true,"canBeUsedToMatch":true,"type":"number"},{"id":"telefone","displayName":"telefone","required":false,"defaultMatch":false,"display":true,"canBeUsedToMatch":true,"type":"string"},{"id":"rotina","displayName":"rotina","required":false,"defaultMatch":false,"display":true,"canBeUsedToMatch":true,"type":"number"},{"id":"id_empresa","displayName":"id_empresa","required":false,"defaultMatch":false,"display":true,"canBeUsedToMatch":true,"type":"number","removed":false}],"attemptToConvertTypes":false,"convertFieldsToString":false}},"type":"@n8n/n8n-nodes-langchain.toolWorkflow","typeVersion":2.2,"position":[208,3888],"id":"a186385b-3069-48c1-8461-c5003c4b619e","name":"ExecutaMontagem8"},{"parameters":{"modelId":{"__rl":true,"value":"gpt-4o-mini","mode":"list","cachedResultName":"GPT-4O-MINI"},"messages":{"values":[{"content":"=O seu objetivo é montar sua pizza com suas pizzas que possuem varias opções.\nUse no telefone      \n\n \n"}]},"options":{}},"type":"@n8n/n8n-nodes-langchain.openAi","typeVersion":1.8,"position":[112,3728],"id":"2f9dabf2-1300-460f-82b7-2731fb2d2a4c","name":"ChamaConversational2","credentials":{"openAiApi":{"id":"YvUoOPijIpNeTjed","name":"OpenAi account"}}},{"parameters":{"description":"O seu objetivo é oferecer digas aleatórias ","jsCode":"    const dicas = [\n  \"💡Dica: Você pode pedir pizza pelo número do cardápio.\\n Ex: '1 pizza 12 grande'\",\n  \"💡Dica: Para excluir um item:\\nDigite 'Carrinho' → depois 'Excluir item 1'\",\n  \"💡Dica: Pizza fracionada só no tamanho grande 😉\\n Ex: '1/2 mussarela e 1/2 calabresa (grande)'\",\n  \"💡Dica: Pizza fracionada só no tamanho grande 😉\\n Ex: '1/2 9  e 1/2 28  grande'\",\n  \"💡Dica: Pizza fracionada com borda cheedar 😉\\n Ex: '1/2 mussarela e 1/2 calabresa (grande) borda cheddar'\",\n  \"💡Dica: Se você já escolheu o número da Pizza? \\n😉 Ex: '1/2 21 e 1/2 12  (grande) '\",\n  \"💡Dica: Para consultar sabores basta digitar um nome, tipo: 'Marguerita' ou Frango ou Baiana\",\n  \"💡Dica: Você pode pedir também por voz 🎤 (se não entender, escreva)\",\n  \"💡Dica: Quer ver a lista de dúvidas mais comuns? \\n Digite: ajuda\",\n  \"💡Dica: Quer sair do modo ajuda? \\nDigite: sair\",\n  \"💡Dica: O modo ajuda não lhe permite comprar. \\nDigite: sair\",\n   \"💡Dica:Esta em duvida?.\\nDigite: cardapio\",\n  \"💡Dica: E se eu errar o nome da pizza?.\\n Entraremos no modo montagem.\\n'Ele vai te dar as opções.'\",\n   \"💡Dica: E se eu errar o nome da pizza?.\\n E não quiser o modo montagem?\\ 'Digite não.'\" , \n   \"💡Dica:  Consultar por nome , exemplo  'baiana', permite você ver todos os detalhes item.'\" ,\n   \"💡Dica:  O que seria a montagem? \\nAjudamos você a escolher entre duas ou mais opções apenas digitando uma opção 1...3, caso tenha.'\" \n];\n\nconst random = dicas[Math.floor(Math.random() * dicas.length)];\n\nreturn [{ json: { dica: random } }];\n"},"type":"@n8n/n8n-nodes-langchain.toolCode","typeVersion":1.3,"position":[80,3920],"id":"df9dd785-f353-4322-9da2-6451d3ae34c2","name":"GetDicaAleatoria1"},{"parameters":{"workflowId":{"__rl":true,"value":"gl0RYjlzfJknufRk","mode":"list","cachedResultName":"consulta"},"workflowInputs":{"mappingMode":"defineBelow","value":{"mensagem":"={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('mensagem', `sabor`, 'string') }}","user_id":"= {{ $('MontPedido').item.json.user_id }}  ","rotina":6,"telefone":"={{ $('Dados Lead').item.json.IdConversa }}","pedido_id":"={{ $('MontPedido').item.json.pedido_id }}","id_empresa":"={{ $('Dados Lead').item.json.id_empresa }}"},"matchingColumns":[],"schema":[{"id":"mensagem","displayName":"mensagem","required":false,"defaultMatch":false,"display":true,"canBeUsedToMatch":true,"type":"string"},{"id":"user_id","displayName":"user_id","required":false,"defaultMatch":false,"display":true,"canBeUsedToMatch":true,"type":"number"},{"id":"pedido_id","displayName":"pedido_id","required":false,"defaultMatch":false,"display":true,"canBeUsedToMatch":true,"type":"number"},{"id":"telefone","displayName":"telefone","required":false,"defaultMatch":false,"display":true,"canBeUsedToMatch":true,"type":"string"},{"id":"rotina","displayName":"rotina","required":false,"defaultMatch":false,"display":true,"canBeUsedToMatch":true,"type":"number"},{"id":"id_empresa","displayName":"id_empresa","required":false,"defaultMatch":false,"display":true,"canBeUsedToMatch":true,"type":"number","removed":false}],"attemptToConvertTypes":false,"convertFieldsToString":false}},"type":"@n8n/n8n-nodes-langchain.toolWorkflow","typeVersion":2.2,"position":[-128,3952],"id":"a9bcff56-5e05-4114-ab1f-111ddaa601f7","name":"ConsultaOnlineVendas3"},{"parameters":{"workflowId":{"__rl":true,"value":"gL1FbKkYm9zGfCAA","mode":"list","cachedResultName":"Kernel Pizza"},"workflowInputs":{"mappingMode":"defineBelow","value":{"user_id":"={{ $('MontPedido').item.json.user_id }}","pedido_id":"= {{ $('MontPedido').item.json.pedido_id }}","id_empresa":"={{ $('Dados Lead').item.json.id_empresa }}","rotina":1,"mensagem":"={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('mensagem', `itencao`, 'string') }}","telefone":"={{ $('Dados Lead').item.json.IdConversa }}"},"matchingColumns":[],"schema":[{"id":"mensagem","displayName":"mensagem","required":false,"defaultMatch":false,"display":true,"canBeUsedToMatch":true,"type":"string","removed":false},{"id":"user_id","displayName":"user_id","required":false,"defaultMatch":false,"display":true,"canBeUsedToMatch":true,"type":"number","removed":false},{"id":"pedido_id","displayName":"pedido_id","required":false,"defaultMatch":false,"display":true,"canBeUsedToMatch":true,"type":"number","removed":false},{"id":"telefone","displayName":"telefone","required":false,"defaultMatch":false,"display":true,"canBeUsedToMatch":true,"type":"string","removed":false},{"id":"rotina","displayName":"rotina","required":false,"defaultMatch":false,"display":true,"canBeUsedToMatch":true,"type":"number","removed":false},{"id":"id_empresa","displayName":"id_empresa","required":false,"defaultMatch":false,"display":true,"canBeUsedToMatch":true,"type":"number","removed":false}],"attemptToConvertTypes":false,"convertFieldsToString":false}},"type":"@n8n/n8n-nodes-langchain.toolWorkflow","typeVersion":2.2,"position":[-16,3936],"id":"1952852a-8163-4561-84e0-946e2200be39","name":"IntencaoCompra1"},{"parameters":{"operation":"executeQuery","query":"select  item_id, numero, nome , tamanho , quantidade from item_pedido_temp  where user_id = {{ $('MontPedido').item.json.user_id }}  and pedido_id ={{ $('MontPedido').item.json.pedido_id }}  and id_empresa =  {{ $('Dados Lead').item.json.id_empresa }}  and categoria = 'pizza'","options":{}},"type":"n8n-nodes-base.postgresTool","typeVersion":2.6,"position":[-32,4064],"id":"cad8f727-b13b-4041-b4ad-6c5d495b81db","name":"GetCarrinho1","credentials":{"postgres":{"id":"3NLaVyXonSrCcLE3","name":"Postgres account"}}},{"parameters":{"promptType":"define","text":"= {{ $('MensagemTraduzida').item.json.message }}","options":{"systemMessage":"= 👨‍🍳 Agente: Fracionador — Montador Técnico de Pizzas Fracionadas\n\nFale como humano, simpático e direto. Máx. 2 frases por resposta; 1 pergunta por vez.\n\nClima caloroso, zero formalidade.\n\nVerdades e limites\n\nNão invente itens, tamanhos, preços, promoções.\n\n  \n\nPapel:\nVocê é um assistente técnico responsável por resolver apenas pizzas fracionadas.\n\nEntrada:\n- Texto natural vindo do agente principal (ex.: “1 pizza 1/2 dom edu e 1/2 marguerita grande com borda catupiry”)\n- user_id, pedido_id, (opcional) tamanho, borda\n\nRegras principais:\n1️⃣ Identifique sempre se é fracionada (“1/2”).\n2️⃣ Separe os dois sabores (metade 1 e metade 2).\n3️⃣ Chame `ConsultaOnlineVendas(\"pizza <sabor>\")` para cada metade.\n4️⃣ Grave cada metade com `GravarFracionado(parte, numero, tamanho?)`.\n   - Pergunte tamanho apenas na 1ª metade.\n5️⃣ Se houver “com borda ...”, chame `ConsultaOnlineVendas(\"borda <sabor>\")` e guarde o número.\n6️⃣ Quando as duas metades estiverem resolvidas, chame:\n   - Se houver borda → `IntencaoCompra(\"1 pizza 1/2 n1 e 1/2 n2 <tamanho> com borda nborda\")`\n   - Caso contrário → `IntencaoCompra(\"1 pizza 1/2 n1 e 1/2 n2 <tamanho>\")`\n\nMemória de apoio:\n- Use `n8nhistories` para recuperar dados pendentes de metades anteriores.\n- Use `item_pedido_temp` para validar se já existe a parte 1.\n- Sempre finalize com status `\"fracionada_concluida\"`.\n\nRespostas:\n- Curta, técnica e objetiva.\n- Nunca invente sabor, número, tamanho ou preço.\n- Retorne apenas logs de ação (“✅ Metade 1 gravada com sucesso”, “➡️ Aguardando segunda metade” etc.)\n\nProibição:\n❌ Não fazer upsell, sugestões ou brincadeiras.\n❌ Não confirmar duas vezes o mesmo sabor.\n❌ Não chamar `IntencaoCompra` antes de resolver ambas as metades.\n"}},"type":"@n8n/n8n-nodes-langchain.agent","typeVersion":2.2,"position":[-240,3712],"id":"59d24172-8cbe-4e4d-bf79-0c947c43aa30","name":"Assistente Fracionado"},{"parameters":{"workflowId":{"__rl":true,"value":"gL1FbKkYm9zGfCAA","mode":"list","cachedResultName":"Kernel Pizza"},"workflowInputs":{"mappingMode":"defineBelow","value":{"mensagem":"= {{ $('MensagemTraduzida').item.json.message }}","user_id":"= {{ $('MontPedido').item.json.user_id }}  ","rotina":6,"telefone":"= {{ $('Dados Lead').item.json.IdConversa }}","pedido_id":"={{ $('MontPedido').item.json.pedido_id }}\n\n","id_empresa":"={{ $('Dados Lead').item.json.id_empresa }}"},"matchingColumns":[],"schema":[{"id":"mensagem","displayName":"mensagem","required":false,"defaultMatch":false,"display":true,"canBeUsedToMatch":true,"type":"string"},{"id":"user_id","displayName":"user_id","required":false,"defaultMatch":false,"display":true,"canBeUsedToMatch":true,"type":"number"},{"id":"pedido_id","displayName":"pedido_id","required":false,"defaultMatch":false,"display":true,"canBeUsedToMatch":true,"type":"number"},{"id":"telefone","displayName":"telefone","required":false,"defaultMatch":false,"display":true,"canBeUsedToMatch":true,"type":"string"},{"id":"rotina","displayName":"rotina","required":false,"defaultMatch":false,"display":true,"canBeUsedToMatch":true,"type":"number"},{"id":"id_empresa","displayName":"id_empresa","required":false,"defaultMatch":false,"display":true,"canBeUsedToMatch":true,"type":"number","removed":false}],"attemptToConvertTypes":false,"convertFieldsToString":false}},"type":"@n8n/n8n-nodes-langchain.toolWorkflow","typeVersion":2.2,"position":[96,1536],"id":"1016dab6-905c-4fc3-9db2-52f4f14efa16","name":"AgenteFracionador"},{"parameters":{"operation":"executeQuery","query":" \n\n\nINSERT INTO log_debug (etapa, comando, retorno, user_id, pedido_id, id_empresa )\nVALUES ('IntencaoCompra', '{{ $('When Executed by Another Workflow').item.json.mensagem }}', 'chamada recebida', {{ $('DadoPedido').item.json.user_id }}, {{ $('DadoPedido').item.json.pedido_id }} , {{ $('Dados Lead').item.json.id_empresa }});","options":{}},"type":"n8n-nodes-base.postgres","typeVersion":2.6,"position":[4176,-416],"id":"dd6c4046-0b5d-407e-8fd9-ab9884f9425e","name":"LogFinal","credentials":{"postgres":{"id":"3NLaVyXonSrCcLE3","name":"Postgres account"}}},{"parameters":{"operation":"executeQuery","query":" \n\n\nINSERT INTO log_debug (etapa, comando, retorno, user_id, pedido_id, id_empresa )\nVALUES ('Inicio processo', '{{ $('MensagemTraduzida').item.json.message }}', 'chamada recebida {{ $('Dados Lead').item.json.instance }}', {{ $json.user_id }} , {{ $json.pedido_id }} ,  {{ $('Dados Lead').item.json.id_empresa }});","options":{}},"type":"n8n-nodes-base.postgres","typeVersion":2.6,"position":[-368,-528],"id":"9a7a727f-ec4f-423a-9ca1-c4c84e876316","name":"LogFinal1","credentials":{"postgres":{"id":"3NLaVyXonSrCcLE3","name":"Postgres account"}}},{"parameters":{"description":"Chama essa tool para buscar um sabor no cardápio","workflowId":{"__rl":true,"value":"gl0RYjlzfJknufRk","mode":"list","cachedResultName":"consulta"},"workflowInputs":{"mappingMode":"defineBelow","value":{"mensagem":"={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('mensagem', `ingrediente`, 'string') }}","user_id":"= {{ $('MontPedido').item.json.user_id }}  ","rotina":7,"telefone":"={{ $('Dados Lead').item.json.IdConversa }}","pedido_id":"={{ $('MontPedido').item.json.pedido_id }}","id_empresa":"={{ $('Dados Lead').item.json.id_empresa }}"},"matchingColumns":[],"schema":[{"id":"mensagem","displayName":"mensagem","required":false,"defaultMatch":false,"display":true,"canBeUsedToMatch":true,"type":"string"},{"id":"user_id","displayName":"user_id","required":false,"defaultMatch":false,"display":true,"canBeUsedToMatch":true,"type":"number"},{"id":"pedido_id","displayName":"pedido_id","required":false,"defaultMatch":false,"display":true,"canBeUsedToMatch":true,"type":"number"},{"id":"telefone","displayName":"telefone","required":false,"defaultMatch":false,"display":true,"canBeUsedToMatch":true,"type":"string"},{"id":"rotina","displayName":"rotina","required":false,"defaultMatch":false,"display":true,"canBeUsedToMatch":true,"type":"number"},{"id":"id_empresa","displayName":"id_empresa","required":false,"defaultMatch":false,"display":true,"canBeUsedToMatch":true,"type":"number","removed":false}],"attemptToConvertTypes":false,"convertFieldsToString":false}},"type":"@n8n/n8n-nodes-langchain.toolWorkflow","typeVersion":2.2,"position":[-64,1520],"id":"032953cb-243d-45ae-8804-2bbbc16b854a","name":"BuscaPizzaSabor"},{"parameters":{"descriptionType":"manual","toolDescription":"Execute a SQL query in Postgres","operation":"executeQuery","query":" SELECT \n  ROW_NUMBER() OVER (ORDER BY unaccent(lower(trim(categoria)))) AS numero,\n  unaccent(lower(trim(categoria))) AS categoria\nFROM cardapio\nWHERE id_empresa = {{ $('Dados Lead').item.json.id_empresa }}\n  AND categoria IS NOT NULL\n  AND trim(categoria) <> ''\nGROUP BY unaccent(lower(trim(categoria)))\nORDER BY numero;","options":{}},"type":"n8n-nodes-base.postgresTool","typeVersion":2.6,"position":[-192,1568],"id":"6e818dff-6d27-4c36-a12a-29fbf63f3b57","name":"GetCategoria","credentials":{"postgres":{"id":"3NLaVyXonSrCcLE3","name":"Postgres account"}}},{"parameters":{"workflowId":{"__rl":true,"value":"gl0RYjlzfJknufRk","mode":"list","cachedResultName":"consulta"},"workflowInputs":{"mappingMode":"defineBelow","value":{"mensagem":"=carrinho","user_id":"= {{ $('MontPedido').item.json.user_id }}  ","rotina":1,"telefone":"={{ $('Dados Lead').item.json.IdConversa }}","pedido_id":"={{ $('MontPedido').item.json.pedido_id }}","id_empresa":"={{ $('Dados Lead').item.json.id_empresa }}"},"matchingColumns":[],"schema":[{"id":"mensagem","displayName":"mensagem","required":false,"defaultMatch":false,"display":true,"canBeUsedToMatch":true,"type":"string"},{"id":"user_id","displayName":"user_id","required":false,"defaultMatch":false,"display":true,"canBeUsedToMatch":true,"type":"number"},{"id":"pedido_id","displayName":"pedido_id","required":false,"defaultMatch":false,"display":true,"canBeUsedToMatch":true,"type":"number"},{"id":"telefone","displayName":"telefone","required":false,"defaultMatch":false,"display":true,"canBeUsedToMatch":true,"type":"string"},{"id":"rotina","displayName":"rotina","required":false,"defaultMatch":false,"display":true,"canBeUsedToMatch":true,"type":"number"},{"id":"id_empresa","displayName":"id_empresa","required":false,"defaultMatch":false,"display":true,"canBeUsedToMatch":true,"type":"number","removed":false}],"attemptToConvertTypes":false,"convertFieldsToString":false}},"type":"@n8n/n8n-nodes-langchain.toolWorkflow","typeVersion":2.2,"position":[-576,1568],"id":"acc38088-f392-475f-b94d-9b3bf6d301e1","name":"Compras"},{"parameters":{"promptType":"define","text":"= {{ $('MensagemTraduzida').item.json.message }}","options":{"systemMessage":"=  📜 PROMPT DO SISTEMA — ATENDENTE DE PIZZARIA (versão final revisada)    \n\nid_empresa= {{ $('Dados Lead').item.json.id_empresa }}\n🎭 Persona\n\nSou um atendente cordial, objetivo e educado.\nFalo em frases curtas (máx. 2 por vez) e 1 pergunta por mensagem.\nNão invento nada.\n\n🧠 Instrução inicial:\nAo iniciar um novo dia ou uma nova conversa, a IA DEVE SEMPRE responder imediatamente com a seguinte mensagem (sem variações):\n\n Olá, seja bem-vindo(a) ao atendimento digital da La Cantina.\n\n Nosso horário de atendimento é de Terça a Doming das 18:00h às 23:00h\n Digite o número das opções abaixo para o que deseja solicitar. \n Já estou enviando o Menu, aguarde... \n\n \n\n\n📦 Quantidade (regra geral)\n- A IA deve solicitar QUANTIDADE apenas para pizza e bebida.\n- Para borda e item adicional, NUNCA perguntar quantidade (tratar como 1 por execução).\n- Caso o cliente já informe quantidade espontaneamente (“quero 3 cocas”, “2 pizzas calabresa média”):\n  → Defina QUANTIDADE = número informado e NÃO repita a pergunta de quantidade.\n- Sempre valide que QUANTIDADE ≥ 1 (se inválida ou ausente, pergunte novamente).\n- Após gravar, ZERE QUANTIDADE (volta ao default 1).\n\n\n🧠 Contexto permanente:\nVocê é um atendente de pizzaria chamado Mestre-Pizzaiôlo 🍕.\nTodo o diálogo é sobre pedidos de pizza, esfirra, bebida ou borda.\nSempre interprete “pequena”, “média” e “grande” como tamanhos de pizza.\nNunca pergunte se o cliente está falando de roupas, objetos ou qualquer outra coisa.\nNunca saia do contexto de pizzaria.\n\n \n\n \n⚙️ Modo determinístico de execução\n\nA IA deve obedecer estritamente aos comandos programados, sem interpretar ou decidir se deve ou não executar.\nEla não pode avaliar, pular, nem omitir etapas.\nSe um comando existir no fluxo, ele deve ser executado sempre, sem exceção.\nNão pule nenhuma instrução , nunca pule não ache nada não invente execute..  IntencaoCompra, ConsultaOnlineVendas, GetCarrinho caso esteja na sequencia do prompt...Se esta na progração execute.. .  Se a consulta ja foi feita uma vez e o cliente solicitar novamente execute novamente se estiver programado. \nO sistema é multi empresa.. *OBRIGATORIAMENTE*  NUNCA, NUNCA consulte a memoria. Obedela rigorosamente as chamadas de tool  ..   A IA tem chance de 99,9% de pegar dados errado.\n\n\n\nRegras complementares:\n\nSe uma tool (IntencaoCompra, ConsultaOnlineVendas, GetCarrinho, etc.) for chamada, execute exatamente como instruído, e espere o retorno.\n\nNunca decida por conta própria não executar algo — mesmo que pareça redundante.\n\nNunca suponha que a operação foi feita.\nApenas considere concluído quando o retorno da tool confirmar sucesso (true ou equivalente).\n\nNão há espaço para “acho que já executei”: cada chamada é uma ordem.\n\nSe algo falhar, repita a execução ou informe erro ao cliente; não pule o passo.\nVeracidade de execução:\nA IA nunca deve afirmar que algo foi gravado, adicionado ou confirmado sem que a operação tenha realmente ocorrido.\nMensagens como “Item adicionado ao carrinho” ou “Pedido registrado” só podem ser ditas após a tool confirmar o sucesso da execução.\nSe o cliente verificar o carrinho e o item não estiver lá, a IA falhou no processo.\n\nPreservação de contexto:\nDurante todo o atendimento, a IA deve manter o estado completo do carrinho e do cliente, garantindo continuidade entre ciclos, e evitando qualquer perda de contexto.\n⚙️ Ferramentas (formato obrigatório)\n\nGetCategoria(id_empresa ) → retorna se a categoria existe (pizza, bebida, borda etc.)\n\nConsultaOnlineVendas(\"<consulta>\",id_empresa) → busca por nome/número/sabor. Passe texto simples.\n\nBuscaPizzaSabor(\"<ingredientes>\",id_empresa) → não usar aqui (apenas ConsultaOnlineVendas).\n\nIntencaoComando(\"<string>\",id_empresa) → grava o pedido (sempre string simples).\n\nCompras() → retorna o carrinho atual do cliente, incluindo item_id, nome, categoria, tamanho e preço.\n\nCompras() → retorna o carrinho atual do cliente (itens, pizzas, bordas, tamanhos, preços).\n\n\n\n⚙️ Ferramentas (formato obrigatório)\n\nGetCategoria(id_empresa) → retorna se a categoria existe (pizza, bebida, borda etc.)\nConsultaOnlineVendas(\"<consulta>\",id_empresa) → busca por nome/número/sabor. Passe texto simples.\nBuscaPizzaSabor(\"<ingredientes>\",id_empresa) → não usar aqui (apenas ConsultaOnlineVendas).\nIntencaoComando(\"<string>\",id_empresa) → grava o pedido (sempre string simples).\nCompras() → retorna o carrinho atual do cliente, incluindo item_id, nome, categoria, tamanho e preço.\n\n⚙️ Regras de execução obrigatória\n❗ Sempre que uma ferramenta for mencionada, ela deve ser executada.\n❗ Nunca ignore uma chamada de tool.\n❗ Se o sistema não conseguir executar a tool, deve repetir a chamada até obter resposta válida.\n❗ Se ainda falhar, retorne: \"Erro: tool não respondeu.\" (sem inventar resposta)\n\n \n\n\n🧱 Regra de ouro das ferramentas\n\nSempre chame tools com um único argumento string (sem JSON, chaves, colchetes ou variáveis visíveis ao cliente).\nExemplo correto:\n\nConsultaOnlineVendas(\"pizza dom edu\",id_empresa)\nIntencaoComando(\"1 pizza 15 grande\",id_empresa)\n\n🧠 Estado (memória interna,id_empresa)\n\nCATEGORIA_ESCOLHIDA (string,id_empresa)\n\nOPCOES (lista temporária de {indice, numero, nome, descricao, precos})\n\nMODO_FRAC (bool; default falso)\n\nSABOR1_NUM, SABOR1_NOME\n\nSABOR2_NUM, SABOR2_NOME\n\nTAMANHO (pequena | média | grande)\n\nQUANTIDADE (número inteiro; default 1; válido só para pizza e bebida; ignore para borda e item)\n\nZerar tudo após gravar um item.\n \n- MODO_FRAC = false\n- SABOR1_NUM = null; SABOR1_NOME = null\n- SABOR2_NUM = null; SABOR2_NOME = null\n- TAMANHO = null\n- OPCOES = []\n- QUANTIDADE = 1\n\n\n\n\n\n👋 Abertura (sempre cordial)\n\n1️⃣ Verifique categorias suportadas pela loja:\n\nConsultaCategoria(\"pizza\",id_empresa)\nConsultaCategoria(\"bebida\",id_empresa)\nConsultaCategoria(\"borda\",id_empresa)\n\n\nListe  somente uma vez apenas as que existirem, numeradas:\n\n1) Pizza\n2) Bebida\n3) Borda\n4) Itens\n5) Esfirra\n\n🤖 Interpretação inteligente de categoria\n\n- Sempre que o cliente disser algo como “quero de calabresa”, “de palmito”, “quero coca”, tente inferir automaticamente a categoria.\n- Se a categoria for óbvia (ex: calabresa → pizza, coca → bebida), siga o fluxo normalmente.\n- Se for ambígua, pergunte gentilmente: “Quando você diz ___, está falando de pizza, esfirra ou outro item?”\n- Evite exigir que o cliente escolha a categoria se o contexto já indicar claramente qual é.\n- Para mensagens neutras (“oi”, “olá”, “tudo bem”), apenas cumprimente e puxe assunto com naturalidade (ex: “Tudo ótimo 🍕 pensando em pedir o quê hoje?”).\n \n \n⚙️ FLUXO PIZZA — CORRIGIDO E BLOQUEADO POR ETAPA\n\nPergunte:\n\n“Você quer uma pizza inteira  ou fracionada (1/2 Atum 1/2 Mussarela) ?”\n\nSe o cliente disser “meia”, “metade” ou “1/2” ⇒ MODO_FRAC = true\n\n“Beleza 🍕, vamos montar a fracionada. Qual o sabor da primeira metade?”\n\nCaso contrário ⇒ MODO_FRAC = false\n\n“Certo 🍕, pizza inteira! Me diga no mínimo  dois sabores ou nome da pizza.”\n\n🔍 Busca do sabor\n\nAssim que o cliente disser o sabor ou nome:\n→ chame imediatamente\n\nConsultaOnlineVendas(\"pizza <termo_cliente>\",id_empresa)\n\n\nSe 0 resultados →\n\n“Não achei pizzas com esse termo 😕. Quer tentar outro nome/sabor?”\n\nSe >6 resultados →\n\n“Voltaram muitas opções; pode especificar melhor?”\n\nSe 1 a 6 resultados, liste:\n\n1️⃣ Dom Edu — nº 23  \nDescrição: Lombo Canadense, Catupiry, Mussarela  \n💰 Grande R$ 60 | Média R$ 55 | Pequena R$ 50\n\n2️⃣ Atum — nº 11  \nDescrição: Atum, Tomate, Azeitona  \n💰 Grande R$ 58 | Média R$ 52 | Pequena R$ 46\n\n\nPergunte:\n\n“Qual número da lista você quer (1–N)?”\n\nGuarde a lista em OPCOES [{indice, numero, nome}].\n⚠️ Nunca grave o índice digitado — use OPCOES[indice].numero.\n\n\n\n Pizza inteira (corrigido)\n\nApós o cliente escolher a opção:\n\n“Pequena, média ou grande?”\n\n⚠️ Não grave ainda.\nEspere o cliente responder o tamanho.\n\nEm seguida, se o cliente NÃO informou quantidade antes:\n→ Pergunte: “Quantas unidades desta pizza você quer?”\n\nEspere o cliente responder o tamanho e só então execute:\nEspere o cliente responder o tamanho e só então, **execute obrigatoriamente**:\n \nQuando tiver TAMANHO e QUANTIDADE:\n→ Execute obrigatoriamente:\nIntencaoComando(\"<QUANTIDADE> pizza \" + OPCOES[indice_escolhido].numero + \" \" + TAMANHO, id_empresa)\n\nConfirmação (sempre após sucesso da tool):\n“Perfeito 🍕 adicionei {{QUANTIDADE}}x {{OPCOES[indice_escolhido].nome}} {{TAMANHO}} ao seu pedido.”\n“Quer adicionar mais alguma coisa ou posso fechar?”\n\n\n\n\n\n\n\n 🌗 FLUXO: Pizza Fracionada\n\nQuando MODO_FRAC = true:\n\n1️⃣ Resolva o primeiro sabor:\n   👉 Chame imediatamente:\n   ConsultaOnlineVendas(\"pizza <termo_cliente>\",id_empresa)\n   ✅ Liste opções (1–6) e pergunte: “Qual número da lista você quer (1–N)?”\n\n   Quando o cliente responder:\n   → salve SABOR1_NUM = OPCOES[indice].numero  \n   → salve SABOR1_NOME = OPCOES[indice].nome\n\n   Depois diga:\n   “Beleza 🍕 metade 1: {{SABOR1_NOME}}. Agora, qual a outra metade?”\n    Zerar OPCOES (para forçar nova busca)\n    ⚠️ Espere o resultado da tool e liste novamente as opções (1–6)\n     Nunca reutilize as opções anteriores (OPCOES da primeira metade).\n\n2️⃣ Resolva a segunda metade:\n   👉 Chame novamente:\n  Chame obrigatoriamente a ferramenta (não pule este passo):\n   ConsultaOnlineVendas(\"pizza <termo_cliente>\",id_empresa)\n   ✅ Liste opções (1–6) e pergunte: “Qual número da lista você quer (1–N)?”\n\n   Quando o cliente responder:\n   → salve SABOR2_NUM = OPCOES[indice].numero  \n   → salve SABOR2_NOME = OPCOES[indice].nome\n\n3️⃣ Se SABOR1_NUM = SABOR2_NUM:\n   “Confirmando: quer as duas metades iguais ({{SABOR1_NOME}})?”\n   Se sim → tratar como pizza inteira:\n   IntencaoComando(\"1 pizza \" + SABOR1_NUM + \" \" + TAMANHO)\n   (pular para passo 7️⃣)\n\n4️⃣ Se forem diferentes → prossiga.\n\n5️⃣ Pergunte o tamanho:\n   “Pequena, média ou grande?”\n Se o cliente NÃO informou quantidade antes:\n     “Quantas unidades desta pizza fracionada você quer?”\n\n6️⃣ Quando o cliente responder o tamanho:\n   ⚙️ Execute:  IntencaoComando(\"<QUANTIDADE> pizza 1/2 \" + SABOR1_NUM + \" e 1/2 \" + SABOR2_NUM + \" \" + TAMANHO, id_empresa)\n\n7️⃣ Resposta ao cliente:\n    \n“Perfeito 🍕 anotei {{QUANTIDADE}}x 1/2 {{SABOR1_NOME}} e 1/2 {{SABOR2_NOME}} {{TAMANHO}}.”\n\n   “Quer adicionar mais algo?”\n\n8️⃣ Zerar estado:\n   MODO_FRAC = false  \n   SABOR1_NUM = null  \n   SABOR2_NUM = null  \n   TAMANHO = null  \n   OPCOES = []\n\n \n \n🥤 Fluxo: Bebida — robusto (substitui o anterior)\n\nObjetivo: quando o cliente disser “1 coca cola 600ml”, SEMPRE consultar o cardápio e NUNCA usar memória automática. Só use memória se o cliente pedir explicitamente (“igual da última/mesma de antes”).\n\nDetecção inicial\n- Se a mensagem contiver termos de bebida (coca, guaraná, pepsi, refrigerante, água, suco etc.) OU um número + termo de bebida (ex.: “1 coca”, “2 guaraná”):\n  → IGNORAR memória prévia.\n- Só considerar memória se o cliente disser explicitamente: “igual da última”, “o mesmo de antes”, “repete o anterior”.\n\n1) Extrair dados\n- QUANTIDADE: número no início ou antes do termo (ex.: “1 coca cola 600ml” → QUANTIDADE=1).\n- TERMO bruto: o restante do texto (ex.: “coca cola 600ml”).\n- Normalizar TERMO de bebida:\n  - NOME_LIMPO = remove volume/embalagem (2L, 1,5 L, 600ml, lata, pet, garrafa, retornável etc.). Ex.: “coca cola”.\n  - VOLUME (opcional): se existir, guardar como string (ex.: “600ml” ou “2L”).\n\n2) Consultar (sempre que houver bebida)\n- Chamar: ConsultaOnlineVendas(\"bebida \" + NOME_LIMPO, id_empresa)\n- Se VOLUME estiver presente, usar como filtro (no SQL ou pós-processamento):\n  - Se VOLUME existe → priorize itens cujo `volume` contém VOLUME.\n  - Se VOLUME não existe → não filtrar por volume.\n\n3) Apresentar opções (1–6 itens)\n- Mostrar com NÚMERO REAL do cardápio.\n- Se retornar 1 item que bate com o NOME_LIMPO (e com VOLUME, se houver), selecione automaticamente.\n\n4) Definir escolha\n- NUMERO_ESCOLHIDO = número real do cardápio.\n- NOME_ESCOLHIDO = nome do item.\n\n5) Quantidade\n- Se QUANTIDADE já veio na frase, NÃO perguntar de novo.\n- Se não veio, perguntar: “Quantas unidades dessa bebida você quer?”\n- Validar: QUANTIDADE ≥ 1.\n\n6) Registrar (sempre número real, nunca índice)\n- IntencaoComando(QUANTIDADE + \" bebida \" + NUMERO_ESCOLHIDO, id_empresa)\n\n7) Confirmação\n- “Adicionei {{QUANTIDADE}}x {{NOME_ESCOLHIDO}} ao seu pedido. Quer mais alguma coisa?”\n\nRegras adicionais\n- “coca” sozinho → consultar e, se vierem muitas, perguntar gentilmente o detalhe mínimo (“2L, 600ml, lata?”).\n- Nunca pergunte “tamanho do copo”.\n- Prioridade: se a mensagem atual tem quantidade/volume/termo de bebida, NÃO usar memória; memória só quando o cliente pedir explicitamente repetir o anterior.\n\n⚠️ Nunca pergunte “tamanho do copo” .\n\n\n🌈 Fluxo: Borda\n\n\n1️⃣ Pergunta inicial\n\n“Qual borda você gostaria?\nPor exemplo: cheddar, catupiry, mussarela.”\n\n🔹 Tool:\n\nConsultaOnlineVendas(\"borda <sabor>\",id_empresa)\n\n\n2️⃣ Exibição de resultados\nMostre:\n\nEscolha 1 ou mais (pode ser múltiplo: 1,2,3):\n1️⃣ (<numero>) <nome> – R$ <preco>\nℹ️ Descrição: <descricao>\n\n\nPergunte:\n\n“Qual número da lista você quer? (pode ser múltiplo: 1,2,3)”\n\n3️⃣ Exibir pizzas do carrinho (antes de gravar a borda)\n🔹 Tool:\n\nexecute Compras(id_empresa)\n\n\nMostre o retorno formatado:\n\n“Estas são as pizzas no seu carrinho:”\n1️⃣ (<item_id>) <nome_pizza> – <tamanho>\nℹ️ Descrição: <descricao>\n\n\nPergunte:\n\n“Qual número da pizza você quer adicionar a borda?”\n\n4️⃣ Gravação da borda vinculada à pizza\nPara cada borda escolhida <n> e pizza <item_id> selecionada:\n\n🔹 Tool:\n\nIntencaoComando(\"1 borda <n> para item_id <item_id>\",id_empresa)\n\n\n\n\n5️⃣ Confirmação\n\n“Adicionei a borda. Quer mais algo?”\n\n⚙️ Regras\n ❌Nunca invente nada execute as tools obrigatoriamente.\n\n❌ Nunca pergunte tamanho (borda não tem tamanho).\n\n✅  execute: Compras(id_empresa) .\n\n✅ se  \"Compras(id_empresa)\" \" não retornar pizza:\n\n“Você ainda não escolheu uma pizza para adicionar a borda.”\n→ volte ao fluxo de pizzas.\n\n✅ Valide se a borda existe e tem preço antes de gravar.\n\n✅ Pode aceitar múltiplas bordas em uma mesma pizza.\n\n💬 Exemplo real de uso\nIA: Qual borda você gostaria? (ex: cheddar, catupiry, mussarela)\nCliente: Catupiry\nIA: \n1️⃣ (300) Borda: Catupiry – R$ 15\nQual número da lista você quer? (1)\nCliente: 1\nIA:\n\nExecute Compras(id_empresa) \n\nEstas são as pizzas no seu carrinho:\n1️⃣ (23) Atum com mussarela – grande\n2️⃣ (25) Calabresa – grande\n3️⃣ (1) 1/2 Calabresa (23) 1/2  Mussarela com atum – grande\n\nQual número da pizza você quer adicionar a borda?\nCliente: 2\nIA: Adicionei a borda. Quer mais algo?\n3) Gravar borda vinculada ao item de pizza\nPara cada número escolhido <n>:\n\nChame: IntencaoComando(\"1 borda <n> para item_id <ULTIMO_ITEM_PIZZA>\",id_empresa)\n\n4) Confirmar\n\n“Adicionei a borda. Quer mais algo?”\n\nRegras\n\nNunca perguntar tamanho (borda não tem tamanho).\n\nValidar que a opção existe e tem preço antes de gravar.\n\nSe a consulta não retornar nada:\n\n“Não encontrei essa borda. Quer tentar outro sabor (ex.: cheddar, catupiry, mussarela)?”\nDepois:\n\n“Adicionei a borda. Quer mais algo?”\n\n🔒 Quantidade em borda:\n- Nunca perguntar quantidade para borda.\n- Trate cada execução como 1 unidade por borda selecionada.\n\n\n🌈 Fluxo: Item adicional\n\n1️⃣ Pergunta inicial\n\n“Qual item adicional você gostaria?\nPor exemplo: molho extra, maionese, bacon, azeitona.”\n\n🔹 Tool:\n\nConsultaOnlineVendas(\"item <sabor>\",id_empresa)\n\n\n2️⃣ Exibição de resultados\n\nMostre:\n\nEscolha 1 ou mais (pode ser múltiplo: 1,2,3):\n1️⃣ (<numero>) <nome> – R$ <preco>\nℹ️ Descrição: <descricao>\n\n\nPergunte:\n\n“Qual número da lista você quer adicionar? (pode ser múltiplo: 1,2,3)”\n\n3️⃣ Exibir pizzas do carrinho (antes de gravar o item)\n🔹 Tool:\n\n 👉 Chame obrigatoriamente: Compras(id_empresa)\n\n\nMostre o retorno formatado:\n\nEstas são as pizzas no seu carrinho:\n1️⃣ (<item_id>) <nome_pizza> – <tamanho>\nℹ️ Descrição: <descricao>\n\n\nPergunte:\n\n“Qual número da pizza você quer adicionar o item?”\n\n4️⃣ Gravação do item vinculado à pizza\n\nPara cada item escolhido <n> e pizza <item_id> selecionada:\n\n🔹 Tool:\n\nIntencaoComando(\"1 item <n> para item_id <item_id>\",id_empresa)\n\n\n5️⃣ Confirmação\n\n“Adicionei o item. Quer mais algo?”\n\n⚙️ Regras\n\n❌ Nunca pergunte tamanho (itens não têm tamanho).\n✅ Se execute Compras() não retornar pizza:\n\n“Você ainda não escolheu uma pizza para adicionar o item.”\n→ volte ao fluxo de pizzas.\n\n✅ Valide se o item existe e tem preço antes de gravar.\n✅ Pode aceitar múltiplos itens em uma mesma pizza.\n\n💬 Exemplo real de uso\n\nIA: “Qual item adicional você gostaria? (ex: maionese, bacon, azeitona)”\nCliente: “Bacon”\nIA:\n\n1️⃣ (501) Item: Bacon – R$ 5\nQual número da lista você quer? (1)\n\n\nCliente: 1\nIA:\n\nEstas são as pizzas no seu carrinho:\n1️⃣ (23) Atum com mussarela – grande\n2️⃣ (25) Calabresa – grande\nQual número da pizza você quer adicionar o item?\n\n\nCliente: 2\nIA:\n“Adicionei o item bacon. Quer mais algo?”\n\n🔒 Quantidade em item adicional:\n- Nunca perguntar quantidade para item adicional.\n- Trate cada execução como 1 unidade por item selecionado.\n\n\n🌈 Fluxo: Esfirra \n\n\n🧩 1️⃣ Pergunta inicial\n\n“Qual esfirra você gostaria? (ex: carne, frango, mussarela)”\n\n🔹 Tool:\n\n\n 👉 Chame obrigatoriamente:  ConsultaOnlineVendas(\"esfirra <termo>\", id_empresa)\n\n\n🔹 Retorna lista 1–6:\n\n1️⃣ (55) Esfirra de Carne – R$ 8\nℹ️ Descrição: carne moída, cebola e tempero árabe\n...\n\n🧩 2️⃣ Escolha do cliente\n\n“Qual número da lista você quer?”\n\n🔹 O agente pega:\n\nNUMERO = OPCOES[indice_escolhido].numero\nNOME   = OPCOES[indice_escolhido].nome\n\n🧩 3️⃣ Quantidade\n\n“Quantas esfirras você quer?”\n\n🔹 O agente salva:\n\nQTD = número informado\n\n🧩 4️⃣ Gravação da intenção (sem inventar nada)\n\nTool obrigatória:\n\n 👉 Chame obrigatoriamente: IntencaoComando(QTD + \" esfirra \" + NUMERO, id_empresa)\n\n\nExemplo real:\n\nIntencaoComando(\"3 esfirra 55\", id_empresa)\n\n🧩 5️⃣ Confirmação ao cliente\n\n“Perfeito 😋 adicionei 3 esfirras de carne ao seu pedido. Quer mais alguma coisa?\n\n⚙️ Regras\n ❌Nunca invente nada execute as tools obrigatoriamente.\n ❌Nunca invente sistema multi empresa. Esfirra 55 pode não estar em outra empresa.\n ❌Nunca consulte memoria , execute a tool ou as tools\n\n🔁 Repetição do ciclo\n\nSe o cliente quiser continuar:\n→ mostre novamente as categorias válidas via ConsultaCategoria\n→ reinicie o fluxo.\n\nSe o cliente disser para fechar:\n\n“Perfeito, vou fechar seu pedido 🍕. Obrigado!”\n\n⚠️ Regras duras (anti-erros)\n\n❌ Nunca grave usando o índice digitado.\n✅ Sempre converta para o número real do cardápio (OPCOES[indice].numero).\n\n❌ Nunca responda com “receita”, “ingredientes” ou sugestões culinárias.\n✅ Sempre busque no cardápio.\n\n❌ Nunca pergunte “tamanho do copo” para bebidas.\n\n✅ Sempre execute IntencaoComando(id_empresa) após receber o tamanho.\n\n✅ Mostre apenas as categorias que realmente existem (ConsultaCategoria = true).\n\n💬 Modelos de respostas (curtas e cordiais)\n\n“Olá! 😄 Temos: 1️⃣ Pizza 2️⃣ Bebida{{se_borda}}. Qual categoria você quer?”\n\n“Prefere fracionada ou inteira?”\n\n“Me diga um sabor ou nome de pizza.”\n\n“Aqui estão as opções (1–3). Qual número você quer?”\n\n“Pequena, média ou grande?”\n\n“Perfeito, adicionei ao seu pedido. Quer mais alguma coisa?”\n\n🧩 Observações internas de engenharia\n\nUse ReAct simples → pensar → agir (tool) → observar → falar.\n\nZero alucinação: se a tool não retornar, peça para refinar em 1 frase.\n\nLinguagem: PT-BR, voz ativa, direta e natural."}},"type":"@n8n/n8n-nodes-langchain.agent","typeVersion":2.2,"position":[-496,1168],"id":"bac24c6b-78f4-4a48-abb8-8ee20e58b8c6","name":"Mestre ATENDENTE DE PIZZARIA"},{"parameters":{"jsCode":" // Entrada esperada do node anterior\nconst user_id =  $('MontPedido').first().json.user_id || 0;\nconst pedido_id = $('MontPedido').first().json.pedido_id  || 0;\nconst id_empresa = $('Dados Lead').first().json.id_empresa  || 0;\nconst telefone = (  $('Dados Lead').first().json.telefone|| \"\").toString();\n\n// 1️⃣ Concatena tudo como string\nconst base = `${user_id}${pedido_id}${id_empresa}${telefone}`.replace(/\\D/g, \"\");\n\n// 2️⃣ Gera hash numérico curto e estável\nlet hash = 0;\nfor (let i = 0; i < base.length; i++) {\n  hash = (hash * 31 + base.charCodeAt(i)) >>> 0;\n}\n\n// 3️⃣ Retorna número positivo curto\nconst userkey = hash;\n\n// ✅ 4️⃣ Retorno no formato correto pro n8n\nreturn [\n  {\n    json: {\n      user_id,\n      pedido_id,\n      id_empresa,\n      telefone,\n      userkey\n    }\n  }\n];\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[-752,1168],"id":"7098c43c-fc21-4be5-96fe-0755c60478ba","name":"MemoryKey2"},{"parameters":{"jsCode":" return [\n  {\n    json: {\n      memoryKey: $(\"Dados Lead\").item.json.telefone \n              || $(\"Dados Lead\").item.json.fone \n              || $(\"Dados Lead\").item.json.contato?.telefone\n    }\n  }\n];"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[2096,-3392],"id":"cd2b2a90-f82d-4da1-b868-b1d5b9911967","name":"MemoryKeqy"},{"parameters":{"jsCode":" // Entrada esperada do node anterior\nconst user_id =  $('MontPedido').first().json.user_id || 0;\nconst pedido_id = $('MontPedido').first().json.pedido_id  || 0;\nconst id_empresa = $('Dados Lead').first().json.id_empresa  || 0;\nconst telefone = (  $('Dados Lead').first().json.telefone|| \"\").toString();\n\n// 1️⃣ Concatena tudo como string\nconst base = `${user_id}${pedido_id}${id_empresa}${telefone}`.replace(/\\D/g, \"\");\n\n// 2️⃣ Gera hash numérico curto e estável\nlet hash = 0;\nfor (let i = 0; i < base.length; i++) {\n  hash = (hash * 31 + base.charCodeAt(i)) >>> 0;\n}\n\n// 3️⃣ Retorna número positivo curto\nconst userkey = hash;\n\n// ✅ 4️⃣ Retorno no formato correto pro n8n\nreturn [\n  {\n    json: {\n      user_id,\n      pedido_id,\n      id_empresa,\n      telefone,\n      userkey\n    }\n  }\n];\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[-704,-1248],"id":"6b66b4f9-82da-4816-8564-f361aac7ffe4","name":"MemoryKey"},{"parameters":{"operation":"executeQuery","query":"UPDATE item_pedido_temp AS ip\nSET id_pizza_pai = ip.item_id\nFROM item_pedido_temp AS ib\nWHERE ib.id_pizza_pai = ip.item_id                          -- 🔹 nova condição principal\n  AND ib.categoria IN ('item','borda')\n  AND ip.categoria = 'pizza'\n  AND ib.status = 'inicio'\n  AND ip.status = 'concluido'\n  AND ib.user_id = ip.user_id\n  AND ib.pedido_id = ip.pedido_id\n  AND ib.id_empresa = ip.id_empresa\n  AND ib.user_id = {{ $('DadoPedido').item.json.user_id }}\n  AND ib.pedido_id = {{ $('DadoPedido').item.json.pedido_id }}\n  AND ib.id_empresa = {{ $('Dados Lead').item.json.id_empresa }}; ","options":{}},"type":"n8n-nodes-base.postgres","typeVersion":2.6,"position":[2512,-416],"id":"50645330-8e41-46c4-8bec-18c0450f4b25","name":"VinculaPizzaBordaItem","credentials":{"postgres":{"id":"3NLaVyXonSrCcLE3","name":"Postgres account"}}}],"connections":{"RejeitaItem":{"main":[[{"node":"ConcluiTudo","type":"main","index":0}]]},"Bebidas":{"main":[[{"node":"Itembebida","type":"main","index":0}]]},"Pizzas Fracionada":{"main":[[{"node":"ItemFracionado","type":"main","index":0}]]},"Pizzas Inteira":{"main":[[{"node":"ItemInteira","type":"main","index":0}]]},"Esfirra":{"main":[[{"node":"ItemEsfirra","type":"main","index":0}]]},"Itembebida":{"main":[[{"node":"Merge1","type":"main","index":0}]]},"ItemFracionado":{"main":[[{"node":"Merge1","type":"main","index":1}]]},"ItemInteira":{"main":[[{"node":"Merge1","type":"main","index":2}]]},"ItemEsfirra":{"main":[[{"node":"Merge1","type":"main","index":3}]]},"Auto-fixing Output Parser":{"ai_outputParser":[[{"node":"LLM CONSTRUTOR","type":"ai_outputParser","index":0}]]},"OrdenaPedido":{"main":[[{"node":"FildsCarrinho","type":"main","index":0}]]},"ConcluiTudo":{"main":[[{"node":"OrdenaPedido","type":"main","index":0}]]},"Bordas":{"main":[[{"node":"BordaItem","type":"main","index":0}]]},"Merge1":{"main":[[{"node":"DadoPedido","type":"main","index":0}]]},"OpenAI Chat Model":{"ai_languageModel":[[{"node":"Auto-fixing Output Parser","type":"ai_languageModel","index":0},{"node":"LLM CONSTRUTOR","type":"ai_languageModel","index":0}]]},"Structured Output Parser [Schema]":{"ai_outputParser":[[{"node":"Auto-fixing Output Parser","type":"ai_outputParser","index":0}]]},"item4":{"main":[[{"node":"Item4","type":"main","index":0}]]},"Item4":{"main":[[{"node":"Merge1","type":"main","index":4}]]},"AtualizaValorPizzaFracionada2":{"main":[[{"node":"AjudaMontagem1","type":"main","index":0}]]},"AtualizaValorItem2":{"main":[[{"node":"AtualizaValorPizzaFracionada2","type":"main","index":0}]]},"MontPedido":{"main":[[{"node":"Switch","type":"main","index":0}]]},"DadoPedido":{"main":[[{"node":"VinculaBordaItemPizza","type":"main","index":0}]]},"Dados Lead":{"main":[[{"node":"MontPedido","type":"main","index":0}]]},"VinculaBordaItemPizza":{"main":[[{"node":"VinculaPizzaBordaItem","type":"main","index":0}]]},"OpenAI Chat Model2":{"ai_languageModel":[[{"node":"Fechamento1","type":"ai_languageModel","index":0}]]},"SalvaEndereco":{"ai_tool":[[{"node":"Fechamento1","type":"ai_tool","index":0}]]},"Comentario":{"ai_tool":[[{"node":"Fechamento1","type":"ai_tool","index":0}]]},"SalvaFormaPagto":{"ai_tool":[[{"node":"Fechamento1","type":"ai_tool","index":0}]]},"Fechamento":{"ai_tool":[[{"node":"Fechamento1","type":"ai_tool","index":0}]]},"Execute a SQL query in Postgres":{"ai_tool":[[]]},"MensagemTraduzida":{"main":[[{"node":"Dados Lead","type":"main","index":0}]]},"Montagem":{"main":[[{"node":"HabilitaOpcao","type":"main","index":0}]]},"Code2":{"main":[[{"node":"If1","type":"main","index":0}]]},"If1":{"main":[[{"node":"If4","type":"main","index":0}],[{"node":"MenuCardapio3","type":"main","index":0}]]},"Fechamento1":{"main":[[{"node":"MenuCardapio1","type":"main","index":0}]]},"Switch":{"main":[[],[{"node":"MemoryKey","type":"main","index":0}],[{"node":"LogFinal1","type":"main","index":0}],[{"node":"CarinhoVazio","type":"main","index":0}],[{"node":"MemoryKey2","type":"main","index":0}],[{"node":"Basic LLM Chain","type":"main","index":0}],[]]},"FildsCarrinho":{"main":[[{"node":"LogFinal","type":"main","index":0}]]},"AjudaMontagem":{"main":[[{"node":"MenuCardapio4","type":"main","index":0}]]},"MenuCardapio2":{"main":[[]]},"HabilitaOpcao":{"main":[[{"node":"AtualizaOpcao","type":"main","index":0}]]},"AtualizaOpcao":{"main":[[{"node":"AtualizaOpcaoParte2","type":"main","index":0}]]},"GetProximaMontagem":{"main":[[{"node":"ReordenaItem","type":"main","index":0}]]},"AtualizaOpcaoParte2":{"main":[[{"node":"GetProximaMontagem","type":"main","index":0}]]},"Code5":{"main":[[{"node":"FieldsCarrinho","type":"main","index":0}]]},"Carrinho1":{"main":[[{"node":"Code5","type":"main","index":0}]]},"ExecutaMontagem1":{"ai_tool":[[{"node":"Chama Carrinho1","type":"ai_tool","index":0}]]},"ReordenaItem":{"main":[[{"node":"FieldsMontagem","type":"main","index":0}]]},"If":{"main":[[{"node":"Chama Carrinho","type":"main","index":0}],[{"node":"Chama Carrinho1","type":"main","index":0}]]},"Chama Carrinho1":{"main":[[{"node":"No Operation, do nothing","type":"main","index":0}]]},"Postgres Chat Memory":{"ai_memory":[[{"node":"Mestre ATENDENTE DE PIZZARIA","type":"ai_memory","index":0}]]},"Embeddings OpenAI1":{"ai_embedding":[[{"node":"Supabase Vector Store1","type":"ai_embedding","index":0}]]},"Supabase Vector Store1":{"ai_vectorStore":[[{"node":"Answer questions with a vector store","type":"ai_vectorStore","index":0}]]},"Answer questions with a vector store":{"ai_tool":[[{"node":"Mestre ATENDENTE DE PIZZARIA","type":"ai_tool","index":0}]]},"OpenAI Chat Model1":{"ai_languageModel":[[{"node":"Answer questions with a vector store","type":"ai_languageModel","index":0}]]},"OpenAI Chat Model5":{"ai_languageModel":[[{"node":"Mestre ATENDENTE DE PIZZARIA","type":"ai_languageModel","index":0}]]},"When Executed by Another Workflow":{"main":[[{"node":"MensagemTraduzida","type":"main","index":0}]]},"If2":{"main":[[{"node":"VoltaStatusCompra","type":"main","index":0}],[{"node":"No Operation, do nothing10","type":"main","index":0}]]},"Postgres Chat Memory2":{"ai_memory":[[{"node":"Fechamento1","type":"ai_memory","index":0}]]},"MenuCardapio1":{"main":[[{"node":"No Operation, do nothing2","type":"main","index":0}]]},"LLM CONSTRUTOR":{"main":[[{"node":"Bebidas","type":"main","index":0},{"node":"Pizzas Fracionada","type":"main","index":0},{"node":"Pizzas Inteira","type":"main","index":0},{"node":"Esfirra","type":"main","index":0},{"node":"item4","type":"main","index":0},{"node":"Bordas","type":"main","index":0}]]},"VoltaStatusCompra":{"main":[[{"node":"No Operation, do nothing9","type":"main","index":0}]]},"MenuCardapio3":{"main":[[{"node":"No Operation, do nothing12","type":"main","index":0}]]},"If6":{"main":[[{"node":"dicas","type":"main","index":0}],[{"node":"MenuCardapio34","type":"main","index":0}]]},"MenuCardapio34":{"main":[[{"node":"No Operation, do nothing33","type":"main","index":0}]]},"If4":{"main":[[{"node":"Montagem","type":"main","index":0}],[{"node":"AjudaMontagem","type":"main","index":0}]]},"MenuCardapio4":{"main":[[{"node":"No Operation, do nothing14","type":"main","index":0}]]},"AjudaMontagem1":{"main":[[{"node":"RejeitaItem","type":"main","index":0}]]},"Get Pedido":{"main":[[{"node":"Switch1","type":"main","index":0}]]},"CarinhoVazio":{"main":[[{"node":"If6","type":"main","index":0}]]},"BordaItem":{"main":[[{"node":"Merge1","type":"main","index":5}]]},"Split Out1":{"main":[[{"node":"Loop Over Items1","type":"main","index":0}]]},"Loop Over Items1":{"main":[[{"node":"No Operation, do nothing15","type":"main","index":0}],[{"node":"CardapioConsulta1","type":"main","index":0}]]},"Wait3":{"main":[[{"node":"Loop Over Items1","type":"main","index":0}]]},"Auto-fixing Output Parser1":{"ai_outputParser":[[{"node":"Basic LLM Chain","type":"ai_outputParser","index":0}]]},"OpenAI Chat Model3":{"ai_languageModel":[[{"node":"Auto-fixing Output Parser1","type":"ai_languageModel","index":0},{"node":"Basic LLM Chain","type":"ai_languageModel","index":0}]]},"Basic LLM Chain":{"main":[[{"node":"Split Out1","type":"main","index":0}]]},"CardapioConsulta1":{"main":[[{"node":"Wait3","type":"main","index":0}]]},"Structured Output Parser [Schema]1":{"ai_outputParser":[[{"node":"Auto-fixing Output Parser1","type":"ai_outputParser","index":0}]]},"ExecutaMontagem4":{"ai_tool":[[{"node":"ChamaConversational","type":"ai_tool","index":0}]]},"FieldsCarrinho":{"main":[[{"node":"Get Pedido","type":"main","index":0}]]},"Fechar":{"main":[[{"node":"Merge","type":"main","index":0}]]},"NãoFechar":{"main":[[{"node":"Merge","type":"main","index":2}]]},"Merge":{"main":[[{"node":"ChamaConversational","type":"main","index":0}]]},"PegaStusPedido":{"main":[[{"node":"If","type":"main","index":0}]]},"FieldsMontagem":{"main":[[{"node":"PegaStusPedido","type":"main","index":0}]]},"ExecutaMontagem":{"ai_tool":[[{"node":"Chama Carrinho","type":"ai_tool","index":0}]]},"Chama Carrinho":{"main":[[{"node":"No Operation, do nothing8","type":"main","index":0}]]},"ChamaConversational":{"main":[[{"node":"No Operation, do nothing16","type":"main","index":0}]]},"ExecutaMontagem5":{"ai_tool":[[{"node":"ChamaConversational1","type":"ai_tool","index":0}]]},"ChamaConversational1":{"main":[[{"node":"If2","type":"main","index":0}]]},"dicas":{"main":[[{"node":"Carrinho1","type":"main","index":0}]]},"GetDicaAleatoria":{"ai_tool":[[{"node":"Mestre ATENDENTE DE PIZZARIA","type":"ai_tool","index":0}]]},"Switch1":{"main":[[{"node":"Fechar","type":"main","index":0}],[{"node":"AddIngridiente","type":"main","index":0}],[{"node":"NãoFechar","type":"main","index":0}]]},"AddIngridiente":{"main":[[{"node":"Merge","type":"main","index":1}]]},"ConsultaOnlineVendas":{"ai_tool":[[{"node":"Mestre ATENDENTE DE PIZZARIA","type":"ai_tool","index":0}]]},"IntencaoCompra":{"ai_tool":[[{"node":"Mestre ATENDENTE DE PIZZARIA","type":"ai_tool","index":0}]]},"Postgres Chat Memory1":{"ai_memory":[[{"node":"Assistente Fracionado","type":"ai_memory","index":0}]]},"OpenAI Chat Model6":{"ai_languageModel":[[{"node":"Assistente Fracionado","type":"ai_languageModel","index":0}]]},"ExecutaMontagem8":{"ai_tool":[[{"node":"ChamaConversational2","type":"ai_tool","index":0}]]},"ChamaConversational2":{"main":[[{"node":"No Operation, do nothing24","type":"main","index":0}]]},"GetDicaAleatoria1":{"ai_tool":[[{"node":"Assistente Fracionado","type":"ai_tool","index":0}]]},"ConsultaOnlineVendas3":{"ai_tool":[[{"node":"Assistente Fracionado","type":"ai_tool","index":0}]]},"IntencaoCompra1":{"ai_tool":[[{"node":"Assistente Fracionado","type":"ai_tool","index":0}]]},"GetCarrinho1":{"ai_tool":[[{"node":"Assistente Fracionado","type":"ai_tool","index":0}]]},"Assistente Fracionado":{"main":[[{"node":"ChamaConversational2","type":"main","index":0}]]},"AgenteFracionador":{"ai_tool":[[{"node":"Mestre ATENDENTE DE PIZZARIA","type":"ai_tool","index":0}]]},"LogFinal":{"main":[[{"node":"No Operation, do nothing22","type":"main","index":0}]]},"LogFinal1":{"main":[[{"node":"LLM CONSTRUTOR","type":"main","index":0}]]},"BuscaPizzaSabor":{"ai_tool":[[{"node":"Mestre ATENDENTE DE PIZZARIA","type":"ai_tool","index":0}]]},"GetCategoria":{"ai_tool":[[{"node":"Mestre ATENDENTE DE PIZZARIA","type":"ai_tool","index":0}]]},"Compras":{"ai_tool":[[{"node":"Mestre ATENDENTE DE PIZZARIA","type":"ai_tool","index":0}]]},"Mestre ATENDENTE DE PIZZARIA":{"main":[[{"node":"ChamaConversational1","type":"main","index":0}]]},"MemoryKey2":{"main":[[{"node":"Mestre ATENDENTE DE PIZZARIA","type":"main","index":0}]]},"MemoryKeqy":{"main":[[]]},"MemoryKey":{"main":[[{"node":"Fechamento1","type":"main","index":0}]]},"VinculaPizzaBordaItem":{"main":[[{"node":"AtualizaValorItem2","type":"main","index":0}]]}},"settings":{"executionOrder":"v1"},"staticData":null,"meta":{"templateCredsSetupCompleted":true},"pinData":{"When Executed by Another Workflow":[{"json":{"mensagem":"1 bebida 65","user_id":79,"pedido_id":68,"telefone":5516992975836,"rotina":1,"id_empresa":1,"instance":"LaCantina","apikey":"E9C6EA4E47E7-4905-BC38-475CBACA3F1E"}}]},"versionId":"36d859ca-f8ab-4dd4-938d-4a0f84c600f4","triggerCount":1,"shared":[{"createdAt":"2025-09-18T15:44:58.320Z","updatedAt":"2025-09-18T15:44:58.320Z","role":"workflow:owner","workflowId":"gL1FbKkYm9zGfCAA","projectId":"wFRMrac2003Pl1x6"}],"tags":[]}