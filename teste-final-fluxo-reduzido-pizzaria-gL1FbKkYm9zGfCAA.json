{"createdAt":"2025-09-18T15:44:58.320Z","updatedAt":"2025-09-21T00:58:27.928Z","id":"gL1FbKkYm9zGfCAA","name":"teste final fluxo reduzido pizzaria","active":false,"isArchived":false,"nodes":[{"parameters":{"options":{}},"type":"@n8n/n8n-nodes-langchain.chatTrigger","typeVersion":1.3,"position":[-1152,-544],"id":"1ea74531-5006-4059-bc21-c31f29416ee7","name":"When chat message received","webhookId":"d8fabc58-bc32-4374-9024-6ddf8884d885"},{"parameters":{"model":{"__rl":true,"value":"gpt-4.1-mini","mode":"list","cachedResultName":"gpt-4.1-mini"},"options":{}},"type":"@n8n/n8n-nodes-langchain.lmChatOpenAi","typeVersion":1.2,"position":[-2192,400],"id":"6620ad36-2344-4bad-b89a-7c87430656a9","name":"OpenAI Chat Model4","credentials":{"openAiApi":{"id":"YvUoOPijIpNeTjed","name":"OpenAi account"}}},{"parameters":{"schemaType":"manual","inputSchema":" {\n  \"type\": \"object\",\n  \"properties\": {\n    \"item\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"object\",\n        \"additionalProperties\": false,\n        \"properties\": {\n          \"numero\": { \"type\": \"integer\", \"minimum\": 0 },\n          \"quantidade\": { \"type\": \"integer\", \"minimum\": 1 },\n          \"tamanho\": { \"type\": \"string\" },\n          \"fracionada\": { \"type\": \"string\", \"enum\": [\"sim\", \"nao\", \"\"] },\n          \"tipo\": { \"type\": \"string\", \"enum\": [\"inteira\", \"fracionada\", \"\"] },\n          \"categoria\": { \"type\": \"string\", \"enum\": [\"pizza\", \"esfirra\", \"bebida\", \"borda\"] },\n          \"numero_fracao\": { \"type\": \"integer\", \"minimum\": 0 },\n          \"nome\": { \"type\": \"string\" },\n          \"nome_fracao\": { \"type\": \"string\" },\n          \"volume\": { \"type\": \"string\" },\n          \"valor\": { \"type\": \"number\", \"minimum\": 0 },\n          \"pizza_referencia\": { \"type\": \"string\" },\n          \"id_pizza_pai\": { \"type\": \"integer\", \"minimum\": 0 }\n        },\n        \"required\": [\n          \"numero\",\n          \"quantidade\",\n          \"tamanho\",\n          \"fracionada\",\n          \"tipo\",\n          \"categoria\",\n          \"numero_fracao\",\n          \"nome\",\n          \"nome_fracao\",\n          \"volume\",\n          \"valor\",\n          \"pizza_referencia\",\n          \"id_pizza_pai\"\n        ]\n      }\n    },\n    \"pizzas_fracionadas\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"object\",\n        \"additionalProperties\": false,\n        \"properties\": {\n          \"numero\": { \"type\": \"integer\", \"minimum\": 0 },\n          \"quantidade\": { \"type\": \"integer\", \"minimum\": 1 },\n          \"tamanho\": { \"type\": \"string\" },\n          \"fracionada\": { \"type\": \"string\", \"enum\": [\"sim\", \"nao\", \"\"] },\n          \"tipo\": { \"type\": \"string\", \"enum\": [\"fracionada\", \"\"] },\n          \"categoria\": { \"type\": \"string\", \"enum\": [\"pizza\"] },\n          \"metade1\": { \"type\": \"string\" },\n          \"metade2\": { \"type\": \"string\" },\n          \"valor\": { \"type\": \"number\", \"minimum\": 0 },\n          \"pizza_referencia\": { \"type\": \"string\" },\n          \"id_pizza_pai\": { \"type\": \"integer\", \"minimum\": 0 }\n        },\n        \"required\": [\n          \"numero\",\n          \"quantidade\",\n          \"tamanho\",\n          \"fracionada\",\n          \"tipo\",\n          \"categoria\",\n          \"metade1\",\n          \"metade2\",\n          \"valor\",\n          \"pizza_referencia\",\n          \"id_pizza_pai\"\n        ]\n      }\n    }\n  },\n  \"required\": [\"item\", \"pizzas_fracionadas\"],\n  \"additionalProperties\": false\n}\n"},"type":"@n8n/n8n-nodes-langchain.outputParserStructured","typeVersion":1.2,"position":[-2048,416],"id":"caf8ea8c-da06-4f25-8289-6eeda32a8618","name":"Structured Output Parser [Schema]1","notes":"TEMPLATE DESENVOLVIDO POR NOCODE STARTUP\nhttps://nocodestartup.io/\n\nFORMA√á√ÉO GESTOR DE AGENTES DE IA:\nhttps://nocodestartup.io/formacao-gestor-agentes-ia/"},{"parameters":{"promptType":"define","text":"=<mensagem_do_usuario>\n{{ $json.chatInput }}\n</mensagem_do_usuario>","hasOutputParser":true,"messages":{"messageValues":[{"message":"= Voc√™ √© um parser de pedidos de pizzaria.  \nSua √∫nica sa√≠da deve ser um JSON v√°lido que siga exatamente o schema configurado (structured output).  \n\n‚ö†Ô∏è Regras obrigat√≥rias:  \n- Sempre responda APENAS com o JSON (sem texto, sem explica√ß√µes, sem blocos de c√≥digo).  \n- Sempre retorne os dois blocos: \"item\" e \"pizzas_fracionadas\", mesmo que vazios.  \n- Preencha todos os campos com defaults quando n√£o houver informa√ß√£o.  \n- Nunca invente valores fora do permitido.  \n- Nunca omita campos obrigat√≥rios.\n\nüìå Defaults:  \n- quantidade = 1  \n- tamanho = \"media\" (para pizzas/esfirras), sen√£o vazio \"\"  \n- fracionada = \"nao\"  \n- tipo = \"inteira\" (ou \"fracionada\" no caso de pizza fracionada)  \n- numero = 0, numero_fracao = 0  \n- nome, nome_fracao, volume, pizza_referencia = \"\"  \n- valor = 0  \n- id_pizza_pai = 0  \n- categoria ‚àà {\"pizza\",\"esfirra\",\"bebida\",\"borda\"}  \n\nüìå Regras de interpreta√ß√£o:  \n- S√≥ trate como \"pizza\" se a palavra \"pizza\" aparecer; idem para \"esfirra\".  \n- A palavra \"uma\", \"duas\", \"tr√™s\" etc sempre define a quantidade.  \n- \"meia\" ‚â° \"1/2\".  \n- \"pizza N\" (sem sabor) ‚Üí {quantidade:1, numero:N, tamanho:\"media\", categoria:\"pizza\"}.  \n\nüìå Pizzas fracionadas:  \n- Sempre um √∫nico objeto dentro de \"pizzas_fracionadas\".  \n- Use {metade1, metade2} para os dois sabores/n√∫meros.  \n- Marque fracionada=\"sim\", tipo=\"fracionada\".  \n- Use uma pizza_referencia (ex.: \"ref_123\") para vincular bordas a ela.  \n\nüìå Bordas:  \n- Se houver \"borda X\", categoria=\"borda\", nome=\"x\".  \n- Sempre vincular via pizza_referencia ou id_pizza_pai.  \n- Defaults: numero=0, tamanho=\"\", valor=0.  \n\nüìå Bebidas:  \n- \"lata\" sem volume ‚Üí \"350ml\".  \n- \"long neck\" sem volume ‚Üí \"330ml\".  \n- \"coca/coca-cola\" sem volume ‚Üí \"2l\".  \n- Normalize sempre min√∫sculo, sem espa√ßos (ex.: \"350ml\", \"2l\").  \n\nüìå Esfirras:  \n- Sempre categoria=\"esfirra\", tipo=\"salgada\" ou \"doce\".  \n\nüìå Resultado esperado:  \n- Itens simples (pizza inteira, bebida, esfirra, borda) ‚Üí em \"item\".  \n- Itens fracionados ‚Üí em \"pizzas_fracionadas\".  \n"}]}},"type":"@n8n/n8n-nodes-langchain.chainLlm","typeVersion":1.6,"position":[-2192,224],"id":"47ba66be-2a84-41c8-b47e-773f02dac045","name":"Basic LLM Chain1","retryOnFail":true,"notes":"TEMPLATE DESENVOLVIDO POR NOCODE STARTUP\nhttps://nocodestartup.io/\n\nFORMA√á√ÉO GESTOR DE AGENTES DE IA:\nhttps://nocodestartup.io/formacao-gestor-agentes-ia/"},{"parameters":{"fieldToSplitOut":"output.item","options":{}},"type":"n8n-nodes-base.splitOut","typeVersion":1,"position":[-1872,224],"id":"0573e840-dbdc-45d6-8ba0-22260df6030a","name":"item","notes":"TEMPLATE DESENVOLVIDO POR NOCODE STARTUP\nhttps://nocodestartup.io/\n\nFORMA√á√ÉO GESTOR DE AGENTES DE IA:\nhttps://nocodestartup.io/formacao-gestor-agentes-ia/"},{"parameters":{"options":{}},"type":"n8n-nodes-base.splitInBatches","typeVersion":3,"position":[-1648,192],"id":"74402ae8-670e-429a-8aee-3b808ea1fb84","name":"Loop Over Items"},{"parameters":{},"type":"n8n-nodes-base.noOp","name":"Replace Me","typeVersion":1,"position":[-1456,48],"id":"b9cae534-725c-4f0d-9119-662bed4b26df"},{"parameters":{"tableId":"item_pedido_temp","fieldsUi":{"fieldValues":[{"fieldId":"user_id","fieldValue":"71"},{"fieldId":"quantidade","fieldValue":"=1"},{"fieldId":"tipo","fieldValue":"salgado"},{"fieldId":"categoria","fieldValue":"item"},{"fieldId":"nome","fieldValue":"= {{ $('Loop Over Items').item.json.nome }}"},{"fieldId":"fracionada","fieldValue":"=false"},{"fieldId":"pedido_id","fieldValue":"=15"},{"fieldId":"tamanho","fieldValue":"=grande"},{"fieldId":"volume","fieldValue":"=''"}]}},"type":"n8n-nodes-base.supabase","typeVersion":1,"position":[-944,176],"id":"f8dfa431-04ab-49a3-b02f-0cf2a7237059","name":"Item","credentials":{"supabaseApi":{"id":"CcvRddDPb5xelxfb","name":"Supabase account"}}},{"parameters":{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"9f620984-016b-4b6b-bd32-a5be81b30118","leftValue":"={{ $items().length }}","rightValue":1,"operator":{"type":"number","operation":"equals"}}],"combinator":"and"},"options":{}},"type":"n8n-nodes-base.if","typeVersion":2.2,"position":[-1216,192],"id":"3363db2a-d845-4639-8e46-be6322c68826","name":"If"},{"parameters":{"operation":"executeQuery","query":" SELECT\n    numero,\n    nome,\n    descricao,\n    tipo,\n    cardapio,\n    CASE \n        WHEN '{{ $json.tamanho }}' = 'grande' THEN preco_grande\n        WHEN '{{ $json.tamanho }}' = 'media'  THEN preco_media\n        ELSE preco_grande\n    END AS valor\nFROM busca_cardapio((\n    SELECT string_agg(num, ', ')\n    FROM (\n        SELECT DISTINCT c.numero::text AS num\n        FROM cardapio AS c\n        WHERE c.nome ILIKE '%' || '{{ $json.nome }}' || '%'\n          AND categoria = '{{ $json.categoria }}' and  categoria not in ( 'borda','item')\n    )\n))\n  union all \n SELECT\n    numero,\n    nome,\n    descricao,\n    tipo,\n    cardapio,\n    CASE \n        WHEN '{{ $json.tamanho }}' = 'grande' THEN preco_grande\n        WHEN '{{ $json.tamanho }}' = 'media'  THEN preco_media\n        ELSE preco_grande\n    END AS valor\nFROM busca_cardapio((\n    SELECT string_agg(num, ', ')\n    FROM (\n        SELECT DISTINCT c.numero::text AS num\n        FROM cardapio AS c\n        WHERE  ( c.nome ILIKE '%' || '{{ $json.nome }}' || '%' or   c.palavras_chave  ILIKE '%' || '{{ $json.nome }}' || '%')\n          AND tipo  = '{{ $json.categoria }}'\n    )\n))\n   \n     union all \n SELECT\n    numero,\n    nome,\n    descricao,\n    tipo,\n    cardapio,\n    CASE \n        WHEN '{{ $json.tamanho }}' = 'grande' THEN preco_grande\n        WHEN '{{ $json.tamanho }}' = 'media'  THEN preco_media\n        ELSE preco_grande\n    END AS valor\nFROM busca_cardapio((\n    SELECT string_agg(num, ', ')\n    FROM (\n        SELECT DISTINCT c.numero::text AS num\n        FROM cardapio AS c\n        WHERE ( c.nome ILIKE '%' || '{{ $json.nome }}' || '%' or   c.palavras_chave  ILIKE '%' || '{{ $json.nome }}' || '%')\n          AND  categoria  = 'borda'\n    )\n))\n   \n   ;","options":{}},"type":"n8n-nodes-base.postgres","typeVersion":2.6,"position":[-1424,192],"id":"6c6f42cd-398b-4a85-8cc0-749916f25d10","name":"ConsultaBorda2","alwaysOutputData":true,"credentials":{"postgres":{"id":"3NLaVyXonSrCcLE3","name":"Postgres account"}}},{"parameters":{"fieldToSplitOut":"output.pizzas_fracionadas","options":{}},"type":"n8n-nodes-base.splitOut","typeVersion":1,"position":[-1856,416],"id":"f2e15827-3325-46b4-af66-6d79a2feca68","name":"item2","notes":"TEMPLATE DESENVOLVIDO POR NOCODE STARTUP\nhttps://nocodestartup.io/\n\nFORMA√á√ÉO GESTOR DE AGENTES DE IA:\nhttps://nocodestartup.io/formacao-gestor-agentes-ia/"},{"parameters":{"tableId":"item_pedido_temp","fieldsUi":{"fieldValues":[{"fieldId":"user_id","fieldValue":"71"},{"fieldId":"quantidade","fieldValue":"={{ $json.quantidade }}"},{"fieldId":"tipo","fieldValue":"salgado"},{"fieldId":"categoria","fieldValue":"pizza"},{"fieldId":"nome","fieldValue":"={{ $json.metade1 }}"},{"fieldId":"fracionada","fieldValue":"=true"},{"fieldId":"pedido_id","fieldValue":"=15"},{"fieldId":"tamanho","fieldValue":"=grande"},{"fieldId":"volume","fieldValue":"=''"}]}},"type":"n8n-nodes-base.supabase","typeVersion":1,"position":[-1632,416],"id":"0b510bdc-5997-4cf5-8d6c-2c09b0364df7","name":"Item2","credentials":{"supabaseApi":{"id":"CcvRddDPb5xelxfb","name":"Supabase account"}}},{"parameters":{"tableId":"item_pedido_temp","fieldsUi":{"fieldValues":[{"fieldId":"user_id","fieldValue":"71"},{"fieldId":"quantidade","fieldValue":"={{ $json.quantidade }}"},{"fieldId":"tipo","fieldValue":"salgado"},{"fieldId":"categoria","fieldValue":"pizza"},{"fieldId":"nome","fieldValue":"={{ $json.metade1 }}"},{"fieldId":"fracionada","fieldValue":"=true"},{"fieldId":"pedido_id","fieldValue":"=15"},{"fieldId":"tamanho","fieldValue":"=grande"},{"fieldId":"volume","fieldValue":"''"},{"fieldId":"nome_fracao","fieldValue":"={{ $json.metade2 }}"},{"fieldId":"numero","fieldValue":"0"},{"fieldId":"numero_fracao","fieldValue":"0"}]}},"type":"n8n-nodes-base.supabase","typeVersion":1,"position":[176,1568],"id":"70f432d2-6fec-4034-969d-0644d4e9ffe3","name":"Item3","credentials":{"supabaseApi":{"id":"CcvRddDPb5xelxfb","name":"Supabase account"}}},{"parameters":{"fieldToSplitOut":"output.pizzas_fracionadas","options":{}},"type":"n8n-nodes-base.splitOut","typeVersion":1,"position":[-240,1552],"id":"f4396305-4353-4e07-a1c9-56d70b325135","name":"item3","alwaysOutputData":false,"notes":"TEMPLATE DESENVOLVIDO POR NOCODE STARTUP\nhttps://nocodestartup.io/\n\nFORMA√á√ÉO GESTOR DE AGENTES DE IA:\nhttps://nocodestartup.io/formacao-gestor-agentes-ia/"},{"parameters":{"tableId":"item_pedido_temp","fieldsUi":{"fieldValues":[{"fieldId":"user_id","fieldValue":"71"},{"fieldId":"quantidade","fieldValue":"={{ $json.quantidade }}"},{"fieldId":"tipo","fieldValue":"salgado"},{"fieldId":"categoria","fieldValue":"={{ $json.categoria }}"},{"fieldId":"nome","fieldValue":"= {{ $('Loop Over Items1').item.json.nome }}"},{"fieldId":"fracionada","fieldValue":"=false"},{"fieldId":"pedido_id","fieldValue":"=15"},{"fieldId":"tamanho","fieldValue":"={{ $json.tamanho }}"},{"fieldId":"volume","fieldValue":"={{ $json.volume }}"},{"fieldId":"numero","fieldValue":"={{ $json.numero }}"}]}},"type":"n8n-nodes-base.supabase","typeVersion":1,"position":[224,1312],"id":"00e98834-958d-4902-a777-af1ba30d0da3","name":"Item1","credentials":{"supabaseApi":{"id":"CcvRddDPb5xelxfb","name":"Supabase account"}}},{"parameters":{"options":{}},"type":"n8n-nodes-base.splitInBatches","typeVersion":3,"position":[-64,1232],"id":"55639d94-3d1d-458b-b68d-fb2b4703522f","name":"Loop Over Items1"},{"parameters":{"fieldToSplitOut":"output.item","options":{}},"type":"n8n-nodes-base.splitOut","typeVersion":1,"position":[-272,1232],"id":"5b8f6980-5bf4-4066-a0a3-ab8d8603beda","name":"item1","notes":"TEMPLATE DESENVOLVIDO POR NOCODE STARTUP\nhttps://nocodestartup.io/\n\nFORMA√á√ÉO GESTOR DE AGENTES DE IA:\nhttps://nocodestartup.io/formacao-gestor-agentes-ia/"},{"parameters":{},"type":"n8n-nodes-base.merge","typeVersion":3.2,"position":[624,1232],"id":"52225b2b-d0eb-4af6-8c95-52a816617494","name":"Merge"},{"parameters":{"operation":"executeQuery","query":"SELECT AtualizaValorFracionado(    71,15);","options":{}},"type":"n8n-nodes-base.postgres","typeVersion":2.6,"position":[1568,928],"id":"9c7a58f8-cca1-49f5-989b-4c0ff66a49af","name":"AtualizaValorPizzaFracionada","credentials":{"postgres":{"id":"3NLaVyXonSrCcLE3","name":"Postgres account"}}},{"parameters":{"operation":"executeQuery","query":"SELECT atualizar_valores_itens_temp(  71,15);","options":{}},"type":"n8n-nodes-base.postgres","typeVersion":2.6,"position":[1248,928],"id":"559a4bd5-f9e7-4f2c-a325-0f9618563ec5","name":"AtualizaValorItem","credentials":{"postgres":{"id":"3NLaVyXonSrCcLE3","name":"Postgres account"}}},{"parameters":{"operation":"executeQuery","query":"CALL valida_nome_item_pedido( {{ $json.user_id }} , {{ $json.pedido_id }});","options":{}},"type":"n8n-nodes-base.postgres","typeVersion":2.6,"position":[992,928],"id":"dfdd18e8-e74e-4006-a437-9a9242443aca","name":"Execute a SQL query","credentials":{"postgres":{"id":"3NLaVyXonSrCcLE3","name":"Postgres account"}}},{"parameters":{"operation":"executeQuery","query":"delete from item_pedido_temp;","options":{}},"type":"n8n-nodes-base.postgres","typeVersion":2.6,"position":[-416,-528],"id":"262d4433-ad79-4217-aeaa-116d5aee466b","name":"Execute a SQL query1","credentials":{"postgres":{"id":"3NLaVyXonSrCcLE3","name":"Postgres account"}}},{"parameters":{"operation":"executeQuery","query":"SELECT AtualizaValorFracionado(     {{ $('Edit Fields2').item.json.user_id }} , {{ $('Edit Fields2').item.json.pedido_id }});","options":{}},"type":"n8n-nodes-base.postgres","typeVersion":2.6,"position":[1536,1232],"id":"576eb228-8f0d-4158-8606-04dd87b8d524","name":"AtualizaValorPizzaFracionada1","credentials":{"postgres":{"id":"3NLaVyXonSrCcLE3","name":"Postgres account"}}},{"parameters":{"operation":"executeQuery","query":"SELECT   atualizar_valores_itens_temp(     {{ $('Edit Fields2').item.json.user_id }} , {{ $('Edit Fields2').item.json.pedido_id }});","options":{}},"type":"n8n-nodes-base.postgres","typeVersion":2.6,"position":[1312,1232],"id":"86c7652a-3f77-463b-857c-4c35ea5bcb22","name":"AtualizaValorItem1","credentials":{"postgres":{"id":"3NLaVyXonSrCcLE3","name":"Postgres account"}}},{"parameters":{"operation":"executeQuery","query":"call valida_nome_item_pedido( {{ $json.user_id }} , {{ $json.pedido_id }});","options":{}},"type":"n8n-nodes-base.postgres","typeVersion":2.6,"position":[1072,1232],"id":"d328d803-c70a-4494-9989-574322b4b0e6","name":"Execute a SQL query6","credentials":{"postgres":{"id":"3NLaVyXonSrCcLE3","name":"Postgres account"}}},{"parameters":{"assignments":{"assignments":[{"id":"8033b503-a34e-4682-a40a-b60b315714e6","name":"user_id","value":"={{ $json.user_id }}","type":"number"},{"id":"bd4fde4d-0d15-4271-945c-571b24973379","name":"pedido_id","value":"={{ $json.pedido_id }}","type":"number"}]},"options":{}},"type":"n8n-nodes-base.set","typeVersion":3.4,"position":[880,1232],"id":"b287e5d0-4f42-4871-8832-7385d2c5133d","name":"Edit Fields2","executeOnce":true},{"parameters":{"promptType":"define","text":"=<mensagem_do_usuario>\n{{ $('When chat message received').item.json.chatInput }}\n</mensagem_do_usuario>","hasOutputParser":true,"messages":{"messageValues":[{"message":"=Voc√™ √© um parser de pedidos de pizzaria.\nResponda somente com um JSON v√°lido que siga exatamente o schema configurado (structured output).\nNunca escreva texto extra, coment√°rios, blocos de c√≥digo ou chaves diferentes das previstas.\n\nRegras obrigat√≥rias e defaults:\n\nSempre retorne os 2 blocos: \"item\" e \"pizzas_fracionadas\", mesmo que vazios ([]).\n\nSempre inclua todos os campos obrigat√≥rios de cada item.\n\nSe n√£o houver valor, use os defaults:\n\nStrings: \"\"\n\nN√∫meros: 0\n\nquantidade: 1\n\ntamanho (pizza/esfirra inteiras): \"media\" (sen√£o \"\")\n\nfracionada: \"nao\"\n\ntipo (pizza/esfirra inteiras): \"inteira\"\n\ncategoria default: \"pizza\"\n\nnumero: 0\n\nnumero_fracao: 0\n\nnome, nome_fracao, volume, pizza_referencia: \"\"\n\nvalor: 0\n\nid_pizza_pai: 0\n\nInterpreta√ß√£o:\n\nS√≥ trate como pizza se a palavra ‚Äúpizza‚Äù aparecer; idem esfirra.\n\n‚Äúuma/duas/tr√™s‚Ä¶‚Äù definem quantidade.\n\n‚Äúmeia‚Äù ‚â° ‚Äú1/2‚Äù.\n\n‚Äúpizza N‚Äù (sem sabor): gere pizza inteira com numero=N, tamanho=\"media\".\n\nFracionadas:\n\nSempre um √∫nico objeto em pizzas_fracionadas.\n\nPreencha: metade1 e metade2 (por nome ou n√∫mero conforme aparecer).\n\nMarque fracionada=\"sim\" e tipo=\"fracionada\".\n\nTamanho de fracionada √© sempre \"grande\".\n\nUse uma pizza_referencia (ex.: \"ref_123\") para vincular bordas.\n\nSe o usu√°rio disser ‚Äúpizza N‚Äù, esse valor vai em numero; se disser sabor por nome, use nome.\nnumero_fracao/nome_fracao n√£o s√£o usados em pizzas_fracionadas (use metade1/metade2).\n\nBordas:\n\n‚Äúborda X‚Äù ‚Üí categoria=\"borda\", nome=\"x\" (min√∫sculo).\n\nVincule por pizza_referencia (ou id_pizza_pai se citado).\n\nDefaults de borda: numero=0, tamanho=\"\", valor=0.\n\nBebidas:\n\n‚Äúlata‚Äù ‚Üí volume=\"350ml\".\n\n‚Äúlong neck‚Äù ‚Üí volume=\"330ml\".\n\n‚Äúcoca/coca-cola‚Äù sem volume ‚Üí volume=\"2l\".\n\nNormalize volume min√∫sculo e sem espa√ßos.\n\nEsfirras: categoria=\"esfirra\"; tipo pode ser \"salgada\"/\"doce\" ou \"\" se n√£o informado.\n\nNunca invente valores fora dos enums previstos pelo schema.\nA resposta deve ser apenas o JSON raiz com item e pizzas_fracionadas."}]}},"type":"@n8n/n8n-nodes-langchain.chainLlm","typeVersion":1.6,"position":[-592,1248],"id":"ccba587e-bfbc-476b-bfc6-a901fbde5c65","name":"Basic LLM Chain2","retryOnFail":true,"notes":"TEMPLATE DESENVOLVIDO POR NOCODE STARTUP\nhttps://nocodestartup.io/\n\nFORMA√á√ÉO GESTOR DE AGENTES DE IA:\nhttps://nocodestartup.io/formacao-gestor-agentes-ia/"},{"parameters":{"model":{"__rl":true,"value":"gpt-4.1-mini","mode":"list","cachedResultName":"gpt-4.1-mini"},"options":{}},"type":"@n8n/n8n-nodes-langchain.lmChatOpenAi","typeVersion":1.2,"position":[-592,1424],"id":"838a4deb-05e7-4bf9-9edf-91ac10b7b8be","name":"OpenAI Chat Model1","credentials":{"openAiApi":{"id":"YvUoOPijIpNeTjed","name":"OpenAi account"}}},{"parameters":{"schemaType":"manual","inputSchema":" {\n  \"type\": \"object\",\n  \"properties\": {\n    \"item\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"object\",\n        \"additionalProperties\": false,\n        \"properties\": {\n          \"numero\": { \"type\": \"integer\", \"minimum\": 0 },\n          \"quantidade\": { \"type\": \"integer\", \"minimum\": 1 },\n          \"tamanho\": { \"type\": \"string\", \"enum\": [\"media\", \"grande\", \"\"] },\n          \"fracionada\": { \"type\": \"string\", \"enum\": [\"sim\", \"nao\", \"true\", \"false\", \"\"] },\n          \"tipo\": { \"type\": \"string\", \"enum\": [\"inteira\", \"fracionada\", \"salgada\", \"doce\", \"\"] },\n          \"categoria\": { \"type\": \"string\", \"enum\": [\"pizza\", \"esfirra\", \"bebida\", \"borda\", \"\"] },\n          \"numero_fracao\": { \"type\": \"integer\", \"minimum\": 0 },\n          \"nome\": { \"type\": \"string\" },\n          \"nome_fracao\": { \"type\": \"string\" },\n          \"volume\": { \"type\": \"string\" },\n          \"valor\": { \"type\": \"number\", \"minimum\": 0 },\n          \"pizza_referencia\": { \"type\": \"string\" },\n          \"id_pizza_pai\": { \"type\": \"integer\", \"minimum\": 0 }\n        },\n        \"required\": [\n          \"numero\",\n          \"quantidade\",\n          \"tamanho\",\n          \"fracionada\",\n          \"tipo\",\n          \"categoria\",\n          \"numero_fracao\",\n          \"nome\",\n          \"nome_fracao\",\n          \"volume\",\n          \"valor\",\n          \"pizza_referencia\",\n          \"id_pizza_pai\"\n        ]\n      }\n    },\n    \"pizzas_fracionadas\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"object\",\n        \"additionalProperties\": false,\n        \"properties\": {\n          \"numero\": { \"type\": \"integer\", \"minimum\": 0 },\n          \"quantidade\": { \"type\": \"integer\", \"minimum\": 1 },\n          \"tamanho\": { \"type\": \"string\", \"enum\": [\"grande\"] },\n          \"fracionada\": { \"type\": \"string\", \"enum\": [\"sim\"] },\n          \"tipo\": { \"type\": \"string\", \"enum\": [\"fracionada\"] },\n          \"categoria\": { \"type\": \"string\", \"enum\": [\"pizza\"] },\n          \"metade1\": { \"type\": \"string\" },\n          \"metade2\": { \"type\": \"string\" },\n          \"valor\": { \"type\": \"number\", \"minimum\": 0 },\n          \"pizza_referencia\": { \"type\": \"string\" },\n          \"id_pizza_pai\": { \"type\": \"integer\", \"minimum\": 0 }\n        },\n        \"required\": [\n          \"numero\",\n          \"quantidade\",\n          \"tamanho\",\n          \"fracionada\",\n          \"tipo\",\n          \"categoria\",\n          \"metade1\",\n          \"metade2\",\n          \"valor\",\n          \"pizza_referencia\",\n          \"id_pizza_pai\"\n        ]\n      }\n    }\n  },\n  \"required\": [\"item\", \"pizzas_fracionadas\"],\n  \"additionalProperties\": false\n}\n"},"type":"@n8n/n8n-nodes-langchain.outputParserStructured","typeVersion":1.2,"position":[-448,1440],"id":"03fdade2-6674-42e9-8445-fc9146a4c04a","name":"Structured Output Parser [Schema]2","notes":"TEMPLATE DESENVOLVIDO POR NOCODE STARTUP\nhttps://nocodestartup.io/\n\nFORMA√á√ÉO GESTOR DE AGENTES DE IA:\nhttps://nocodestartup.io/formacao-gestor-agentes-ia/"},{"parameters":{"jsCode":"  // n8n Code node (Run Once for All Items)\n\n// Normaliza volume (2L etc.)\nfunction normVol(v) {\n  if (!v) return '';\n  v = String(v).trim().toLowerCase();\n  if (['un','uni','unid','unidade'].includes(v)) return '';\n  v = v\n    .replace(' litros','l').replace(' litro','l')\n    .replace('litros','l').replace('litro','l')\n    .replace(' lt','l').replace(' l','l')\n    .trim();\n  return v ? ' ' + v.toUpperCase() : '';\n}\n\n// Pega a lista de rejeitados de onde estiver (itens_rejeitados, coalesce, etc.)\nfunction getSrc(items) {\n  const j = (items[0]?.json) ?? {};\n  if (Array.isArray(j.itens_rejeitados)) return j.itens_rejeitados;\n  if (Array.isArray(j.coalesce)) return j.coalesce;\n  if (Array.isArray(j.rejeitados)) return j.rejeitados;\n  // tenta achar qualquer propriedade que seja array\n  const arrKey = Object.keys(j).find(k => Array.isArray(j[k]));\n  if (arrKey) return j[arrKey];\n  // fallback: cada item de entrada √© um rejeitado\n  return items.map(i => i.json);\n}\n\nconst raw = getSrc(items) || [];\n\n// **Fix principal**: n√£o use truthiness; use checagem por \"definido\"\nconst src = raw\n  .filter(x => x != null)\n  .map(x => (typeof x === 'object' && x !== null ? x : { numero: x }))\n  // defaults seguros\n  .map(o => ({\n    numero: (o.numero === undefined || o.numero === null || o.numero === '')\n              ? 0\n              : Number.isFinite(Number(o.numero)) ? Number(o.numero) : 0,\n    nome: (typeof o.nome === 'string' && o.nome.trim() !== '')\n              ? o.nome\n              : 'n√£o encontrado',\n    volume: (o.volume ?? '').toString().trim(),\n  }))\n  // mant√©m itens que tenham pelo menos um campo \"presente\" (mesmo que 0/'n√£o encontrado')\n  .filter(i => i.nome != null || i.numero != null);\n\nconst tem_rejeitados = src.length > 0;\n\nlet linhas = '';\nlet mensagem = '';\n\nif (tem_rejeitados) {\n  linhas = src\n    .map(i => `- ${i.nome && i.nome.trim() !== '' ? i.nome : (i.numero != null ? `Pizza ${i.numero}` : 'n√£o encontrado')}${normVol(i.volume)}`)\n    .join('\\n');\n\n  mensagem = `üìü Seu(s) item(s) foi(ram) processado(s).‚úÖ\n‚ùå O seguinte item n√£o foi reconhecido e ser√°(√£o) exclu√≠do(s):\n${linhas}\nüö´ Esse item foi ignorado e exclu√≠do do pedido.\nüîÅ Corrija e reenvie esse(s) iten(s) agora.`;\n} else {\n  mensagem = `üõí Seu(s) item(ns) foi(ram) adicionado(s) ao carrinho com sucesso ‚úÖ.`;\n\n}\n\nreturn [{ json: { mensagem, linhas, qtd: src.length, tem_rejeitados } }];\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[4016,-1280],"id":"e044c110-8279-41f9-b934-23bf3fba620d","name":"Code3"},{"parameters":{"operation":"executeQuery","query":"   SELECT COALESCE(json_agg(sub), '[]'::json) AS  itens_rejeitados\nFROM (\n  SELECT\n    numero ,\n    quantidade,\n    categoria,\n    COALESCE(NULLIF(BTRIM(nome), ''), 'n√£o encontrado')     AS nome,\n    COALESCE(volume, '')                                    AS volume\n  FROM item_pedido_temp \n  WHERE user_id =   {{ $('DadoPedido').item.json.user_id }}  and pedido_id =  {{ $('DadoPedido').item.json.pedido_id }}  \n    AND  status = 'rejeitado' and categoria <>  'borda'\n  union all SELECT\n    numero ,\n    quantidade,\n    categoria,\n    COALESCE(NULLIF(BTRIM(nome), ''), 'Borda sem pizza relacionada')     AS nome,\n    'Borda sem pizza relacionada'  AS volume\n  FROM item_pedido_temp \n  WHERE user_id =   {{ $('DadoPedido').item.json.user_id }}  and pedido_id =  {{ $('DadoPedido').item.json.pedido_id }}  \n    AND  status = 'rejeitado' and categoria = 'borda'\n) AS sub;\n\n \n\n","options":{}},"type":"n8n-nodes-base.postgres","typeVersion":2.6,"position":[3792,-1280],"id":"bba1cada-d7b3-4826-b31b-02765024fe5a","name":"Rejeite","credentials":{"postgres":{"id":"3NLaVyXonSrCcLE3","name":"Postgres account"}}},{"parameters":{"operation":"executeQuery","query":" SELECT rejeita_item( {{ $('DadoPedido').item.json.user_id }}, {{ $('DadoPedido').item.json.pedido_id }}  );","options":{}},"type":"n8n-nodes-base.postgres","typeVersion":2.6,"position":[2912,-528],"id":"d5d30080-47a6-459c-b463-883f0f46f96a","name":"RejeitaItem","credentials":{"postgres":{"id":"3NLaVyXonSrCcLE3","name":"Postgres account"}}},{"parameters":{"fieldToSplitOut":"output.bebidas","options":{}},"type":"n8n-nodes-base.splitOut","typeVersion":1,"position":[800,-928],"id":"7a608843-94ae-4a9d-8a55-9f4222a0f6ab","name":"Bebidas","notes":"TEMPLATE DESENVOLVIDO POR NOCODE STARTUP\nhttps://nocodestartup.io/\n\nFORMA√á√ÉO GESTOR DE AGENTES DE IA:\nhttps://nocodestartup.io/formacao-gestor-agentes-ia/"},{"parameters":{"fieldToSplitOut":" output.pizzas_fracionadas","options":{}},"type":"n8n-nodes-base.splitOut","typeVersion":1,"position":[768,-736],"id":"49dbeeb0-7863-4321-abc5-6aa8716b5d4c","name":"Pizzas Fracionada","notes":"TEMPLATE DESENVOLVIDO POR NOCODE STARTUP\nhttps://nocodestartup.io/\n\nFORMA√á√ÉO GESTOR DE AGENTES DE IA:\nhttps://nocodestartup.io/formacao-gestor-agentes-ia/"},{"parameters":{"fieldToSplitOut":"output.pizzas_inteiras","options":{}},"type":"n8n-nodes-base.splitOut","typeVersion":1,"position":[768,-544],"id":"e738ed86-7847-426a-928a-9dd96bf35e0a","name":"Pizzas Inteira","notes":"TEMPLATE DESENVOLVIDO POR NOCODE STARTUP\nhttps://nocodestartup.io/\n\nFORMA√á√ÉO GESTOR DE AGENTES DE IA:\nhttps://nocodestartup.io/formacao-gestor-agentes-ia/"},{"parameters":{"fieldToSplitOut":"output.esfirras","options":{}},"type":"n8n-nodes-base.splitOut","typeVersion":1,"position":[768,-368],"id":"158da210-0bc8-433a-9120-6fd036ad4d85","name":"Esfirra","notes":"TEMPLATE DESENVOLVIDO POR NOCODE STARTUP\nhttps://nocodestartup.io/\n\nFORMA√á√ÉO GESTOR DE AGENTES DE IA:\nhttps://nocodestartup.io/formacao-gestor-agentes-ia/"},{"parameters":{"tableId":"item_pedido_temp","fieldsUi":{"fieldValues":[{"fieldId":"user_id","fieldValue":"={{ $('MontPedido').item.json.user_id }}"},{"fieldId":"quantidade","fieldValue":"={{ $json.quantidade }}"},{"fieldId":"tipo","fieldValue":"bebida"},{"fieldId":"categoria","fieldValue":"bebida"},{"fieldId":"nome","fieldValue":"={{ $json.nome }}"},{"fieldId":"volume","fieldValue":"= {{ (($json.volume ?? '').toString().replace(/[\\s\\u00A0\\u200B-\\u200D\\uFEFF]+/g, '') === '')\n    ? ' volume desconhecido'\n    : ($json.volume ?? '').toString().replace(/[\\s\\u00A0\\u200B-\\u200D\\uFEFF]+/g, '') }}"},{"fieldId":"fracionada","fieldValue":"false"},{"fieldId":"pedido_id","fieldValue":"={{ $('MontPedido').item.json.pedido_id }}"},{"fieldId":"numero","fieldValue":"0"}]}},"type":"n8n-nodes-base.supabase","typeVersion":1,"position":[1040,-928],"id":"f7635034-812e-4fbd-aa0d-9042e5cc4409","name":"Itembebida","credentials":{"supabaseApi":{"id":"CcvRddDPb5xelxfb","name":"Supabase account"}}},{"parameters":{"tableId":"item_pedido_temp","fieldsUi":{"fieldValues":[{"fieldId":"user_id","fieldValue":"={{ $('MontPedido').item.json.user_id }}"},{"fieldId":"quantidade","fieldValue":"={{ $json.quantidade }}"},{"fieldId":"categoria","fieldValue":"pizza"},{"fieldId":"fracionada","fieldValue":"true"},{"fieldId":"numero","fieldValue":"= {{ $json.metade1 }}"},{"fieldId":"numero_fracao","fieldValue":"={{ $json.metade2 }}"},{"fieldId":"tamanho","fieldValue":"grande"},{"fieldId":"fracionada","fieldValue":"true"},{"fieldId":"pedido_id","fieldValue":"={{ $('MontPedido').item.json.pedido_id }}"},{"fieldId":"nome","fieldValue":"={{ $json.nome }}"},{"fieldId":"nome_fracao","fieldValue":"={{ $json.nome_fracao }}"},{"fieldId":"pizza_referencia","fieldValue":"={{$json.pizza_referencia.trim()}}"}]}},"type":"n8n-nodes-base.supabase","typeVersion":1,"position":[1008,-736],"id":"1a425d55-acc5-40b3-8035-6dea956073b8","name":"ItemFracionado","credentials":{"supabaseApi":{"id":"CcvRddDPb5xelxfb","name":"Supabase account"}}},{"parameters":{"tableId":"item_pedido_temp","fieldsUi":{"fieldValues":[{"fieldId":"user_id","fieldValue":"={{ $('MontPedido').item.json.user_id }}"},{"fieldId":"quantidade","fieldValue":"={{ $json.quantidade }}"},{"fieldId":"categoria","fieldValue":"pizza"},{"fieldId":"fracionada","fieldValue":"false"},{"fieldId":"numero","fieldValue":"={{ String($json.numero ?? '').trim() === '' ? null : $json.numero }}"},{"fieldId":"tamanho","fieldValue":"={{ $json.tamanho.toLowerCase() }}"},{"fieldId":"fracionada","fieldValue":"false"},{"fieldId":"pedido_id","fieldValue":"={{ $('MontPedido').item.json.pedido_id }}"},{"fieldId":"nome","fieldValue":"={{ $json.nome?.trim() === '' ? null : $json.nome }}"},{"fieldId":"pizza_referencia","fieldValue":"={{ $json.pizza_referencia }}"}]}},"type":"n8n-nodes-base.supabase","typeVersion":1,"position":[1024,-544],"id":"09a72d7a-7fcc-4cd4-97a6-28bd531c962c","name":"ItemInteira","credentials":{"supabaseApi":{"id":"CcvRddDPb5xelxfb","name":"Supabase account"}}},{"parameters":{"tableId":"item_pedido_temp","fieldsUi":{"fieldValues":[{"fieldId":"user_id","fieldValue":"={{ $('MontPedido').item.json.user_id }}"},{"fieldId":"quantidade","fieldValue":"={{ $json.quantidade }}"},{"fieldId":"tipo","fieldValue":"bebida"},{"fieldId":"categoria","fieldValue":"esfirra"},{"fieldId":"nome","fieldValue":"={{ $json.nome?.trim() === '' ? null : $json.nome }}"},{"fieldId":"tipo","fieldValue":"={{ $json.tipo?.trim() === '' ? null : $json.tipo }}"},{"fieldId":"fracionada","fieldValue":"false"},{"fieldId":"pedido_id","fieldValue":"={{ $('MontPedido').item.json.pedido_id }}"},{"fieldId":"numero","fieldValue":"={{ (String($json.numero ?? '').trim() === '' \n    || Number(String($json.numero).replace(',','.').trim()) === 0)\n  ? null \n  : $json.numero }}"}]}},"type":"n8n-nodes-base.supabase","typeVersion":1,"position":[1008,-368],"id":"59df7bdc-aed6-46b7-9f35-1a2bf7ec7cf3","name":"ItemEsfirra","credentials":{"supabaseApi":{"id":"CcvRddDPb5xelxfb","name":"Supabase account"}}},{"parameters":{"options":{}},"type":"@n8n/n8n-nodes-langchain.outputParserAutofixing","typeVersion":1,"position":[112,-384],"id":"b399cce6-9e20-4758-989a-b43190cb9942","name":"Auto-fixing Output Parser","notes":"TEMPLATE DESENVOLVIDO POR NOCODE STARTUP\nhttps://nocodestartup.io/\n\nFORMA√á√ÉO GESTOR DE AGENTES DE IA:\nhttps://nocodestartup.io/formacao-gestor-agentes-ia/"},{"parameters":{"resource":"messages-api","instanceName":"=delivery","remoteJid":"=5516992975836@s.whatsapp.net","messageText":"=``` {{ JSON.stringify($('Code3').first().json.mensagem).replace(/\\\\n/g, '\\n')  }}```","options_message":{}},"type":"n8n-nodes-evolution-api.evolutionApi","typeVersion":1,"position":[4224,-1280],"id":"c6685f61-09f3-44cd-a564-471229244dec","name":"MenuCardapio12","credentials":{"evolutionApi":{"id":"ApqS5DPziUrzonYT","name":"Evolution account"}}},{"parameters":{"operation":"executeQuery","query":"WITH ordenado AS (\n  SELECT \n    item_id,\n    user_id,\n    pedido_id,\n    ROW_NUMBER() OVER (PARTITION BY user_id, pedido_id ORDER BY item_id) AS nova_ordem\n  FROM item_pedido_temp\n)\nUPDATE item_pedido_temp i\nSET ordem_item = o.nova_ordem\nFROM ordenado o\nWHERE i.item_id = o.item_id\n  AND i.user_id = o.user_id\n  AND i.pedido_id = o.pedido_id \n   and i.user_id =   {{ $('DadoPedido').item.json.user_id }} \n  and i.pedido_id = {{ $('DadoPedido').item.json.pedido_id }}  and  status = 'concluido'  ;","options":{}},"type":"n8n-nodes-base.postgres","typeVersion":2.6,"position":[3360,-528],"id":"86faff93-e8fb-47a4-84e7-6d67471a8cd9","name":"OrdenaPedido","credentials":{"postgres":{"id":"3NLaVyXonSrCcLE3","name":"Postgres account"}}},{"parameters":{},"type":"n8n-nodes-base.noOp","typeVersion":1,"position":[4384,-848],"id":"f13abe14-94e6-49ea-a500-5d7ed8abe8a9","name":"No Operation, do nothing27","notes":"TEMPLATE DESENVOLVIDO POR NOCODE STARTUP\nhttps://nocodestartup.io/\n\nFORMA√á√ÉO GESTOR DE AGENTES DE IA:\nhttps://nocodestartup.io/formacao-gestor-agentes-ia/"},{"parameters":{"resource":"messages-api","instanceName":"delivery","remoteJid":"=5516992975836@s.whatsapp.net","messageText":"={{ $json.original }}","options_message":{}},"type":"n8n-nodes-evolution-api.evolutionApi","typeVersion":1,"position":[3360,-1856],"id":"f7ba01a9-cd00-4ff0-ae9a-b87d84ea78e7","name":"MenuCardapio44","credentials":{"evolutionApi":{"id":"ApqS5DPziUrzonYT","name":"Evolution account"}}},{"parameters":{"jsCode":" // Entrada\nconst texto =  \"4-Concluir\\n5-Consultar\\n6-Cancelar \\n7-Detalhar\\nExcluir Item\\nIncluir Itens\";\n// Mapas\nconst normal = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789\";\n\n// 1) Fullwidth\nconst full = \"Ôº°Ôº¢Ôº£Ôº§Ôº•Ôº¶ÔºßÔº®Ôº©Ôº™Ôº´Ôº¨Ôº≠ÔºÆÔºØÔº∞Ôº±Ôº≤Ôº≥Ôº¥ÔºµÔº∂Ôº∑Ôº∏ÔºπÔº∫\" +\n             \"ÔΩÅÔΩÇÔΩÉÔΩÑÔΩÖÔΩÜÔΩáÔΩàÔΩâÔΩäÔΩãÔΩåÔΩçÔΩéÔΩèÔΩêÔΩëÔΩíÔΩìÔΩîÔΩïÔΩñÔΩóÔΩòÔΩôÔΩö\" +\n             \"ÔºêÔºëÔºíÔºìÔºîÔºïÔºñÔºóÔºòÔºô\";\n\n// 2) Small caps (mai√∫sculas pequenas)\nconst smallcaps = \"Ôº°Ôº¢Ôº£Ôº§Ôº•Ôº¶ÔºßÔº®Ôº©Ôº™Ôº´Ôº¨Ôº≠ÔºÆÔºØÔº∞Ôº±Ôº≤Ôº≥Ôº¥ÔºµÔº∂Ôº∑Ôº∏ÔºπÔº∫\" +\n                  \"·¥Ä ô·¥Ñ·¥Ö·¥áÍú∞…¢ ú…™·¥ä·¥ã ü·¥ç…¥·¥è·¥ò«´ Äs·¥õ·¥ú·¥†·¥°x è·¥¢\" +\n                  \"0123456789\";\n\n// 3) Circulado\nconst circ = \"‚í∂‚í∑‚í∏‚íπ‚í∫‚íª‚íº‚íΩ‚íæ‚íø‚ìÄ‚ìÅ‚ìÇ‚ìÉ‚ìÑ‚ìÖ‚ìÜ‚ìá‚ìà‚ìâ‚ìä‚ìã‚ìå‚ìç‚ìé‚ìè\" +\n             \"‚ìê‚ìë‚ìí‚ìì‚ìî‚ìï‚ìñ‚ìó‚ìò‚ìô‚ìö‚ìõ‚ìú‚ìù‚ìû‚ìü‚ì†‚ì°‚ì¢‚ì£‚ì§‚ì•‚ì¶‚ìß‚ì®‚ì©\" +\n             \"‚ì™‚ë†‚ë°‚ë¢‚ë£‚ë§‚ë•‚ë¶‚ëß‚ë®\";\n\n// 4) Quadrado (emoji-like)\nconst square = \"üÑ∞üÑ±üÑ≤üÑ≥üÑ¥üÑµüÑ∂üÑ∑üÑ∏üÑπüÑ∫üÑªüÑºüÑΩüÑæüÑøüÖÄüÖÅüÖÇüÖÉüÖÑüÖÖüÖÜüÖáüÖàüÖâ\" +\n               \"üÑ∞üÑ±üÑ≤üÑ≥üÑ¥üÑµüÑ∂üÑ∑üÑ∏üÑπüÑ∫üÑªüÑºüÑΩüÑæüÑøüÖÄüÖÅüÖÇüÖÉüÖÑüÖÖüÖÜüÖáüÖàüÖâ\" +\n               \"0123456789\";\n\nfunction converter(texto, mapa) {\n  const map = {};\n  for (let i = 0; i < normal.length; i++) {\n    map[normal[i]] = mapa[i];\n  }\n  return texto.split(\"\").map(ch => map[ch] || ch).join(\"\");\n}\n\nreturn {\n  original: \"```\\n\" + texto + \"\\n```\",\n  fullwidth: converter(texto, full),\n  smallcaps: converter(\"```\\n\" + texto + \"\\n```\", smallcaps),\n  circulado: converter(texto, circ),\n  quadrado: converter(texto, square)\n};\n "},"type":"n8n-nodes-base.code","typeVersion":2,"position":[3168,-1856],"id":"d0a6956a-c85b-4b18-93bc-5a6663ef60d9","name":"FormaText1"},{"parameters":{"operation":"executeQuery","query":" UPDATE Item_pedido_temp AS i\nSET  status = 'concluido'\n \nWHERE  status = 'inicio' and\n    user_id =  {{ $('DadoPedido').item.json.user_id }} and i.pedido_id = {{ $('DadoPedido').item.json.pedido_id }} and i.numero <> 0 ;\n","options":{}},"type":"n8n-nodes-base.postgres","typeVersion":2.6,"position":[3152,-528],"id":"b5ebf3b9-d2df-4845-8e4c-e0c83e3097fa","name":"ConcluiTudo","credentials":{"postgres":{"id":"3NLaVyXonSrCcLE3","name":"Postgres account"}}},{"parameters":{"fieldToSplitOut":"output.bordas","options":{}},"type":"n8n-nodes-base.splitOut","typeVersion":1,"position":[752,48],"id":"e56769d0-adcf-4271-8573-80a1dc184634","name":"Bordas","notes":"TEMPLATE DESENVOLVIDO POR NOCODE STARTUP\nhttps://nocodestartup.io/\n\nFORMA√á√ÉO GESTOR DE AGENTES DE IA:\nhttps://nocodestartup.io/formacao-gestor-agentes-ia/"},{"parameters":{"numberInputs":6},"type":"n8n-nodes-base.merge","typeVersion":3.2,"position":[1792,-576],"id":"ec18115b-1dc9-4971-b260-adebc6788470","name":"Merge1","alwaysOutputData":false,"onError":"continueRegularOutput"},{"parameters":{"model":{"__rl":true,"value":"gpt-4.1-mini","mode":"list","cachedResultName":"gpt-4.1-mini"},"options":{}},"type":"@n8n/n8n-nodes-langchain.lmChatOpenAi","typeVersion":1.2,"position":[16,-208],"id":"29668865-9ed1-45b0-941b-049371b5e133","name":"OpenAI Chat Model","credentials":{"openAiApi":{"id":"YvUoOPijIpNeTjed","name":"OpenAi account"}}},{"parameters":{"schemaType":"manual","inputSchema":" {\n  \"type\": \"object\",\n  \"properties\": {\n    \"pizzas_inteiras\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"quantidade\": { \"type\": \"integer\" },\n          \"numero\": { \"type\": \"integer\" },\n          \"tamanho\": { \"type\": \"string\" },\n           \"nome\": { \"type\": \"string\" },\n           \"pizza_referencia\":  { \"type\": \"string\" }\n          \n        },\n        \"required\": [\"quantidade\", \"numero\", \"tamanho\", \"pedido_id\"]\n      }\n    },\n    \"pizzas_fracionadas\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"quantidade\": { \"type\": \"integer\" },\n          \"metade1\": { \"type\": \"integer\" },\n          \"metade2\": { \"type\": \"integer\" },\n            \"nome\": { \"type\": \"string\" },\n            \"nome_fracao\": { \"type\": \"string\" },\n           \"pizza_referencia\":  { \"type\": \"string\" }\n         \n        },\n        \"required\": [\"quantidade\", \"metade1\", \"metade2\",\"pedido_id\"]\n      }\n    },\n    \"bebidas\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"quantidade\": { \"type\": \"integer\" },\n          \"nome\": { \"type\": \"string\" },\n          \"volume\": { \"type\": \"string\" }\n         \n        },\n        \"required\": [\"quantidade\", \"nome\", \"volume\",\"pedido_id\"]\n      }\n    },\n    \"esfirras\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"quantidade\": { \"type\": \"integer\" },\n          \"numero\": { \"type\": \"integer\" },\n          \"nome\": { \"type\": \"string\" },\n          \"tipo\": { \"type\": \"string\" }\n        },\n        \"required\": [\"quantidade\", \"numero\", \"nome\", \"tipo\"]\n      }\n    },\n    \"bordas\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"object\",\n        \"properties\": {\n          \"numero\": { \"type\": \"integer\" },\n          \"nome\": { \"type\": \"string\" } ,\n           \"pizza_referencia\":  { \"type\": \"string\" },\n          \"tamanho\": { \"type\": \"string\" },\n           \"pizza_pai\":  { \"type\": \"integer\" } ,\n          \"categoria\": { \"type\": \"string\" }\n         \n    },\n        \"required\": [\"numero\", \"pizza_referencia\"]\n      }\n    },\n    \"item\": {\n      \"type\": \"array\",\n      \"items\": {\n        \"type\": \"object\",\n        \"properties\": { \n          \"nome\": { \"type\": \"string\" } ,\n           \"pizza_pai\":  { \"type\": \"integer\" } \n         \n    },\n        \"required\": [\"nome\", \"pizza_pai\"]\n      }\n    }\n\n    \n  },\n  \"required\": [\n    \"pizzas_inteiras\",\n    \"pizzas_fracionadas\",\n    \"bebidas\",\n    \"esfirras\",\n    \"bordas\" \n  ]\n}\n"},"type":"@n8n/n8n-nodes-langchain.outputParserStructured","typeVersion":1.2,"position":[160,-224],"id":"8e713269-9051-4c42-82c1-636de7005114","name":"Structured Output Parser [Schema]","notes":"TEMPLATE DESENVOLVIDO POR NOCODE STARTUP\nhttps://nocodestartup.io/\n\nFORMA√á√ÉO GESTOR DE AGENTES DE IA:\nhttps://nocodestartup.io/formacao-gestor-agentes-ia/"},{"parameters":{"promptType":"define","text":"=<mensagem_do_usuario>\n {{ $('When chat message received').item.json.chatInput }}\n</mensagem_do_usuario>","hasOutputParser":true,"messages":{"messageValues":[{"message":"=  {\n  \"pizzas_inteiras\": [\n    { \"quantidade\": int, \"numero\": int, \"tamanho\": str , \"nome\": str, \"pizza_referencia\": str  }   \n  ],\n  \"pizzas_fracionadas\": [\n    { \"quantidade\": int, \"metade1\": int, \"metade2\": int , \"nome\": str, \n\"nome_fracao\": str , \"pizza_referencia\": str }\n  ],\n  \"bebidas\": [\n    { \"quantidade\": int, \"nome\": str, \"volume\": str  }\n  ],\n \"esfirras\": [\n  { \"quantidade\": int, \"numero\": int, \"nome\": str, \"tipo\": str } // tipo: \"salgada\" ou \"doce\"\n  ],\n  \"bordas\": [\n    { \"numero\": int, \"nome\": str, \"pizza_referencia\": str , \"tamanho\": str, \"categoria\": str, \"pizza_pai\": int} \n\n\n\n// \"pizza_referencia\" = string que identifica a pizza onde ser√° aplicada\n  ]\n \"item\": [\n    { \"nome\": str , \"pizza_pai\": int } //  \n  ]\n\n\n}\n\n‚ö†Ô∏è Regras obrigat√≥rias:\n- Sempre retorne exatamente essas 5 listas, mesmo que estejam vazias.\n- Use apenas os nomes de campos e estrutura mostrados acima.\n- Retorne **apenas o JSON v√°lido**, sem explica√ß√µes, coment√°rios ou texto adicional.\n\nSe o usu√°rio informar apenas ‚Äòpizza N‚Äô, n√£o descarte. Gere {quantidade:1, numero:N, tamanho:'media'} em pizzas_inteiras.‚Äù\n\n‚ÄúNunca omita itens amb√≠guos; use defaults: quantidade=1, tamanho='media'.‚Äù\n\n‚ÄúN√£o valide com o card√°pio. A valida√ß√£o ser√° feita depois; sempre retorne o item.‚Äù\n\n\"A palavra uma , duas  refere-se sempre  quantidade  exemplo uma  pizza mussarela ou uma pizza presunto e queijo √© quantidade..\"\n\n\n\nPrioridade de interpreta√ß√£o\n\nSe houver padr√µes de pizza fracionada no formato {Q? 1/2 A (e|,|+|/) 1/2 B}, crie um item em pizzas_fracionadas com {quantidade: Q || 1, metade1: A, metade2: B}.\n\nNunca crie pizzas_inteiras para n√∫meros A ou B quando eles estiverem dentro de um padr√£o fracionado.\n\nS√≥ trate ‚Äúpizza N‚Äù (inteira) quando n√£o fizer parte de um padr√£o 1/2 N.  \n\nSo trate   \"pizza\" se tiver explicito que se trata de \"pizza\"\n\nSo trate   \"esfirra \" se tiver explicito que se trata de \"esfirra\"\n\n\nRegras espec√≠ficas para BORDAS (muito importante):\n- Se a mensagem contiver ‚Äúborda‚Äù, o texto imediatamente ap√≥s a palavra ‚Äúborda‚Äù\n  at√© antes de ‚Äúao item‚Äù, ‚Äúno item‚Äù, ‚Äúitem‚Äù, ‚Äúpizza‚Äù ou o fim da frase, √© o campo \"nome\".\n- Normalize espa√ßos e min√∫sculas (ex.: \"Borda   Cheddar\" ‚Üí nome: \"cheddar\").\n- Sempre preencha \"categoria\":\"borda\" e \"pizza_pai\" com o n√∫mero do item/pizza alvo quando presente (ex.: \"item 1\" ‚Üí pizza_pai: 1).\n- N√£o use o campo \"item[]\"; bordas devem ir apenas em \"bordas[]\".\n- Defaults para borda quando ausentes: numero=0, tamanho=\"\", pizza_referencia=\"\".\n\n\n\nExemplos:\n\n‚Äú1 pizza 1/2 14  e 1/2 21‚Äù ‚Üí pizzas_fracionadas: [{quantidade:1, metade1:14, metade2:21, nome:'', nome_fracao: '' } ]\n\n‚Äú2 1/2 10, 1/2 15‚Äù ‚Üí pizzas_fracionadas: [{quantidade:2, metade1:10, metade2:15 , nome:'', nome_fracao: '' }]\n\n‚Äú14 e 21‚Äù (sem 1/2) ‚Üí pizzas_inteiras: [{q:1,n:14,media},{q:1,n:21,media }]\n\n\n\n‚Äú1 pizza 1/2 mussarela  e 1/2 presunto e queijo ‚Äù ‚Üí pizzas_fracionadas: [{quantidade:1, metade1:0, metade2:0, nome:mussarela, nome_fracao: presunto e queijo } ]\n\n‚Äú1 pizza meia  mussarela  e meia  presunto e queijo ‚Äù ‚Üí pizzas_fracionadas: [{quantidade:1, metade1:0, metade2:0, nome:mussarela, nome_fracao: presunto e queijo } ]\n\nSe o cliente disser meia  interprete como 1/2\n\n\n \nBebidas ‚Äî defaults e sin√¥nimos (obrigat√≥rio)\n\nSe o cliente disser ‚Äúlata‚Äù e n√£o informar volume, use 350ml.\n\nSe o cliente disser ‚Äúlong neck‚Äù e n√£o informar volume, use 330ml.\n\nSe o cliente pedir coca/coca-cola sem volume, use 2l.\n\nNunca rejeite bebidas por falta de volume quando se aplicar uma regra acima.\n\nNormalize o campo volume sempre em min√∫sculas e sem espa√ßos (ex.: 350ml, 330ml, 2l).\n\nExemplos\n\n‚Äú3 long neck heineken‚Äù ‚Üí bebidas: [{ \"quantidade\": 3, \"nome\": \"heineken\", \"volume\": \"330ml\" }]\n\n‚Äúlata bud‚Äù ‚Üí bebidas: [{ \"quantidade\": 1, \"nome\": \"budweiser\", \"volume\": \"350ml\" }]\n\n‚Äú2 coca‚Äù ‚Üí bebidas: [{ \"quantidade\": 2, \"nome\": \"coca cola\", \"volume\": \"2l\" }]\nPedido:\n{pedido}\n\nquando numa string de comando tiver 1 pizza musssarela  1 borda chedaar na qual o codigo da pizza n√£o for identifica,  crie no campo   \"pizza_referencia\" uma amarra√ß√£o entre 1 pizza mussarela e borda   \"pizza_referencia\" pode ser um codigo unico. Isso vale tambpem para pizza fracionada \n\n"}]}},"type":"@n8n/n8n-nodes-langchain.chainLlm","typeVersion":1.6,"position":[0,-560],"id":"03c7b5ef-890b-43ea-9e04-b190ee33affa","name":"Basic LLM Chain","retryOnFail":true,"notes":"TEMPLATE DESENVOLVIDO POR NOCODE STARTUP\nhttps://nocodestartup.io/\n\nFORMA√á√ÉO GESTOR DE AGENTES DE IA:\nhttps://nocodestartup.io/formacao-gestor-agentes-ia/"},{"parameters":{"fieldToSplitOut":"output.item","options":{}},"type":"n8n-nodes-base.splitOut","typeVersion":1,"position":[768,-176],"id":"52506e17-3640-4a5c-97f2-d75318f09678","name":"item4","notes":"TEMPLATE DESENVOLVIDO POR NOCODE STARTUP\nhttps://nocodestartup.io/\n\nFORMA√á√ÉO GESTOR DE AGENTES DE IA:\nhttps://nocodestartup.io/formacao-gestor-agentes-ia/"},{"parameters":{"tableId":"item_pedido_temp","fieldsUi":{"fieldValues":[{"fieldId":"user_id","fieldValue":"={{ $('MontPedido').item.json.user_id }}"},{"fieldId":"quantidade","fieldValue":"=1"},{"fieldId":"tipo","fieldValue":"item"},{"fieldId":"categoria","fieldValue":"item"},{"fieldId":"nome","fieldValue":"={{ $json.nome?.trim() === '' ? null : $json.nome }}"},{"fieldId":"numero","fieldValue":"=0"},{"fieldId":"fracionada","fieldValue":"=false"},{"fieldId":"pedido_id","fieldValue":"={{ $('MontPedido').item.json.pedido_id }}"},{"fieldId":"tamanho","fieldValue":"=0"}]}},"type":"n8n-nodes-base.supabase","typeVersion":1,"position":[1008,-176],"id":"5f4ecb21-f345-44c7-92f8-9be2a993f5f8","name":"Item4","credentials":{"supabaseApi":{"id":"CcvRddDPb5xelxfb","name":"Supabase account"}}},{"parameters":{"operation":"executeQuery","query":"SELECT AtualizaValorFracionado(  {{ $('DadoPedido').item.json.user_id }},{{ $('DadoPedido').item.json.pedido_id }});","options":{}},"type":"n8n-nodes-base.postgres","typeVersion":2.6,"position":[2688,-528],"id":"a381a11d-a7c7-4aa3-aa57-c6a67985f4bb","name":"AtualizaValorPizzaFracionada2","credentials":{"postgres":{"id":"3NLaVyXonSrCcLE3","name":"Postgres account"}}},{"parameters":{"operation":"executeQuery","query":"SELECT   atualizar_valores_itens_temp( {{ $('DadoPedido').item.json.user_id }},{{ $('DadoPedido').item.json.pedido_id }} );","options":{}},"type":"n8n-nodes-base.postgres","typeVersion":2.6,"position":[2464,-528],"id":"157dbe1e-050f-456b-ac79-2d88e1607752","name":"AtualizaValorItem2","credentials":{"postgres":{"id":"3NLaVyXonSrCcLE3","name":"Postgres account"}}},{"parameters":{"tableId":"item_pedido_temp","fieldsUi":{"fieldValues":[{"fieldId":"user_id","fieldValue":"={{ $('MontPedido').item.json.user_id }}"},{"fieldId":"quantidade","fieldValue":"=1"},{"fieldId":"tipo","fieldValue":"borda"},{"fieldId":"categoria","fieldValue":"borda"},{"fieldId":"nome","fieldValue":"={{ $('Bordas').item.json.nome }}"},{"fieldId":"numero","fieldValue":"=0"},{"fieldId":"fracionada","fieldValue":"=false"},{"fieldId":"pedido_id","fieldValue":"={{ $('MontPedido').item.json.pedido_id }}"},{"fieldId":"tamanho","fieldValue":"=G"}]}},"type":"n8n-nodes-base.supabase","typeVersion":1,"position":[1008,48],"id":"754e1ee8-60ce-4a79-9dc7-aa77cf2359e8","name":"Item5","credentials":{"supabaseApi":{"id":"CcvRddDPb5xelxfb","name":"Supabase account"}}},{"parameters":{"assignments":{"assignments":[{"id":"a3c83333-8ce3-4995-8230-b361099aa1e4","name":"user_id","value":72,"type":"number"},{"id":"d7c14753-505f-48ee-a344-fa565ace43df","name":"pedido_id","value":16,"type":"number"}]},"options":{}},"type":"n8n-nodes-base.set","typeVersion":3.4,"position":[-208,-528],"id":"a6418514-62bb-4f8a-b1e3-7debd49a46c5","name":"MontPedido"},{"parameters":{"assignments":{"assignments":[{"id":"8033b503-a34e-4682-a40a-b60b315714e6","name":"user_id","value":"={{ $json.user_id }}","type":"number"},{"id":"bd4fde4d-0d15-4271-945c-571b24973379","name":"pedido_id","value":"={{ $json.pedido_id }}","type":"number"}]},"options":{}},"type":"n8n-nodes-base.set","typeVersion":3.4,"position":[2032,-528],"id":"8373ecb1-043b-4540-895e-8bb63b1ffe3a","name":"DadoPedido","executeOnce":true},{"parameters":{"operation":"executeQuery","query":"call valida_nome_item_pedido( {{ $json.user_id }} , {{ $json.pedido_id }});","options":{}},"type":"n8n-nodes-base.postgres","typeVersion":2.6,"position":[2224,-528],"id":"fe8bc0da-85fc-4616-8f56-8b2747cc414e","name":"ValidaItemNome","credentials":{"postgres":{"id":"3NLaVyXonSrCcLE3","name":"Postgres account"}}},{"parameters":{"operation":"executeQuery","query":" select calcula_pre_pedido({{ $('DadoPedido').item.json.user_id }}, {{ $('DadoPedido').item.json.pedido_id }}  );","options":{}},"type":"n8n-nodes-base.postgres","typeVersion":2.6,"position":[3600,-528],"id":"2cf0ee35-f685-43fc-8f84-7ecfc3c9c52c","name":"Execute a SQL query2","credentials":{"postgres":{"id":"3NLaVyXonSrCcLE3","name":"Postgres account"}}},{"parameters":{"resource":"messages-api","instanceName":"delivery","remoteJid":"=5516992975836@s.whatsapp.net","messageText":"={{ $json.texto_alinhado }}","options_message":{}},"type":"n8n-nodes-evolution-api.evolutionApi","typeVersion":1,"position":[4048,-528],"id":"10406ba5-51dd-442c-8de1-aebbdba35711","name":"MenuCardapio10","credentials":{"evolutionApi":{"id":"ApqS5DPziUrzonYT","name":"Evolution account"}}},{"parameters":{"jsCode":" const raw = ($json.calcula_pre_pedido || \"\").replace(/\\r\\n/g, \"\\n\");\nconst txt = raw.trim();\n\nif (!txt) {\n  return { texto_alinhado: \"n√£o existe registro\" };\n}\n\nconst lines = txt.split(\"\\n\").map(l => l.trimEnd());\n\n// Se n√£o tiver \"Resumo:\", devolve o corpo original\nconst start = lines.findIndex(l => /resumo:/i.test(l));\nif (start === -1) {\n  return { texto_alinhado: txt };\n}\n\nlet end = lines.findIndex((l, i) => i > start && (\n  /forma de pagamento/i.test(l) || /entrega:/i.test(l) || /total:/i.test(l) || /total de itens/i.test(l)\n));\nif (end === -1) end = lines.length;\n\nconst header = lines.slice(0, start + 1);\nconst itemLines = lines.slice(start + 1, end).filter(l => l.trim());\nconst footer = lines.slice(end);\n\n// ---- parsing ajustado ----\nconst parsed = itemLines.map(line => {\n  const match = line.match(/(R\\$\\s*[\\d\\.,]+)$/);\n  if (!match) return { num: \"\", desc: line.trim(), valor: \"\" };\n\n  const valor = match[1].replace(\"R$\", \"\").trim();\n  const left = line.slice(0, match.index).trim();\n\n  // captura do n√∫mero inicial (ex: (1) Nome ...)\n  const numMatch = left.match(/^\\((\\d+)\\)\\s*(.*)$/);\n  let num = \"\", desc = left;\n  if (numMatch) {\n    num = numMatch[1];\n    desc = numMatch[2].trim();\n  }\n\n  return { num, desc, valor };\n});\n\nconst maxNum = parsed.reduce((m, o) => Math.max(m, o.num.length), 0);\nconst maxDesc = parsed.reduce((m, o) => Math.max(m, o.desc.length), 0);\n\n// monta itens alinhados com cabe√ßalho\nconst itensAlinhados = [\n  \"Item \".padEnd(maxNum + 2, \" \") +\n  \"Descri√ß√£o\".padEnd(maxDesc + 4, \" \") +\n  \"Valor\"\n];\n\nparsed.forEach(o => {\n  itensAlinhados.push(\n    o.num.padEnd(maxNum + 2, \" \") +\n    o.desc.padEnd(maxDesc + 4, \" \") +\n    \"R$ \" + o.valor\n  );\n});\n\n// ---- corpo final ----\nconst corpo = [\n  ...header,\n  ...itensAlinhados,\n  ...footer\n].join(\"\\n\");\n\nreturn { texto_alinhado: \"```\\n\" + corpo + \"\\n```\" };\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[3840,-528],"id":"bc5d27b1-c892-437b-9ebf-a0000affef2d","name":"Code5"},{"parameters":{"jsCode":" const input =  $input.first().json.chatInput || \"\";\n\n// Normaliza\nconst frase = input.toLowerCase().replace(/\\s+/g, \" \").trim();\n\nconst result = {\n  pizzas_inteiras: [],\n  pizzas_fracionadas: [],\n  bebidas: [],\n  bordas: []\n};\n\n// Quebra em peda√ßos por \" e \", \" , \", \" + \" etc\nconst partes = frase.split(/,| e | \\+ | \\/ /).map(p => p.trim()).filter(Boolean);\n\nfor (let p of partes) {\n  let qtd = 1;\n  const qtdMatch = p.match(/^(\\d+)/);\n  if (qtdMatch) qtd = parseInt(qtdMatch[1]);\n\n  // üçï Fracionada\n  if (p.includes(\"1/2\")) {\n    const fracoes = p.split(/1\\/2/).map(f => f.trim()).filter(Boolean);\n    if (fracoes.length === 2) {\n      result.pizzas_fracionadas.push({\n        quantidade: qtd,\n        metade1: isNaN(fracoes[0]) ? fracoes[0] : parseInt(fracoes[0]),\n        metade2: isNaN(fracoes[1]) ? fracoes[1] : parseInt(fracoes[1]),\n        tamanho: \"media\"\n      });\n    }\n  }\n\n  // üßÄ Borda\n  else if (p.includes(\"borda\")) {\n    result.bordas.push({\n      quantidade: qtd,\n      nome: p.replace(/borda|pizza|item|\\d+/gi, \"\").trim(),\n      pizza_referencia: \"\"\n    });\n  }\n\n  // ü•§ Bebidas\n  else if (p.includes(\"coca\") || p.includes(\"refrigerante\") || p.includes(\"guaran√°\") || p.includes(\"suco\")) {\n    let volume = \"\";\n    if (p.includes(\"2l\")) volume = \"2l\";\n    else if (p.includes(\"350ml\") || p.includes(\"lata\")) volume = \"350ml\";\n    else if (p.includes(\"330ml\") || p.includes(\"long neck\")) volume = \"330ml\";\n\n    result.bebidas.push({\n      quantidade: qtd,\n      nome: p.replace(/\\d+|coca|cola|refrigerante|guaran√°|suco|lata|long neck|ml|l/gi, \"\").trim(),\n      volume: volume || \"2l\"\n    });\n  }\n\n  // üçï Pizza inteira\n  else if (p.includes(\"pizza\")) {\n    let tamanho = \"media\";\n    if (p.includes(\"grande\")) tamanho = \"grande\";\n    else if (p.includes(\"brotinho\")) tamanho = \"brotinho\";\n\n    const numeroMatch = p.match(/(\\d+)/);\n    if (numeroMatch) {\n      result.pizzas_inteiras.push({\n        quantidade: qtd,\n        numero: parseInt(numeroMatch[1]),\n        tamanho\n      });\n    } else {\n      result.pizzas_inteiras.push({\n        quantidade: qtd,\n        nome: p.replace(/\\d+|pizza|grande|media|brotinho/gi, \"\").trim(),\n        tamanho\n      });\n    }\n  }\n}\n\nreturn [{ json: result }];\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[-944,-544],"id":"0255a680-b4f6-4b28-b9c0-9fa8c31aeabc","name":"Code"},{"parameters":{"resource":"messages-api","instanceName":"=delivery","remoteJid":"=5516992975836@s.whatsapp.net","messageText":"={{$json.mensagem}}\n","options_message":{"delay":4}},"type":"n8n-nodes-evolution-api.evolutionApi","typeVersion":1,"position":[4944,-528],"id":"05813221-b1d8-4a04-bf03-3a4ee752daa8","name":"MenuCardapio40","credentials":{"evolutionApi":{"id":"ApqS5DPziUrzonYT","name":"Evolution account"}}},{"parameters":{"jsCode":" // ===== Emojis =====\nconst HDR_EMOJI  = 'üîπ';\nconst DESC_EMOJI = 'üìù';\n\n// -------- Helpers --------\nfunction toNum(x) {\n  if (typeof x === 'number' && isFinite(x)) return x;\n  if (x == null) return 0;\n  const s = String(x).replace(/[^\\d,.-]/g, '').replace(/\\.(?=\\d{3}(?:\\D|$))/g, '').replace(',', '.');\n  const n = Number(s);\n  return isFinite(n) ? n : 0;\n}\nfunction moneyTrim(n) {\n  const s = toNum(n).toFixed(2).replace(/(\\.\\d*?)0+$/, '$1').replace(/\\.$/, '');\n  return s;\n}\nfunction clean(txt) {\n  return String(txt || '')\n    .replace(/\\uFFFD/g, '')\n    .normalize('NFD').replace(/[\\u0300-\\u036f]/g,'')\n    .replace(/\\s*-\\s*/g, ' - ')\n    .replace(/[ \\t]+/g, ' ')\n    .trim();\n}\nconst bold = s => `*${s}*`;\n\n// -------- Infer√™ncia de Categoria & Tipo --------\nconst BEBIDAS_RX = /\\b(coca(?:\\s*cola)?|guaran[a√°]|heineken|bud(?:weiser)?|cerveja|√°gua|agua|fanta|sprite|pepsi|refrigerante|long\\s*neck|lata)\\b/i;\nconst BORDA_RX   = /\\bborda\\b/i;\nconst ESFIRRA_RX = /\\besfirra\\b/i;\n\nconst DOCES_RX = /\\b(chocolate|nutella|goiabada|doce\\s+de\\s+leite|brigadeiro|beijinho|romeu\\s*e\\s*julieta|banana|morango|pa√ßoca|pacoca|prest√≠gio|prestigio)\\b/i;\n\nfunction guessCategoria(nome, desc, cat) {\n  if (cat && String(cat).trim()) return String(cat).toLowerCase(); // j√° veio do backend\n  const hay = `${nome} ${desc}`;\n  if (BEBIDAS_RX.test(hay)) return 'bebida';\n  if (BORDA_RX.test(hay))   return 'borda';\n  if (ESFIRRA_RX.test(hay)) return 'esfirra';\n  return 'pizza'; // default\n}\n\nfunction guessTipo(nome, desc, tipo) {\n  if (tipo && String(tipo).trim()) return String(tipo).toLowerCase();\n  const hay = `${nome} ${desc}`;\n  return DOCES_RX.test(hay) ? 'doce' : 'salgada';\n}\n\n// -------- Entrada --------\nconst items = $input.all();\nlet rows = [];\nif (items.length > 1) rows = items.map(i => i.json);\nelse {\n  let p = items?.[0]?.json ?? {};\n  if (p && typeof p === 'object' && 'result' in p) p = p.result;\n  rows = Array.isArray(p) ? p : (p && typeof p === 'object' ? [p] : []);\n}\n\n// -------- Sa√≠da formatada --------\nconst lines = rows.map(r => {\n  const numero = r.numero ?? r.id ?? r.code ?? '';\n  const nome   = clean(r.nome ?? r.name ?? 'Item');\n  const desc   = clean(r.descricao ?? r.description ?? '');\n\n  const g = r.preco_grande ?? r.precoG ?? r.preco_g;\n  const m = r.preco_media  ?? r.precoM ?? r.preco_m;\n\n  const categoria = guessCategoria(nome, desc, r.categoria);\n  const tipo      = guessTipo(nome, desc, r.tipo);\n\n  const parts = [];\n  if (g != null && g !== '') parts.push(`(G) R$${moneyTrim(g)}`);\n  if (m != null && m !== '') parts.push(`(M) R$${moneyTrim(m)}`);\n  const precoStr = parts.join(' / ') || 'R$0';\n\n  const header = `${HDR_EMOJI} ${ bold(`(${numero})`) } ${nome} ‚Äì ${bold(precoStr)} ${bold(` [${categoria}] [${tipo}]`)}`;\n  const body   = `${DESC_EMOJI} Descri√ß√£o: ${desc || '-'}`\n  return `${header}\\n${body}`;\n});\n\nreturn [{\n  json: {\n    descricao: lines.join('\\n\\n'),\n    user_id: $json.user_id ?? null,\n    pedido_id: $json.pedido_id ?? null\n  }\n}];\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[4512,-528],"id":"0eaa0e8a-be3b-48f5-af58-245debcfeedb","name":"VariasPizzas1"},{"parameters":{"jsCode":" const descricao = $json.descricao || \"\";\nreturn {\n  mensagem: \"```\\n\" + descricao + \"\\n```\"\n};"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[4704,-528],"id":"e7972fe9-b687-4292-bce3-792f58828e6c","name":"Code13"},{"parameters":{"operation":"executeQuery","query":" \n\n\n   SELECT  'n√£o fracionado' , * FROM busca_cardapio( ( SELECT string_agg(num, ', ')\n \n  FROM ( select  distinct c.numero::text AS num\n \n        FROM item_pedido_temp AS i2\n        LEFT JOIN cardapio AS c\n          ON c.categoria in( 'pizza', 'item','borda')\n         AND c.nome ILIKE '%' || TRIM(i2.nome) || '%'\n        WHERE i2.status = 'opcoes'\n          AND i2.user_id = {{ $('DadoPedido').item.json.user_id }}    \n          AND i2.pedido_id =  {{ $('DadoPedido').item.json.pedido_id }}   \n          AND i2.numero = 0 and\n          c.categoria  = i2.categoria and i2.fracionada = false )  \n   )\n   )\n\n  \n\n    union   all    SELECT 'Fracionado', * FROM busca_cardapio( ( SELECT string_agg(num, ', ')\n \n  FROM ( select  distinct c.numero::text AS num\n \n        FROM item_pedido_temp AS i2\n        LEFT JOIN cardapio AS c\n          ON c.categoria in( 'pizza', 'item','borda')\n         AND c.nome ILIKE '%' || TRIM(i2.nome) || '%'\n        WHERE i2.status = 'opcoes'\n          AND i2.user_id = {{ $('DadoPedido').item.json.user_id }}\n          AND i2.pedido_id =  {{ $('DadoPedido').item.json.pedido_id }}\n          AND i2.numero = 0 and\n          c.categoria  = i2.categoria and i2.fracionada = true  )  \n   )\n   )\n\n\n    union   all    SELECT 'Fracionado', * FROM busca_cardapio( ( SELECT string_agg(num, ', ')\n \n  FROM ( select  distinct c.numero::text AS num\n \n        FROM item_pedido_temp AS i2\n        LEFT JOIN cardapio AS c\n          ON c.categoria in( 'pizza', 'item','borda')\n         AND c.nome ILIKE '%' || TRIM(i2.nome_fracao) || '%'\n        WHERE i2.status = 'opcoes'\n          AND i2.user_id =  {{ $('DadoPedido').item.json.user_id }}  \n          AND i2.pedido_id =    {{ $('DadoPedido').item.json.pedido_id }}\n          AND i2.numero_fracao = 0 and\n          c.categoria  = i2.categoria and i2.fracionada = true  )  \n   )\n   )","options":{}},"type":"n8n-nodes-base.postgres","typeVersion":2.6,"position":[4304,-528],"id":"6a4b54f9-02ac-4076-9fbd-c51cea1a1f8d","name":"ConsultaOnline","credentials":{"postgres":{"id":"3NLaVyXonSrCcLE3","name":"Postgres account"}}}],"connections":{"When chat message received":{"main":[[{"node":"Code","type":"main","index":0}]]},"OpenAI Chat Model4":{"ai_languageModel":[[{"node":"Basic LLM Chain1","type":"ai_languageModel","index":0}]]},"Structured Output Parser [Schema]1":{"ai_outputParser":[[{"node":"Basic LLM Chain1","type":"ai_outputParser","index":0}]]},"Basic LLM Chain1":{"main":[[{"node":"item","type":"main","index":0},{"node":"item2","type":"main","index":0}]]},"item":{"main":[[{"node":"Loop Over Items","type":"main","index":0}]]},"Loop Over Items":{"main":[[{"node":"Replace Me","type":"main","index":0}],[{"node":"ConsultaBorda2","type":"main","index":0}]]},"Replace Me":{"main":[[]]},"Item":{"main":[[{"node":"Loop Over Items","type":"main","index":0}]]},"If":{"main":[[{"node":"Item","type":"main","index":0}],[{"node":"Loop Over Items","type":"main","index":0}]]},"ConsultaBorda2":{"main":[[{"node":"If","type":"main","index":0}]]},"item2":{"main":[[{"node":"Item2","type":"main","index":0}]]},"item3":{"main":[[{"node":"Item3","type":"main","index":0}]]},"Item1":{"main":[[{"node":"Loop Over Items1","type":"main","index":0}]]},"Loop Over Items1":{"main":[[{"node":"Merge","type":"main","index":0}],[{"node":"Item1","type":"main","index":0}]]},"item1":{"main":[[{"node":"Loop Over Items1","type":"main","index":0}]]},"Item3":{"main":[[{"node":"Merge","type":"main","index":1}]]},"AtualizaValorPizzaFracionada":{"main":[[]]},"AtualizaValorItem":{"main":[[{"node":"AtualizaValorPizzaFracionada","type":"main","index":0}]]},"Merge":{"main":[[{"node":"Edit Fields2","type":"main","index":0}]]},"Execute a SQL query1":{"main":[[{"node":"MontPedido","type":"main","index":0}]]},"Execute a SQL query":{"main":[[{"node":"AtualizaValorItem","type":"main","index":0}]]},"AtualizaValorItem1":{"main":[[{"node":"AtualizaValorPizzaFracionada1","type":"main","index":0}]]},"Execute a SQL query6":{"main":[[{"node":"AtualizaValorItem1","type":"main","index":0}]]},"Edit Fields2":{"main":[[{"node":"Execute a SQL query6","type":"main","index":0}]]},"OpenAI Chat Model1":{"ai_languageModel":[[{"node":"Basic LLM Chain2","type":"ai_languageModel","index":0}]]},"Structured Output Parser [Schema]2":{"ai_outputParser":[[{"node":"Basic LLM Chain2","type":"ai_outputParser","index":0}]]},"Basic LLM Chain2":{"main":[[{"node":"item1","type":"main","index":0}]]},"Code3":{"main":[[{"node":"MenuCardapio12","type":"main","index":0}]]},"Rejeite":{"main":[[{"node":"Code3","type":"main","index":0}]]},"RejeitaItem":{"main":[[{"node":"ConcluiTudo","type":"main","index":0}]]},"Bebidas":{"main":[[{"node":"Itembebida","type":"main","index":0}]]},"Pizzas Fracionada":{"main":[[{"node":"ItemFracionado","type":"main","index":0}]]},"Pizzas Inteira":{"main":[[{"node":"ItemInteira","type":"main","index":0}]]},"Esfirra":{"main":[[{"node":"ItemEsfirra","type":"main","index":0}]]},"Itembebida":{"main":[[{"node":"Merge1","type":"main","index":0}]]},"ItemFracionado":{"main":[[{"node":"Merge1","type":"main","index":1}]]},"ItemInteira":{"main":[[{"node":"Merge1","type":"main","index":2}]]},"ItemEsfirra":{"main":[[{"node":"Merge1","type":"main","index":3}]]},"Auto-fixing Output Parser":{"ai_outputParser":[[{"node":"Basic LLM Chain","type":"ai_outputParser","index":0}]]},"MenuCardapio12":{"main":[[]]},"OrdenaPedido":{"main":[[{"node":"Execute a SQL query2","type":"main","index":0}]]},"MenuCardapio44":{"main":[[]]},"FormaText1":{"main":[[{"node":"MenuCardapio44","type":"main","index":0}]]},"ConcluiTudo":{"main":[[{"node":"OrdenaPedido","type":"main","index":0}]]},"Bordas":{"main":[[{"node":"Item5","type":"main","index":0}]]},"Merge1":{"main":[[{"node":"DadoPedido","type":"main","index":0}]]},"OpenAI Chat Model":{"ai_languageModel":[[{"node":"Auto-fixing Output Parser","type":"ai_languageModel","index":0},{"node":"Basic LLM Chain","type":"ai_languageModel","index":0}]]},"Structured Output Parser [Schema]":{"ai_outputParser":[[{"node":"Auto-fixing Output Parser","type":"ai_outputParser","index":0}]]},"Basic LLM Chain":{"main":[[{"node":"Bebidas","type":"main","index":0},{"node":"Pizzas Fracionada","type":"main","index":0},{"node":"Pizzas Inteira","type":"main","index":0},{"node":"Esfirra","type":"main","index":0},{"node":"item4","type":"main","index":0},{"node":"Bordas","type":"main","index":0}]]},"item4":{"main":[[{"node":"Item4","type":"main","index":0}]]},"Item4":{"main":[[{"node":"Merge1","type":"main","index":4}]]},"AtualizaValorPizzaFracionada2":{"main":[[{"node":"RejeitaItem","type":"main","index":0}]]},"AtualizaValorItem2":{"main":[[{"node":"AtualizaValorPizzaFracionada2","type":"main","index":0}]]},"Item5":{"main":[[{"node":"Merge1","type":"main","index":5}]]},"MontPedido":{"main":[[{"node":"Basic LLM Chain","type":"main","index":0}]]},"DadoPedido":{"main":[[{"node":"ValidaItemNome","type":"main","index":0}]]},"ValidaItemNome":{"main":[[{"node":"AtualizaValorItem2","type":"main","index":0}]]},"Execute a SQL query2":{"main":[[{"node":"Code5","type":"main","index":0}]]},"Code5":{"main":[[{"node":"MenuCardapio10","type":"main","index":0}]]},"MenuCardapio10":{"main":[[{"node":"ConsultaOnline","type":"main","index":0}]]},"Code":{"main":[[{"node":"Execute a SQL query1","type":"main","index":0}]]},"VariasPizzas1":{"main":[[{"node":"Code13","type":"main","index":0}]]},"Code13":{"main":[[{"node":"MenuCardapio40","type":"main","index":0}]]},"ConsultaOnline":{"main":[[{"node":"VariasPizzas1","type":"main","index":0}]]}},"settings":{"executionOrder":"v1"},"staticData":null,"meta":{"templateCredsSetupCompleted":true},"pinData":{"Edit Fields2":[{"json":{"user_id":72,"pedido_id":16}}],"DadoPedido":[{"json":{"user_id":72,"pedido_id":16}}]},"versionId":"e94270e1-6ed2-4523-91ed-5ae472b32957","triggerCount":1,"shared":[{"createdAt":"2025-09-18T15:44:58.320Z","updatedAt":"2025-09-18T15:44:58.320Z","role":"workflow:owner","workflowId":"gL1FbKkYm9zGfCAA","projectId":"wFRMrac2003Pl1x6"}],"tags":[]}