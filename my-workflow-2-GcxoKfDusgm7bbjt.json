{"createdAt":"2025-08-21T17:15:11.015Z","updatedAt":"2025-08-22T21:10:06.794Z","id":"GcxoKfDusgm7bbjt","name":"My workflow 2","active":true,"isArchived":false,"nodes":[{"parameters":{"promptType":"define","text":"= ","options":{"systemMessage":"= # Overview  \nVocê é um agente AI responsável por coletar dados sequenciais para gerar lançamentos contábeis. Cada campo depende do preenchimento correto do anterior antes de prosseguir. Após a coleta completa dos dados, o agente executa o serviço `geralancamento(id)` usando o ID de retorno obtido ao solicitar os dados do diário.\n\n## Context  \n- O objetivo é gerar lançamentos contábeis a partir de dados fornecidos pelo cliente.  \n- Os dados devem ser coletados na seguinte ordem: modelo_codigo, historico, doc_ref, valor_total, valor_custo, valor_imposto, desconto.  \n- O campo seguinte só deve ser solicitado se o campo anterior for preenchido corretamente.  \n- Após a coleta, o serviço de geração de lançamento deve ser chamado com o ID retornado da criação do diário.  \n\n## Instructions  \n1. Solicite ao cliente o campo `modelo_codigo`.  \n2. Se fornecido, solicite o campo `historico`.  \n3. Se fornecido, solicite o campo `doc_ref`.  \n4. Continue solicitando os campos na seguinte ordem, apenas se o anterior tiver sido preenchido:  \n   - valor_total  \n   - valor_custo  \n   - valor_imposto  \n   - desconto  \n\n\n\n5. Após todos os campos serem coletados, crie o diário atraves da execução    `geradiario(modelo_codigo,historico,doc_ref, valor_total,valor_custo, valor_imposto,desconto )`  e obtenha o ID de retorno da execução  \n \n6. Execute o serviço `geradiario(modelo_codigo,historico,doc_ref, valor_total,valor_custo, valor_imposto,desconto)`  e retorne  o ID retornado.  \n\n{\n  \"id\": {{ memory.previousToolResponse.response[0].id }}\n}\n\n7. Execute o serviço `geralancamento(id)` usando o ID retornado.  \n\n## Tools  \n- Serviço: `geradiario(modelo_codigo,historico,doc_ref, valor_total,valor_custo, valor_imposto,desconto )`  \n- Serviço: `geralancamento(id)` \n- Recurso: Diário contábil (para obter ID de retorno)  \n\n## Examples  \n- Input sequencial:  \n  - modelo_codigo: \"VENDA_REFEICAO\"    \n  - historico: Compra de insumos  \n  - doc_ref: NF1234  \n  - valor_total: 1000  \n  - valor_custo: 0  \n  - valor_imposto: 0  \n  - desconto: 0  \n\n- Output:  \n  - Diário criado com ID: 5789  \n  - Serviço `geralancamento(5789)` executado com sucesso.  \n\n## SOP (Standard Operating Procedure)  \n1. Pergunte o campo `modelo_codigo`.  \n2. Se preenchido, pergunte `historico`.  \n3. Se preenchido, pergunte `doc_ref`.  \n4. Continue com os próximos campos somente se o anterior for preenchido.  \n5. Após coletar todos os campos, envie os dados para criar o diário e armazene o ID retornado.  \n6. Chame `geralancamento(id)` com o ID recebido.  \n7. Confirme com o cliente a execução bem-sucedida.  \n\n## Final Notes  \n- Sempre valide se o campo anterior foi preenchido antes de prosseguir.  \n- Não aceite valores em branco ou nulos.  \n- Os valores numéricos devem estar em formato decimal com ponto (.) como separador.  \n---\n\n\n\n## Final Notes  \n- `modelo_codigo` deve ser uma string representando o tipo de operação (ex: \"VENDA_REFEICAO\", \"COMPRA_MERCADORIA\").  \n- Os valores numéricos devem estar em formato decimal com ponto (.) como separador.  \n- Não aceite valores em branco ou nulos, a não ser valor_custo ,  valor_imposto, desconto.  Esses podem ter valor zero. valor_total não---\n\n\n\n\n\n\n\n\n## Examples - Entrada rápida: - modelo_codigo: PAG_FORNECEDOR - historico: Pgto NF 456 - doc_ref: NF456 - valor_total: 1200 - valor_custo: 0 - valor_imposto: 0 - desconto: 0 - Saída esperada: - geradiario → response[0].id = 42 - geralancamento chamado com id = 42"}},"type":"@n8n/n8n-nodes-langchain.agent","typeVersion":2.2,"position":[800,304],"id":"02dee18b-3c49-4711-9301-e3c039da27c0","name":"AI Agent"},{"parameters":{"model":{"__rl":true,"value":"gpt-4o-mini","mode":"list","cachedResultName":"gpt-4o-mini"},"options":{"temperature":0}},"type":"@n8n/n8n-nodes-langchain.lmChatOpenAi","typeVersion":1.2,"position":[736,576],"id":"a04f2a29-e94e-4939-943c-0cb66d3b27a9","name":"OpenAI Chat Model","credentials":{"openAiApi":{"id":"2hW4LOItQwhgTw0Q","name":"OpenAi account"}}},{"parameters":{"sessionIdType":"customKey","sessionKey":"=14552"},"type":"@n8n/n8n-nodes-langchain.memoryBufferWindow","typeVersion":1.3,"position":[864,544],"id":"04a8e3e6-8e80-45f6-a447-5ea2bb8b5acd","name":"Simple Memory"},{"parameters":{"method":"POST","url":"= https://apinocode01.megaapi.com.br/rest/sendMessage/megacode-MyrBo2u0n7N/text","sendHeaders":true,"headerParameters":{"parameters":[{"name":"Client-Token","value":"application/json"},{"name":"Authorization","value":"Bearer MyrBo2u0n7N"}]},"sendBody":true,"specifyBody":"json","jsonBody":"=   {\n  \"messageData\": {\n    \"to\": \"5516992975836\",\n    \"text\": \"{{ $json.output.replace(/\\n/g, '\\\\n')  }}\"\n  }\n}\n","options":{}},"id":"ce3d062c-1eaa-47fa-a7bb-7270810cfa59","name":"RequestMenu7","type":"n8n-nodes-base.httpRequest","typeVersion":4.2,"position":[1168,304]},{"parameters":{"schema":{"__rl":true,"value":"contab","mode":"name"},"table":{"__rl":true,"value":"diario","mode":"list","cachedResultName":"diario"},"columns":{"mappingMode":"defineBelow","value":{"modelo_codigo":"={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('modelo_codigo', `modelo_codigo`, 'string') }}","data_mov":"= {{ $now }}","historico":"={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('historico', `historico`, 'string') }}","doc_ref":"={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('doc_ref', `doc_ref`, 'string') }}","valor_total":"={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('valor_total', `valor_total`, 'number') }}","valor_custo":"={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('valor_custo', `valor_custo`, 'number') }}","valor_imposto":"={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('valor_imposto', `valor_imposto`, 'number') }}","desconto":"={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('desconto', `desconto `, 'number') }}"},"matchingColumns":["id"],"schema":[{"id":"id","displayName":"id","required":false,"defaultMatch":true,"display":true,"type":"number","canBeUsedToMatch":true,"removed":true},{"id":"data_mov","displayName":"data_mov","required":true,"defaultMatch":false,"display":true,"type":"dateTime","canBeUsedToMatch":true},{"id":"modelo_codigo","displayName":"modelo_codigo","required":true,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true},{"id":"historico","displayName":"historico","required":true,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true},{"id":"doc_ref","displayName":"doc_ref","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true},{"id":"parceiro_id","displayName":"parceiro_id","required":false,"defaultMatch":false,"display":true,"type":"number","canBeUsedToMatch":true,"removed":true},{"id":"valor_total","displayName":"valor_total","required":false,"defaultMatch":false,"display":true,"type":"number","canBeUsedToMatch":true},{"id":"valor_custo","displayName":"valor_custo","required":false,"defaultMatch":false,"display":true,"type":"number","canBeUsedToMatch":true},{"id":"valor_imposto","displayName":"valor_imposto","required":false,"defaultMatch":false,"display":true,"type":"number","canBeUsedToMatch":true},{"id":"desconto","displayName":"desconto","required":false,"defaultMatch":false,"display":true,"type":"number","canBeUsedToMatch":true},{"id":"outros","displayName":"outros","required":false,"defaultMatch":false,"display":true,"type":"object","canBeUsedToMatch":true,"removed":true}],"attemptToConvertTypes":false,"convertFieldsToString":false},"options":{"outputColumns":["id"]}},"type":"n8n-nodes-base.postgresTool","typeVersion":2.6,"position":[976,528],"id":"079b7668-4fe3-40c7-876a-f54ef00a8513","name":"geradiario","credentials":{"postgres":{"id":"SsAL6F2essiJYcMm","name":"PostgreeContabil"}}},{"parameters":{"descriptionType":"manual","toolDescription":"Execute a SQL query in Postgres","operation":"executeQuery","query":"SELECT * FROM contab.gerar_lancamentos_por_diario($1)","options":{"queryReplacement":"={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Query_Parameters', ``, 'string') }}"}},"type":"n8n-nodes-base.postgresTool","typeVersion":2.6,"position":[1168,512],"id":"93b9aa6d-4a11-44ce-a77e-c876cbca7347","name":"geralancamento","credentials":{"postgres":{"id":"SsAL6F2essiJYcMm","name":"PostgreeContabil"}}},{"parameters":{},"type":"n8n-nodes-base.noOp","typeVersion":1,"position":[1376,304],"id":"6c3d8a07-8874-4363-9f5c-118595b9c44d","name":"No Operation, do nothing12","notes":"TEMPLATE DESENVOLVIDO POR NOCODE STARTUP\nhttps://nocodestartup.io/\n\nFORMAÇÃO GESTOR DE AGENTES DE IA:\nhttps://nocodestartup.io/formacao-gestor-agentes-ia/"},{"parameters":{"httpMethod":"POST","path":"agente","options":{}},"type":"n8n-nodes-base.webhook","typeVersion":2,"position":[-928,-80],"id":"f9802e94-a078-4470-bd9b-75a80fe3686e","name":"Webhook","webhookId":"66949457-5339-4325-b499-9a15d57ff6a1"},{"parameters":{"rules":{"values":[{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"leftValue":"={{ $json.status }}","rightValue":"menu","operator":{"type":"string","operation":"equals"},"id":"af400445-ccdb-465c-bb38-87e980d17d91"}],"combinator":"and"},"renameOutput":true,"outputKey":"menu"},{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"c8b0ced3-4826-4fb1-8d17-053d7e7ac874","leftValue":"={{ $json.status }}","rightValue":"sair","operator":{"type":"string","operation":"equals","name":"filter.operator.equals"}}],"combinator":"and"},"renameOutput":true,"outputKey":"sair"},{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"e2b4bc27-0610-4495-a368-f931a1af7b35","leftValue":"={{ $json.status }}","rightValue":"voltar","operator":{"type":"string","operation":"equals","name":"filter.operator.equals"}}],"combinator":"and"},"renameOutput":true,"outputKey":"voltar"},{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"cd2e6601-4c7c-4ec5-866d-803a336ecf96","leftValue":"={{ $json.status }}","rightValue":"cadastro","operator":{"type":"string","operation":"equals","name":"filter.operator.equals"}}],"combinator":"and"},"renameOutput":true,"outputKey":"cadastro"},{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"8ed1ccb5-e3fd-47fd-bc07-104ed5d4705b","leftValue":"={{ $json.status }}","rightValue":"lancamento","operator":{"type":"string","operation":"equals","name":"filter.operator.equals"}}],"combinator":"and"},"renameOutput":true,"outputKey":"lancamento"}]},"options":{}},"type":"n8n-nodes-base.switch","typeVersion":3.2,"position":[64,-128],"id":"dd1806bd-357e-479c-94f7-207157d12c1b","name":"Switch"},{"parameters":{"method":"POST","url":"https://apinocode01.megaapi.com.br/rest/sendMessage/megacode-MyrBo2u0n7N/listMessage","sendHeaders":true,"headerParameters":{"parameters":[{"name":"authorization","value":"Bearer MyrBo2u0n7N"}]},"sendBody":true,"specifyBody":"json","jsonBody":" \n                                            {\n                                                \"messageData\": {\n                                                    \"to\": \"5516994066336\",\n                                                    \"buttonText\": \"Escolha\",\n                                                    \"text\": \"Opção\",\n                                                    \"title\": \"Menu contábil\",\n                                                    \"description\": \"Selecione item do Menu\",\n                                                    \"sections\": [\n                                                        {\n                                                            \"title\": \"Lançamento\",\n                                                            \"rows\": [\n                                                                {\n                                                                    \"title\": \"Lançamento\",\n                                                                    \"description\": \"Lançamento Contábil\",\n                                                                    \"rowId\": \"01\"\n                                                                }\n                                                            ]\n                                                        },\n                                                        {\n                                                            \"title\": \"Cadastro\",\n                                                            \"rows\": [\n                                                                {\n                                                                    \"title\": \"Casdatro de Conta \",\n                                                                    \"description\": \"Cadastramento de conta contábil\",\n                                                                    \"rowId\": \"02\"\n                                                                }\n                                                            ]\n                                                        },\n\n                                                       {\n                                                            \"title\": \"Lançamento\",\n                                                            \"rows\": [\n                                                                {\n                                                                    \"title\": \"Lançamento\",\n                                                                    \"description\": \"Lançamento Contábil\",\n                                                                    \"rowId\": \"01\"\n                                                                }\n                                                            ]\n                                                        },\n                                                        {\n                                                            \"title\": \"Voltar\",\n                                                            \"rows\": [\n                                                                {\n                                                                    \"title\": \"Voltar\",\n                                                                    \"description\": \"Voltar\",\n                                                                    \"rowId\": \"03\"\n                                                                }\n                                                            ]\n                                                        },\n\n                                                       {\n                                                            \"title\": \"Processamento Contábil\",\n                                                            \"rows\": [\n                                                                {\n                                                                    \"title\": \"Geração de Lançamento\",\n                                                                    \"description\": \"Processamento Contábil\",\n                                                                    \"rowId\": \"03\"\n                                                                }\n                                                            ]\n                                                        },\n                                                        {\n                                                            \"title\": \"Relatório de Contas\",\n                                                            \"rows\": [\n                                                                {\n                                                                    \"title\": \"Relatório de Contas \",\n                                                                    \"description\": \"Relatório de Contas\",\n                                                                    \"rowId\": \"04\"\n                                                                }\n                                                            ]\n                                                        },\n                                                        {\n                                                            \"title\": \"Relatório Contábeil\",\n                                                            \"rows\": [\n                                                                {\n                                                                    \"title\": \"Relatório Contábeil\",\n                                                                    \"description\": \"Relatório Contábeil\",\n                                                                    \"rowId\": \"05\"\n                                                                }\n                                                            ]\n                                                        }\n                                                    ],\n                                                    \"listType\": 0\n                                                }\n                                            }\n                                        ","options":{}},"type":"n8n-nodes-base.httpRequest","typeVersion":4.2,"position":[304,-480],"id":"672a35fa-7029-40cf-8022-d92967a3de55","name":"HTTP Request"},{"parameters":{},"type":"n8n-nodes-base.noOp","typeVersion":1,"position":[576,-480],"id":"84fc29fa-b96d-460b-ad6e-009eeaab176d","name":"No Operation, do nothing","notes":"TEMPLATE DESENVOLVIDO POR NOCODE STARTUP\nhttps://nocodestartup.io/\n\nFORMAÇÃO GESTOR DE AGENTES DE IA:\nhttps://nocodestartup.io/formacao-gestor-agentes-ia/"},{"parameters":{"assignments":{"assignments":[{"id":"468b693c-abc2-4ece-b9c7-15a6a41d329c","name":"selectedRowId","value":"={{ $json.body?.message?.listResponseMessage?.singleSelectReply?.selectedRowId }}","type":"string"},{"id":"3611f97f-8ddc-4cc8-b264-c6105a232bd8","name":"msg","value":"={{ $json.body.message.conversation }}","type":"string"}]},"options":{}},"type":"n8n-nodes-base.set","typeVersion":3.4,"position":[-688,-64],"id":"5339df6e-f7a7-45ee-b918-e0d85a0eedfd","name":"Edit Fields"},{"parameters":{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"b74707c5-e9f6-4c4c-b126-d0b3eec3d03d","leftValue":"={{ $json.msg }}","rightValue":"","operator":{"type":"string","operation":"empty","singleValue":true}}],"combinator":"and"},"options":{}},"type":"n8n-nodes-base.if","typeVersion":2.2,"position":[-480,-64],"id":"3295349d-a347-4ed3-9c97-08c9a19085c0","name":"If"},{"parameters":{"operation":"select","schema":{"__rl":true,"value":"contab","mode":"name"},"table":{"__rl":true,"value":"menu","mode":"list","cachedResultName":"menu"},"returnAll":true,"where":{"values":[{"column":"selecionado","value":"=true"}]},"options":{}},"type":"n8n-nodes-base.postgres","typeVersion":2.6,"position":[-272,-80],"id":"086d27e9-5cbc-435b-ae84-879aef63948f","name":"Select rows from a table1","credentials":{"postgres":{"id":"SsAL6F2essiJYcMm","name":"PostgreeContabil"}}},{"parameters":{"operation":"executeQuery","query":"update menu set selecionado =false;","options":{}},"type":"n8n-nodes-base.postgres","typeVersion":2.6,"position":[-320,160],"id":"e427d526-cd2e-43c9-84e5-a9ee681afa0f","name":"Execute a SQL query","credentials":{"postgres":{"id":"SsAL6F2essiJYcMm","name":"PostgreeContabil"}}},{"parameters":{"operation":"executeQuery","query":"update menu set selecionado = true where  selectedRowId= {{ $json.selectedRowId }};","options":{}},"type":"n8n-nodes-base.postgres","typeVersion":2.6,"position":[-144,160],"id":"29b7aab7-9eef-406a-af72-bc8b81a63936","name":"Execute a SQL query1","credentials":{"postgres":{"id":"SsAL6F2essiJYcMm","name":"PostgreeContabil"}}},{"parameters":{},"type":"n8n-nodes-base.noOp","typeVersion":1,"position":[240,160],"id":"d38d6f00-ffb2-47d9-8b5a-8d1a301270c0","name":"No Operation, do nothing1","notes":"TEMPLATE DESENVOLVIDO POR NOCODE STARTUP\nhttps://nocodestartup.io/\n\nFORMAÇÃO GESTOR DE AGENTES DE IA:\nhttps://nocodestartup.io/formacao-gestor-agentes-ia/"},{"parameters":{"method":"POST","url":"= https://apinocode01.megaapi.com.br/rest/sendMessage/megacode-MyrBo2u0n7N/text","sendHeaders":true,"headerParameters":{"parameters":[{"name":"Client-Token","value":"application/json"},{"name":"Authorization","value":"Bearer MyrBo2u0n7N"}]},"sendBody":true,"specifyBody":"json","jsonBody":"=   {\n  \"messageData\": {\n    \"to\": \"5516992975836\",\n    \"text\": \"Ok digite continar\"\n  }\n}\n","options":{}},"id":"27c9d300-b019-481c-9051-00b2787d1e99","name":"RequestMenu","type":"n8n-nodes-base.httpRequest","typeVersion":4.2,"position":[48,160]},{"parameters":{"promptType":"define","text":"= ","options":{"systemMessage":"= # Overview  \nVocê é um agente AI responsável por coletar dados sequenciais para gerar lançamentos contábeis. Cada campo depende do preenchimento correto do anterior antes de prosseguir. Após a coleta completa dos dados, o agente executa o serviço `geralancamento(id)` usando o ID de retorno obtido ao solicitar os dados do diário.\n\n## Context  \n- O objetivo é gerar lançamentos contábeis a partir de dados fornecidos pelo cliente.  \n- Os dados devem ser coletados na seguinte ordem: modelo_codigo, historico, doc_ref, valor_total, valor_custo, valor_imposto, desconto.  \n- O campo seguinte só deve ser solicitado se o campo anterior for preenchido corretamente.  \n- Após a coleta, o serviço de geração de lançamento deve ser chamado com o ID retornado da criação do diário.  \n\n## Instructions  \n1. Solicite ao cliente o campo `modelo_codigo`.  \n2. Se fornecido, solicite o campo `historico`.  \n3. Se fornecido, solicite o campo `doc_ref`.  \n4. Continue solicitando os campos na seguinte ordem, apenas se o anterior tiver sido preenchido:  \n   - valor_total  \n   - valor_custo  \n   - valor_imposto  \n   - desconto  \n\n\n\n5. Após todos os campos serem coletados, crie o diário atraves da execução    `geradiario(modelo_codigo,historico,doc_ref, valor_total,valor_custo, valor_imposto,desconto )`  e obtenha o ID de retorno da execução  \n \n6. Execute o serviço `geradiario(modelo_codigo,historico,doc_ref, valor_total,valor_custo, valor_imposto,desconto)`  e retorne  o ID retornado.  \n\n{\n  \"id\": {{ memory.previousToolResponse.response[0].id }}\n}\n\n7. Execute o serviço `geralancamento(id)` usando o ID retornado.  \n\n## Tools  \n- Serviço: `geradiario(modelo_codigo,historico,doc_ref, valor_total,valor_custo, valor_imposto,desconto )`  \n- Serviço: `geralancamento(id)` \n- Recurso: Diário contábil (para obter ID de retorno)  \n\n## Examples  \n- Input sequencial:  \n  - modelo_codigo: \"VENDA_REFEICAO\"    \n  - historico: Compra de insumos  \n  - doc_ref: NF1234  \n  - valor_total: 1000  \n  - valor_custo: 0  \n  - valor_imposto: 0  \n  - desconto: 0  \n\n- Output:  \n  - Diário criado com ID: 5789  \n  - Serviço `geralancamento(5789)` executado com sucesso.  \n\n## SOP (Standard Operating Procedure)  \n1. Pergunte o campo `modelo_codigo`.  \n2. Se preenchido, pergunte `historico`.  \n3. Se preenchido, pergunte `doc_ref`.  \n4. Continue com os próximos campos somente se o anterior for preenchido.  \n5. Após coletar todos os campos, envie os dados para criar o diário e armazene o ID retornado.  \n6. Chame `geralancamento(id)` com o ID recebido.  \n7. Confirme com o cliente a execução bem-sucedida.  \n\n## Final Notes  \n- Sempre valide se o campo anterior foi preenchido antes de prosseguir.  \n- Não aceite valores em branco ou nulos.  \n- Os valores numéricos devem estar em formato decimal com ponto (.) como separador.  \n---\n\n\n\n## Final Notes  \n- `modelo_codigo` deve ser uma string representando o tipo de operação (ex: \"VENDA_REFEICAO\", \"COMPRA_MERCADORIA\").  \n- Os valores numéricos devem estar em formato decimal com ponto (.) como separador.  \n- Não aceite valores em branco ou nulos, a não ser valor_custo ,  valor_imposto, desconto.  Esses podem ter valor zero. valor_total não---\n\n\n\n\n\n\n\n\n## Examples - Entrada rápida: - modelo_codigo: PAG_FORNECEDOR - historico: Pgto NF 456 - doc_ref: NF456 - valor_total: 1200 - valor_custo: 0 - valor_imposto: 0 - desconto: 0 - Saída esperada: - geradiario → response[0].id = 42 - geralancamento chamado com id = 42"}},"type":"@n8n/n8n-nodes-langchain.agent","typeVersion":2.2,"position":[944,-176],"id":"5f089d56-f3bc-425d-b1f6-7b1b2e592542","name":"AI Agent1"},{"parameters":{"sessionIdType":"customKey","sessionKey":"=14552"},"type":"@n8n/n8n-nodes-langchain.memoryBufferWindow","typeVersion":1.3,"position":[992,80],"id":"cd475f56-5a38-4ca4-bb55-14047c44a73e","name":"Simple Memory1"},{"parameters":{"method":"POST","url":"= https://apinocode01.megaapi.com.br/rest/sendMessage/megacode-MyrBo2u0n7N/text","sendHeaders":true,"headerParameters":{"parameters":[{"name":"Client-Token","value":"application/json"},{"name":"Authorization","value":"Bearer MyrBo2u0n7N"}]},"sendBody":true,"specifyBody":"json","jsonBody":"=   {\n  \"messageData\": {\n    \"to\": \"5516992975836\",\n    \"text\": \"{{ $json.output.replace(/\\n/g, '\\\\n')  }}\"\n  }\n}\n","options":{}},"id":"6467f7b4-518f-41c7-8e65-8bde501e7638","name":"RequestMenu8","type":"n8n-nodes-base.httpRequest","typeVersion":4.2,"position":[1360,-240]},{"parameters":{},"type":"n8n-nodes-base.noOp","typeVersion":1,"position":[1568,-240],"id":"2298c491-4107-4f01-9510-89538919ebc5","name":"No Operation, do nothing13","notes":"TEMPLATE DESENVOLVIDO POR NOCODE STARTUP\nhttps://nocodestartup.io/\n\nFORMAÇÃO GESTOR DE AGENTES DE IA:\nhttps://nocodestartup.io/formacao-gestor-agentes-ia/"},{"parameters":{"model":{"__rl":true,"value":"gpt-4o-mini","mode":"list","cachedResultName":"gpt-4o-mini"},"options":{"temperature":0}},"type":"@n8n/n8n-nodes-langchain.lmChatOpenAi","typeVersion":1.2,"position":[864,64],"id":"b1b1886e-5e61-4184-a146-2b14c04d8532","name":"OpenAI Chat Model1","credentials":{"openAiApi":{"id":"2hW4LOItQwhgTw0Q","name":"OpenAi account"}}},{"parameters":{"schema":{"__rl":true,"value":"contab","mode":"name"},"table":{"__rl":true,"value":"modelos","mode":"list","cachedResultName":"modelos"},"columns":{"mappingMode":"defineBelow","value":{"codigo":"={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('codigo', `modelo_codigo`, 'string') }}","nome":"={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('nome', `nome`, 'string') }}"},"matchingColumns":["id"],"schema":[{"id":"id","displayName":"id","required":false,"defaultMatch":true,"display":true,"type":"number","canBeUsedToMatch":true,"removed":true},{"id":"codigo","displayName":"codigo","required":true,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true},{"id":"nome","displayName":"nome","required":true,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true},{"id":"ativo","displayName":"ativo","required":false,"defaultMatch":false,"display":true,"type":"boolean","canBeUsedToMatch":true,"removed":true}],"attemptToConvertTypes":false,"convertFieldsToString":false},"options":{"outputColumns":["id"]}},"type":"n8n-nodes-base.postgresTool","typeVersion":2.6,"position":[1104,32],"id":"42dbe10b-3b85-434c-8931-86f8e0766d74","name":"Insert rows in a table in Postgres","credentials":{"postgres":{"id":"SsAL6F2essiJYcMm","name":"PostgreeContabil"}}}],"connections":{"OpenAI Chat Model":{"ai_languageModel":[[{"node":"AI Agent","type":"ai_languageModel","index":0}]]},"Simple Memory":{"ai_memory":[[{"node":"AI Agent","type":"ai_memory","index":0}]]},"AI Agent":{"main":[[{"node":"RequestMenu7","type":"main","index":0}]]},"geradiario":{"ai_tool":[[{"node":"AI Agent","type":"ai_tool","index":0}]]},"geralancamento":{"ai_tool":[[{"node":"AI Agent","type":"ai_tool","index":0}]]},"RequestMenu7":{"main":[[{"node":"No Operation, do nothing12","type":"main","index":0}]]},"Webhook":{"main":[[{"node":"Edit Fields","type":"main","index":0}]]},"Switch":{"main":[[{"node":"HTTP Request","type":"main","index":0}],[],[],[{"node":"AI Agent1","type":"main","index":0}],[{"node":"AI Agent","type":"main","index":0}]]},"HTTP Request":{"main":[[{"node":"No Operation, do nothing","type":"main","index":0}]]},"Edit Fields":{"main":[[{"node":"If","type":"main","index":0}]]},"If":{"main":[[{"node":"Select rows from a table1","type":"main","index":0}],[{"node":"Execute a SQL query","type":"main","index":0}]]},"Select rows from a table1":{"main":[[{"node":"Switch","type":"main","index":0}]]},"Execute a SQL query1":{"main":[[{"node":"RequestMenu","type":"main","index":0}]]},"Execute a SQL query":{"main":[[{"node":"Execute a SQL query1","type":"main","index":0}]]},"RequestMenu":{"main":[[{"node":"No Operation, do nothing1","type":"main","index":0}]]},"AI Agent1":{"main":[[{"node":"RequestMenu8","type":"main","index":0}]]},"Simple Memory1":{"ai_memory":[[{"node":"AI Agent1","type":"ai_memory","index":0}]]},"RequestMenu8":{"main":[[{"node":"No Operation, do nothing13","type":"main","index":0}]]},"OpenAI Chat Model1":{"ai_languageModel":[[{"node":"AI Agent1","type":"ai_languageModel","index":0}]]},"Insert rows in a table in Postgres":{"ai_tool":[[{"node":"AI Agent1","type":"ai_tool","index":0}]]}},"settings":{"executionOrder":"v1"},"staticData":null,"meta":{"templateCredsSetupCompleted":true},"pinData":{},"versionId":"f6bc0cf9-b56d-4060-a8a5-a3a256e36515","triggerCount":1,"tags":[]}