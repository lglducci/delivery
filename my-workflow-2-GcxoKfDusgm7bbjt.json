{"createdAt":"2025-08-21T17:15:11.015Z","updatedAt":"2025-08-22T01:01:45.860Z","id":"GcxoKfDusgm7bbjt","name":"My workflow 2","active":true,"isArchived":false,"nodes":[{"parameters":{"promptType":"define","text":"={{ $json.body.message.conversation }}","options":{"systemMessage":"= # Overview  \nVocê é um agente AI responsável por coletar dados sequenciais para gerar lançamentos contábeis. Cada campo depende do preenchimento correto do anterior antes de prosseguir. Após a coleta completa dos dados, o agente executa o serviço `geralancamento(id)` usando o ID de retorno obtido ao solicitar os dados do diário.\n\n## Context  \n- O objetivo é gerar lançamentos contábeis a partir de dados fornecidos pelo cliente.  \n- Os dados devem ser coletados na seguinte ordem: modelo_codigo, historico, doc_ref, valor_total, valor_custo, valor_imposto, desconto.  \n- O campo seguinte só deve ser solicitado se o campo anterior for preenchido corretamente.  \n- Após a coleta, o serviço de geração de lançamento deve ser chamado com o ID retornado da criação do diário.  \n\n## Instructions  \n1. Solicite ao cliente o campo `modelo_codigo`.  \n2. Se fornecido, solicite o campo `historico`.  \n3. Se fornecido, solicite o campo `doc_ref`.  \n4. Continue solicitando os campos na seguinte ordem, apenas se o anterior tiver sido preenchido:  \n   - valor_total  \n   - valor_custo  \n   - valor_imposto  \n   - desconto  \n\n\n\n5. Após todos os campos serem coletados, crie o diário atraves da execução    `geradiario(modelo_codigo,historico,doc_ref, valor_total,valor_custo, valor_imposto,desconto )`  e obtenha o ID de retorno da execução  \n \n6. Execute o serviço `geradiario(modelo_codigo,historico,doc_ref, valor_total,valor_custo, valor_imposto,desconto)`  e retorne  o ID retornado.  \n\n{\n  \"id\": {{ memory.previousToolResponse.response[0].id }}\n}\n\n7. Execute o serviço `geralancamento(id)` usando o ID retornado.  \n\n## Tools  \n- Serviço: `geradiario(modelo_codigo,historico,doc_ref, valor_total,valor_custo, valor_imposto,desconto )`  \n- Serviço: `geralancamento(id)` \n- Recurso: Diário contábil (para obter ID de retorno)  \n\n## Examples  \n- Input sequencial:  \n  - modelo_codigo: \"VENDA_REFEICAO\"    \n  - historico: Compra de insumos  \n  - doc_ref: NF1234  \n  - valor_total: 1000  \n  - valor_custo: 0  \n  - valor_imposto: 0  \n  - desconto: 0  \n\n- Output:  \n  - Diário criado com ID: 5789  \n  - Serviço `geralancamento(5789)` executado com sucesso.  \n\n## SOP (Standard Operating Procedure)  \n1. Pergunte o campo `modelo_codigo`.  \n2. Se preenchido, pergunte `historico`.  \n3. Se preenchido, pergunte `doc_ref`.  \n4. Continue com os próximos campos somente se o anterior for preenchido.  \n5. Após coletar todos os campos, envie os dados para criar o diário e armazene o ID retornado.  \n6. Chame `geralancamento(id)` com o ID recebido.  \n7. Confirme com o cliente a execução bem-sucedida.  \n\n## Final Notes  \n- Sempre valide se o campo anterior foi preenchido antes de prosseguir.  \n- Não aceite valores em branco ou nulos.  \n- Os valores numéricos devem estar em formato decimal com ponto (.) como separador.  \n---\n\n\n\n## Final Notes  \n- `modelo_codigo` deve ser uma string representando o tipo de operação (ex: \"VENDA_REFEICAO\", \"COMPRA_MERCADORIA\").  \n- Os valores numéricos devem estar em formato decimal com ponto (.) como separador.  \n- Não aceite valores em branco ou nulos, a não ser valor_custo ,  valor_imposto, desconto.  Esses podem ter valor zero. valor_total não---\n\n\n\n\n\n\n\n\n## Examples - Entrada rápida: - modelo_codigo: PAG_FORNECEDOR - historico: Pgto NF 456 - doc_ref: NF456 - valor_total: 1200 - valor_custo: 0 - valor_imposto: 0 - desconto: 0 - Saída esperada: - geradiario → response[0].id = 42 - geralancamento chamado com id = 42"}},"type":"@n8n/n8n-nodes-langchain.agent","typeVersion":2.2,"position":[-160,-64],"id":"02dee18b-3c49-4711-9301-e3c039da27c0","name":"AI Agent"},{"parameters":{"model":{"__rl":true,"value":"gpt-4o-mini","mode":"list","cachedResultName":"gpt-4o-mini"},"options":{"temperature":0}},"type":"@n8n/n8n-nodes-langchain.lmChatOpenAi","typeVersion":1.2,"position":[-224,144],"id":"a04f2a29-e94e-4939-943c-0cb66d3b27a9","name":"OpenAI Chat Model","credentials":{"openAiApi":{"id":"2hW4LOItQwhgTw0Q","name":"OpenAi account"}}},{"parameters":{"sessionIdType":"customKey","sessionKey":"=14552"},"type":"@n8n/n8n-nodes-langchain.memoryBufferWindow","typeVersion":1.3,"position":[-112,128],"id":"04a8e3e6-8e80-45f6-a447-5ea2bb8b5acd","name":"Simple Memory"},{"parameters":{"method":"POST","url":"= https://apinocode01.megaapi.com.br/rest/sendMessage/megacode-MyrBo2u0n7N/text","sendHeaders":true,"headerParameters":{"parameters":[{"name":"Client-Token","value":"application/json"},{"name":"Authorization","value":"Bearer MyrBo2u0n7N"}]},"sendBody":true,"specifyBody":"json","jsonBody":"=   {\n  \"messageData\": {\n    \"to\": \"5516992975836\",\n    \"text\": \"{{ $json.output.replace(/\\n/g, '\\\\n')  }}\"\n  }\n}\n","options":{}},"id":"ce3d062c-1eaa-47fa-a7bb-7270810cfa59","name":"RequestMenu7","type":"n8n-nodes-base.httpRequest","typeVersion":4.2,"position":[208,-64]},{"parameters":{"schema":{"__rl":true,"value":"contab","mode":"name"},"table":{"__rl":true,"value":"diario","mode":"list","cachedResultName":"diario"},"columns":{"mappingMode":"defineBelow","value":{"modelo_codigo":"={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('modelo_codigo', `modelo_codigo`, 'string') }}","data_mov":"= {{ $now }}","historico":"={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('historico', `historico`, 'string') }}","doc_ref":"={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('doc_ref', `doc_ref`, 'string') }}","valor_total":"={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('valor_total', `valor_total`, 'number') }}","valor_custo":"={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('valor_custo', `valor_custo`, 'number') }}","valor_imposto":"={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('valor_imposto', `valor_imposto`, 'number') }}","desconto":"={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('desconto', `desconto `, 'number') }}"},"matchingColumns":["id"],"schema":[{"id":"id","displayName":"id","required":false,"defaultMatch":true,"display":true,"type":"number","canBeUsedToMatch":true,"removed":true},{"id":"data_mov","displayName":"data_mov","required":true,"defaultMatch":false,"display":true,"type":"dateTime","canBeUsedToMatch":true},{"id":"modelo_codigo","displayName":"modelo_codigo","required":true,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true},{"id":"historico","displayName":"historico","required":true,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true},{"id":"doc_ref","displayName":"doc_ref","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true},{"id":"parceiro_id","displayName":"parceiro_id","required":false,"defaultMatch":false,"display":true,"type":"number","canBeUsedToMatch":true,"removed":true},{"id":"valor_total","displayName":"valor_total","required":false,"defaultMatch":false,"display":true,"type":"number","canBeUsedToMatch":true},{"id":"valor_custo","displayName":"valor_custo","required":false,"defaultMatch":false,"display":true,"type":"number","canBeUsedToMatch":true},{"id":"valor_imposto","displayName":"valor_imposto","required":false,"defaultMatch":false,"display":true,"type":"number","canBeUsedToMatch":true},{"id":"desconto","displayName":"desconto","required":false,"defaultMatch":false,"display":true,"type":"number","canBeUsedToMatch":true},{"id":"outros","displayName":"outros","required":false,"defaultMatch":false,"display":true,"type":"object","canBeUsedToMatch":true,"removed":true}],"attemptToConvertTypes":false,"convertFieldsToString":false},"options":{"outputColumns":["id"]}},"type":"n8n-nodes-base.postgresTool","typeVersion":2.6,"position":[16,160],"id":"079b7668-4fe3-40c7-876a-f54ef00a8513","name":"geradiario","credentials":{"postgres":{"id":"SsAL6F2essiJYcMm","name":"PostgreeContabil"}}},{"parameters":{"descriptionType":"manual","toolDescription":"Execute a SQL query in Postgres","operation":"executeQuery","query":"SELECT * FROM contab.gerar_lancamentos_por_diario($1)","options":{"queryReplacement":"={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Query_Parameters', ``, 'string') }}"}},"type":"n8n-nodes-base.postgresTool","typeVersion":2.6,"position":[208,144],"id":"93b9aa6d-4a11-44ce-a77e-c876cbca7347","name":"geralancamento","credentials":{"postgres":{"id":"SsAL6F2essiJYcMm","name":"PostgreeContabil"}}},{"parameters":{},"type":"n8n-nodes-base.noOp","typeVersion":1,"position":[464,-80],"id":"6c3d8a07-8874-4363-9f5c-118595b9c44d","name":"No Operation, do nothing12","notes":"TEMPLATE DESENVOLVIDO POR NOCODE STARTUP\nhttps://nocodestartup.io/\n\nFORMAÇÃO GESTOR DE AGENTES DE IA:\nhttps://nocodestartup.io/formacao-gestor-agentes-ia/"},{"parameters":{"httpMethod":"POST","path":"agente","options":{}},"type":"n8n-nodes-base.webhook","typeVersion":2,"position":[-448,-64],"id":"f9802e94-a078-4470-bd9b-75a80fe3686e","name":"Webhook","webhookId":"66949457-5339-4325-b499-9a15d57ff6a1"}],"connections":{"OpenAI Chat Model":{"ai_languageModel":[[{"node":"AI Agent","type":"ai_languageModel","index":0}]]},"Simple Memory":{"ai_memory":[[{"node":"AI Agent","type":"ai_memory","index":0}]]},"AI Agent":{"main":[[{"node":"RequestMenu7","type":"main","index":0}]]},"geradiario":{"ai_tool":[[{"node":"AI Agent","type":"ai_tool","index":0}]]},"geralancamento":{"ai_tool":[[{"node":"AI Agent","type":"ai_tool","index":0}]]},"RequestMenu7":{"main":[[{"node":"No Operation, do nothing12","type":"main","index":0}]]},"Webhook":{"main":[[{"node":"AI Agent","type":"main","index":0}]]}},"settings":{"executionOrder":"v1"},"staticData":null,"meta":{"templateCredsSetupCompleted":true},"pinData":{"Webhook":[{"json":{"headers":{"host":"primary-production-d79b.up.railway.app","user-agent":"axios/1.7.7","content-length":"682","accept":"application/json, text/plain, */*","accept-encoding":"gzip, compress, deflate, br","content-type":"application/json","x-forwarded-for":"5.78.66.98","x-forwarded-host":"primary-production-d79b.up.railway.app","x-forwarded-proto":"https","x-railway-edge":"railway/us-west2","x-railway-request-id":"GBXdZerqT6-gEcSh-_9nXA","x-real-ip":"5.78.66.98","x-request-start":"1755822833056"},"params":{},"query":{},"body":{"instance_key":"megacode-Mp5VTYM2qds","jid":"5516994066336@s.whatsapp.net","messageType":"conversation","isBusiness":true,"key":{"remoteJid":"5516992975836@s.whatsapp.net","fromMe":false,"id":"F7F3B67E35399515169F3DFFC85FD689"},"messageTimestamp":1755822832,"pushName":"Luis Gustavo Landucci","broadcast":false,"message":{"conversation":"Teste","messageContextInfo":{"deviceListMetadata":{"senderKeyHash":"WPqpxngRfZMFYQ==","senderTimestamp":"1755521044","recipientKeyHash":"QSzVrqWSvvnr3w==","recipientTimestamp":"1755688392"},"deviceListMetadataVersion":2,"messageSecret":"skVGFTuqRoIagcRXlOCTf/SFDEFTc+NK52LT0bChFiE="}},"verifiedBizName":"Luis Gustavo Landucci","isGroup":false},"webhookUrl":"https://primary-production-d79b.up.railway.app/webhook-test/agente","executionMode":"test"}}]},"versionId":"520832d2-704d-4bfa-8f38-625079bd1648","triggerCount":1,"tags":[]}