{"createdAt":"2025-10-07T21:18:53.778Z","updatedAt":"2025-11-01T02:14:27.348Z","id":"gl0RYjlzfJknufRk","name":"ConsultaOnline","active":false,"isArchived":false,"nodes":[{"parameters":{"assignments":{"assignments":[{"id":"a3c83333-8ce3-4995-8230-b361099aa1e4","name":"user_id","value":"={{ $('When Executed by Another Workflow').item.json.user_id }}","type":"number"},{"id":"d7c14753-505f-48ee-a344-fa565ace43df","name":"pedido_id","value":"={{ $('When Executed by Another Workflow').item.json.pedido_id }}","type":"number"},{"id":"fdf33d81-37b4-46c9-b56a-6787b3d92dac","name":"rotina","value":"={{ $('When Executed by Another Workflow').item.json.rotina }}","type":"number"},{"id":"510be5a0-328d-4968-be95-a06070b25835","name":"carrinho","value":"={{ $('MensagemTraduzida').item.json.message === 'pizza' ? 'pizza' : '' }}","type":"string"},{"id":"edaf3531-5f93-42b1-b4ec-1f2929a5cf07","name":"categoria","value":"={{ $('When Executed by Another Workflow').item.json.categoria.trim() }}","type":"string"}]},"options":{}},"type":"n8n-nodes-base.set","typeVersion":3.4,"position":[-2496,-96],"id":"8dd99415-9654-4a17-825f-ce01334ef1de","name":"MontPedido"},{"parameters":{"assignments":{"assignments":[{"id":"9f488c5c-0b3b-48e9-87b1-5a22d513d1ec","name":"IdConversa","value":"={{ $('When Executed by Another Workflow').item.json.telefone }}","type":"string"},{"id":"388e17d9-4d3a-40a6-9a45-52b166aa17b5","name":"telefone","value":"={{ $('When Executed by Another Workflow').item.json.telefone }}","type":"number"},{"id":"8b88d192-9c8b-4b70-be50-09eb1e7a9228","name":"id_empresa","value":"={{ $('When Executed by Another Workflow').item.json.id_empresa }}","type":"number"}]},"options":{}},"id":"48aa434b-58c7-4d11-b466-b23490996327","name":"Dados Lead","type":"n8n-nodes-base.set","typeVersion":3.4,"position":[-2656,-96],"notes":"TEMPLATE DESENVOLVIDO POR NOCODE STARTUP\nhttps://nocodestartup.io/\n\nFORMAÇÃO GESTOR DE AGENTES DE IA:\nhttps://nocodestartup.io/formacao-gestor-agentes-ia/"},{"parameters":{"assignments":{"assignments":[{"id":"66a91f66-e755-4120-b22f-44c814f56162","name":"message","value":"={{ $json.mensagem }}","type":"string"}]},"options":{}},"type":"n8n-nodes-base.set","typeVersion":3.4,"position":[-2832,-96],"id":"79d09f9f-e326-4003-98e5-798058bd40b2","name":"MensagemTraduzida","notes":"TEMPLATE DESENVOLVIDO POR NOCODE STARTUP\nhttps://nocodestartup.io/\n\nFORMAÇÃO GESTOR DE AGENTES DE IA:\nhttps://nocodestartup.io/formacao-gestor-agentes-ia/"},{"parameters":{"workflowInputs":{"values":[{"name":"mensagem"},{"name":"user_id","type":"number"},{"name":"pedido_id","type":"number"},{"name":"telefone"},{"name":"rotina","type":"number"},{"name":"id_empresa","type":"number"},{"name":"categoria"}]}},"type":"n8n-nodes-base.executeWorkflowTrigger","typeVersion":1.1,"position":[-3008,-96],"id":"dff60220-c174-4f75-a5c7-0f4a13f16a19","name":"When Executed by Another Workflow"},{"parameters":{},"type":"n8n-nodes-base.noOp","typeVersion":1,"position":[288,32],"id":"d17db0f0-7c56-4a92-a845-bd9cb26f3680","name":"No Operation, do nothing7","notes":"TEMPLATE DESENVOLVIDO POR NOCODE STARTUP\nhttps://nocodestartup.io/\n\nFORMAÇÃO GESTOR DE AGENTES DE IA:\nhttps://nocodestartup.io/formacao-gestor-agentes-ia/"},{"parameters":{"jsCode":" // Texto vindo do cliente\nconst textoOriginal = (\n  $('MensagemTraduzida').first().json.message ||\n  $json.texto ||\n  \"\"\n).toLowerCase();\n\nlet texto = textoOriginal\n  .normalize(\"NFD\")\n  .replace(/[\\u0300-\\u036f]/g, \"\") // remove acentos\n  .trim();\n\n// Lista de categorias aceitas\nconst categorias = [\"pizza\", \"pizzas\", \"esfirra\", \"borda\", \"item\", \"bebida\", \"refrigerante\"];\n\n// Detecta categoria no texto\nlet categoriaDetectada = categorias.find(c => texto.includes(c)) || \"pizza\";\n\n// Remove a categoria e plurais\nlet nome = texto\n  .replace(new RegExp(\"\\\\b\" + categoriaDetectada + \"\\\\b\", \"gi\"), \"\")\n  .replace(/\\b(pizzas?|esfirras?)\\b/gi, \"\")\n  .trim();\n\n// 🔹 Remove preposições e conectivos comuns\nnome = nome\n  .replace(/\\b(c\\/|com|e|de|da|do|das|dos|na|no|nas|nos|ao|a|o|as|os|à|às)\\b/gi, \" \")\n  .replace(/\\s{2,}/g, \" \")\n  .trim();\n\n// 🔸 Verifica se 'nome' é número inteiro\nlet numero = 0;\nif (/^\\d+$/.test(nome)) {\n  numero = parseInt(nome, 10);\n}\n\n// Retorna JSON limpo\nreturn [\n  {\n    json: {\n      categoria: $('When Executed by Another Workflow').first().json.categoria,\n      nome: nome || null,\n      numero: numero,\n      id_empresa: $('Dados Lead').first().json.id_empresa\n    }\n  }\n];\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[-1696,-112],"id":"a55e4ee5-fd43-490f-b2d4-4e4fd08cee93","name":"Code4"},{"parameters":{},"type":"n8n-nodes-base.noOp","typeVersion":1,"position":[960,-1152],"id":"a4c79c2c-c99a-4282-b096-0dfc7d734898","name":"No Operation, do nothing","notes":"TEMPLATE DESENVOLVIDO POR NOCODE STARTUP\nhttps://nocodestartup.io/\n\nFORMAÇÃO GESTOR DE AGENTES DE IA:\nhttps://nocodestartup.io/formacao-gestor-agentes-ia/"},{"parameters":{"operation":"executeQuery","query":"  SELECT * FROM BuscaPizzaSabor (  '{{ $('Code4').item.json.nome }}' , {{ $('Dados Lead').item.json.id_empresa }} );\n ","options":{}},"type":"n8n-nodes-base.postgres","typeVersion":2.6,"position":[-368,32],"id":"523c0398-3408-41f4-ab5f-81bc6c02ee6a","name":"BuscaPizzaSabor1","executeOnce":true,"credentials":{"postgres":{"id":"3NLaVyXonSrCcLE3","name":"Postgres account"}}},{"parameters":{"operation":"executeQuery","query":" \n\n\nINSERT INTO log_debug (etapa, comando, retorno, user_id, pedido_id, id_empresa )\nVALUES ('Consulta Por nome', '{{ $('MensagemTraduzida').item.json.message }}', 'Consulta Online {{ $json.categoria }}', {{ $('MontPedido').item.json.user_id }} ,{{ $('MontPedido').item.json.pedido_id }}  ,  {{ $('Dados Lead').item.json.id_empresa }});","options":{}},"type":"n8n-nodes-base.postgres","typeVersion":2.6,"position":[-128,-1248],"id":"e0bd8071-d099-46ca-9c35-24d512eb5a77","name":"LogFinal1","credentials":{"postgres":{"id":"3NLaVyXonSrCcLE3","name":"Postgres account"}}},{"parameters":{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"1cd4ef07-e301-4c2d-897f-072812ee98f5","leftValue":"={{ $json.qtd }}","rightValue":8,"operator":{"type":"number","operation":"lt"}}],"combinator":"and"},"options":{}},"type":"n8n-nodes-base.if","typeVersion":2.2,"position":[-640,48],"id":"8d1492dc-fc9b-4286-88eb-e69dde068656","name":"If1"},{"parameters":{"jsCode":" // Pega a mensagem original do item anterior\nconst msg =  $('When Executed by Another Workflow').first().json.mensagem || \"\";\n\n return [\n  {\n    mensagem: \"Foram encontrados mais de \" + $input.first().json.qtd + \" itens com a pesquisa \" + msg\n  }\n];\n\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[192,464],"id":"a73bdaf0-e312-4d2f-977a-8ac9a4111160","name":"Code1"},{"parameters":{},"type":"n8n-nodes-base.noOp","typeVersion":1,"position":[416,464],"id":"ea553813-2273-41b2-986a-6c0fb4894ea3","name":"No Operation, do nothing8","notes":"TEMPLATE DESENVOLVIDO POR NOCODE STARTUP\nhttps://nocodestartup.io/\n\nFORMAÇÃO GESTOR DE AGENTES DE IA:\nhttps://nocodestartup.io/formacao-gestor-agentes-ia/"},{"parameters":{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"b6ff324d-41bd-4b7b-aeb1-8c3bd298cf51","leftValue":"={{ $json.categoria }}","rightValue":"pizza","operator":{"type":"string","operation":"notEquals"}}],"combinator":"or"},"options":{}},"type":"n8n-nodes-base.if","typeVersion":2.2,"position":[80,-1248],"id":"f3eaa716-301d-4bad-a3af-de9d901c8c36","name":"If2"},{"parameters":{"operation":"executeQuery","query":"SELECT * FROM ContaPizzaSabor( '{{ $('Code4').item.json.nome }}',{{ $('Dados Lead').item.json.id_empresa }}  );","options":{}},"type":"n8n-nodes-base.postgres","typeVersion":2.6,"position":[-848,48],"id":"d03ac273-060c-4afd-bfe1-c0911672bbba","name":"QuantidadePizza","credentials":{"postgres":{"id":"3NLaVyXonSrCcLE3","name":"Postgres account"}}},{"parameters":{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"65760ebd-4e86-4503-a09b-789f7d80e348","leftValue":"={{ $('MontPedido').item.json.rotina }}","rightValue":1,"operator":{"type":"number","operation":"equals"}}],"combinator":"and"},"options":{}},"type":"n8n-nodes-base.if","typeVersion":2.2,"position":[-1920,-128],"id":"c1bfaee3-b8da-48b0-8550-f186492d8bcc","name":"If3"},{"parameters":{"operation":"executeQuery","query":"SELECT * FROM get_carrinho_pizza( {{ $('MontPedido').item.json.user_id }}, {{ $('MontPedido').item.json.pedido_id }} , {{ $('Dados Lead').item.json.id_empresa }},'{{ $('MontPedido').item.json.categoria }}');","options":{}},"type":"n8n-nodes-base.postgres","typeVersion":2.6,"position":[-1712,-320],"id":"ac2e967e-17e5-4c8c-bf11-f55311aaa4a0","name":"GetCarrinho","alwaysOutputData":true,"credentials":{"postgres":{"id":"3NLaVyXonSrCcLE3","name":"Postgres account"}}},{"parameters":{},"type":"n8n-nodes-base.noOp","typeVersion":1,"position":[-1504,-320],"id":"f7e4bd82-3ab2-4338-9539-90c7226b51a4","name":"No Operation, do nothing1","notes":"TEMPLATE DESENVOLVIDO POR NOCODE STARTUP\nhttps://nocodestartup.io/\n\nFORMAÇÃO GESTOR DE AGENTES DE IA:\nhttps://nocodestartup.io/formacao-gestor-agentes-ia/"},{"parameters":{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"e8400d14-4b85-4df5-a1a0-152fe767eaf9","leftValue":"={{ $json.total }}","rightValue":0,"operator":{"type":"number","operation":"equals"}}],"combinator":"and"},"options":{}},"type":"n8n-nodes-base.if","typeVersion":2.2,"position":[464,-1056],"id":"12b94530-7786-4b23-9d94-320e20b522a0","name":"If"},{"parameters":{"operation":"executeQuery","query":" SELECT COUNT(*)::int AS total\nFROM cardapio\nWHERE id_empresa = {{ $('Dados Lead').item.json.id_empresa }}\n  AND unaccent(lower(categoria)) = unaccent(lower('{{ $('Code4').item.json.categoria }}'))\n  AND unaccent(lower(nome)) ILIKE '%' || unaccent(lower(TRIM('{{ $('Code4').item.json.nome }}'))) || '%';\n","options":{}},"type":"n8n-nodes-base.postgres","typeVersion":2.6,"position":[336,-1104],"id":"8ec99027-f447-422c-85e3-d722df3c02bd","name":"Consulta","executeOnce":false,"alwaysOutputData":true,"credentials":{"postgres":{"id":"3NLaVyXonSrCcLE3","name":"Postgres account"}}},{"parameters":{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"373166bc-db4e-4e1f-9f5c-47bf8c8dde13","leftValue":"={{ $('Code4').item.json.categoria }}","rightValue":"bebida","operator":{"type":"string","operation":"equals","name":"filter.operator.equals"}}],"combinator":"and"},"options":{}},"type":"n8n-nodes-base.if","typeVersion":2.2,"position":[608,-1280],"id":"c4570969-b1d2-4912-ae1d-ff2df6fc29cd","name":"If4"},{"parameters":{},"type":"n8n-nodes-base.noOp","typeVersion":1,"position":[-224,-496],"id":"a72e3b2e-aedf-4207-8a4d-d2888174ee57","name":"No Operation, do nothing2","notes":"TEMPLATE DESENVOLVIDO POR NOCODE STARTUP\nhttps://nocodestartup.io/\n\nFORMAÇÃO GESTOR DE AGENTES DE IA:\nhttps://nocodestartup.io/formacao-gestor-agentes-ia/"},{"parameters":{},"type":"n8n-nodes-base.noOp","typeVersion":1,"position":[768,-1072],"id":"0c0ae43a-db5c-4600-abe0-53e0fcd816c4","name":"No Operation, do nothing3","notes":"TEMPLATE DESENVOLVIDO POR NOCODE STARTUP\nhttps://nocodestartup.io/\n\nFORMAÇÃO GESTOR DE AGENTES DE IA:\nhttps://nocodestartup.io/formacao-gestor-agentes-ia/"},{"parameters":{"operation":"executeQuery","query":" SELECT COUNT(*)::int AS total\nFROM cardapio\nWHERE id_empresa = {{ $('Dados Lead').item.json.id_empresa }}\n  AND unaccent(lower(categoria)) = unaccent(lower('{{ $('Code4').item.json.categoria }}'))\n  AND unaccent(lower(nome)) ILIKE '%' || unaccent(lower(TRIM('{{ $('Code4').item.json.nome }}'))) || '%';\n","options":{}},"type":"n8n-nodes-base.postgres","typeVersion":2.6,"position":[-384,368],"id":"7aa57450-eb31-43bf-a541-c6d4b2322f0d","name":"Consulta3","executeOnce":false,"alwaysOutputData":true,"credentials":{"postgres":{"id":"3NLaVyXonSrCcLE3","name":"Postgres account"}}},{"parameters":{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"e8400d14-4b85-4df5-a1a0-152fe767eaf9","leftValue":"={{ $json.total }}","rightValue":6,"operator":{"type":"number","operation":"lt"}}],"combinator":"and"},"options":{}},"type":"n8n-nodes-base.if","typeVersion":2.2,"position":[-128,368],"id":"ffaf862e-9cb1-4c65-a29c-d53d5443ed1e","name":"If5"},{"parameters":{"operation":"executeQuery","query":" SELECT COALESCE(\n  json_agg(\n    json_build_object(\n      'numero', numero,\n      'nome', nome,\n      'categoria', categoria,\n      'tipo', tipo,\n      'preco_grande', preco_grande,\n      'preco_medio', preco_medio,\n      'preco_pequena', preco_pequena,\n      'descricao', descricao\n    )\n    ORDER BY numero  -- ✅ ordenar dentro do json_agg\n  ),\n  '[]'::json\n) AS resultados\nFROM cardapio\nWHERE id_empresa = {{ $('Dados Lead').item.json.id_empresa }}\n  AND unaccent(lower(categoria)) = unaccent(lower('{{ $('Code4').item.json.categoria }}'))\n  AND unaccent(lower(nome)) ILIKE '%' || unaccent(lower(TRIM('{{ $('Code4').item.json.nome }}'))) || '%';\n","options":{}},"type":"n8n-nodes-base.postgres","typeVersion":2.6,"position":[176,256],"id":"cfebbf28-875e-4d43-8aea-a8866b4adf6c","name":"Consulta4","executeOnce":false,"alwaysOutputData":true,"credentials":{"postgres":{"id":"3NLaVyXonSrCcLE3","name":"Postgres account"}}},{"parameters":{},"type":"n8n-nodes-base.noOp","typeVersion":1,"position":[624,256],"id":"1ddeb4d7-96e1-4008-9331-cc86ed3edd8d","name":"No Operation, do nothing4","notes":"TEMPLATE DESENVOLVIDO POR NOCODE STARTUP\nhttps://nocodestartup.io/\n\nFORMAÇÃO GESTOR DE AGENTES DE IA:\nhttps://nocodestartup.io/formacao-gestor-agentes-ia/"},{"parameters":{"rules":{"values":[{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"leftValue":"={{ $('MontPedido').item.json.categoria }}","rightValue":"=bebida","operator":{"type":"string","operation":"equals"},"id":"5e3730f4-0727-4885-807b-08b979be01e1"}],"combinator":"and"},"renameOutput":true,"outputKey":"bebida"},{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"23616411-0157-46ec-a55e-4ea70a09a97d","leftValue":"={{$('MontPedido').item.json.categoria}}","rightValue":"borda","operator":{"type":"string","operation":"equals","name":"filter.operator.equals"}}],"combinator":"and"},"renameOutput":true,"outputKey":"borda"},{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"f36d4c36-dba5-4e06-a716-cb1ff03dc573","leftValue":"={{ $('MontPedido').item.json.categoria }}","rightValue":"item","operator":{"type":"string","operation":"equals","name":"filter.operator.equals"}}],"combinator":"and"},"renameOutput":true,"outputKey":"item"},{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"b33c97ac-a399-470c-9dd9-87f83e75041c","leftValue":"={{ $('MontPedido').item.json.categoria }}","rightValue":"esfirra","operator":{"type":"string","operation":"equals","name":"filter.operator.equals"}}],"combinator":"and"},"renameOutput":true,"outputKey":"esfirra"},{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"2f1036ae-fcc7-401a-bd14-76cc1821ab0f","leftValue":"={{ $('MontPedido').item.json.categoria }}","rightValue":"pizza","operator":{"type":"string","operation":"equals","name":"filter.operator.equals"}}],"combinator":"and"},"renameOutput":true,"outputKey":"pizza"}]},"options":{}},"type":"n8n-nodes-base.switch","typeVersion":3.2,"position":[-1152,-176],"id":"11a8aa5a-087c-423a-931c-d47587c53c78","name":"Switch"},{"parameters":{"operation":"executeQuery","query":" SELECT COUNT(*)::int AS total\nFROM cardapio\nWHERE id_empresa = {{ $('Dados Lead').item.json.id_empresa }}\n  AND unaccent(lower(categoria)) = unaccent(lower('{{ $('Code4').item.json.categoria }}'))\n  AND unaccent(lower(nome)) ILIKE '%' || unaccent(lower(TRIM('{{ $('Code4').item.json.nome }}'))) || '%';\n","options":{}},"type":"n8n-nodes-base.postgres","typeVersion":2.6,"position":[128,-1040],"id":"f8a11aa4-abb9-4706-88d6-a0d3be5988e9","name":"Consulta2","executeOnce":false,"alwaysOutputData":true,"credentials":{"postgres":{"id":"3NLaVyXonSrCcLE3","name":"Postgres account"}}},{"parameters":{},"type":"n8n-nodes-base.noOp","typeVersion":1,"position":[-400,-272],"id":"179c0702-f129-4e88-9ce2-4c849ea5d94f","name":"No Operation, do nothing5","notes":"TEMPLATE DESENVOLVIDO POR NOCODE STARTUP\nhttps://nocodestartup.io/\n\nFORMAÇÃO GESTOR DE AGENTES DE IA:\nhttps://nocodestartup.io/formacao-gestor-agentes-ia/"},{"parameters":{"operation":"executeQuery","query":" WITH base AS (\n  SELECT \n    numero,\n    nome,\n    categoria,\n    tipo,\n    preco_grande,\n    preco_medio,\n    preco_pequena,\n    descricao\n  FROM cardapio\n  WHERE id_empresa = {{ $('Dados Lead').item.json.id_empresa }}\n    AND unaccent(lower(categoria)) = unaccent(lower('{{ $('Code4').item.json.categoria }}'))\n    AND unaccent(lower(nome)) ILIKE '%' || unaccent(lower(TRIM('{{ $('Code4').item.json.nome }}'))) || '%'\n)\nSELECT \n  (SELECT COUNT(*) FROM base) AS total,\n  json_agg(base) AS resultados\nFROM base;\n","options":{}},"type":"n8n-nodes-base.postgres","typeVersion":2.6,"position":[-112,-1056],"id":"bc8763d5-762d-438f-841a-95ff19ebee37","name":"sql sugerido ia","executeOnce":false,"alwaysOutputData":true,"credentials":{"postgres":{"id":"3NLaVyXonSrCcLE3","name":"Postgres account"}}},{"parameters":{"jsCode":" // Entradas disponíveis no fluxo:\n// $input.first().json.categoria\n// $input.first().json.nome\n// $('MensagemTraduzida').first().json.message\n\nfunction extractVolume(s) {\n  if (!s) return { volume_str: null, volume_ml: null, cleaned: s };\n\n  let str = String(s);\n\n  // 1) Detectar volumes em L (2L, 1,5 L, 1 litro, 2 litros, lt/lts)\n  let m = str.match(/\\b(\\d+(?:[.,]\\d+)?)\\s*(l|lt|lts|litro?s?)\\b/i);\n  if (m) {\n    const rawNum = m[1].replace(\",\", \".\"); // 1,5 => 1.5\n    const liters = parseFloat(rawNum);\n    if (!isNaN(liters)) {\n      const ml = Math.round(liters * 1000);\n      // Remover o trecho de volume do nome\n      const cleaned = str\n        .replace(m[0], \"\")\n        .replace(/\\s{2,}/g, \" \")\n        .trim();\n      return { volume_str: `${liters % 1 === 0 ? liters.toFixed(0) : liters}L`, volume_ml: ml, cleaned };\n    }\n  }\n\n  // 2) Detectar volumes em ML (600ml, 350 ml)\n  m = str.match(/\\b(\\d+)\\s*ml\\b/i);\n  if (m) {\n    const ml = parseInt(m[1], 10);\n    if (!isNaN(ml)) {\n      const cleaned = str\n        .replace(m[0], \"\")\n        .replace(/\\s{2,}/g, \" \")\n        .trim();\n      return { volume_str: `${ml}ml`, volume_ml: ml, cleaned };\n    }\n  }\n\n  // Nada encontrado\n  return { volume_str: null, volume_ml: null, cleaned: str };\n}\n\nfunction limparNomeBebida(base) {\n  if (!base) return base;\n  let s = String(base);\n\n  // Remover volumes (vamos extrair com extractVolume; aqui só garantimos limpeza residual)\n  s = s\n    .replace(/\\b\\d+[.,]?\\d*\\s*(l|lt|lts|litro?s?)\\b/gi, \"\")\n    .replace(/\\b\\d+\\s*ml\\b/gi, \"\");\n\n  // Remover embalagens/complementos comuns\n  s = s.replace(/\\b(lata|latao|latão|garrafa|pet|retornavel|retornável|vidro|long\\s*neck|pack|fardo|caixa|cx)\\b/gi, \"\");\n\n  // Traços e espaços extras\n  s = s.replace(/[-–—•·]+/g, \" \").replace(/\\s{2,}/g, \" \").trim();\n\n  return s;\n}\n\nconst categoria = String($input.first().json.categoria || \"\").toLowerCase();\nconst nomeEntrada = ($input.first().json.nome ?? \"\").toString();\nconst mensagem = ($('MensagemTraduzida').first()?.json?.message ?? \"\").toString();\n\n// Nome base: prioriza o \"nome\" já extraído; se vazio, tenta a mensagem\nconst nomeBase = (nomeEntrada || mensagem).trim();\n\nlet nome_limpo = nomeBase;\nlet volume_str = null;\nlet volume_ml = null;\n\nif (categoria === \"bebida\" || categoria === \"refrigerante\") {\n  // 1) Extrair volume\n  const vol = extractVolume(nomeBase);\n  volume_str = vol.volume_str;\n  volume_ml = vol.volume_ml;\n\n  // 2) Limpar nome (sem volume/embalagem)\n  nome_limpo = limparNomeBebida(vol.cleaned);\n}\n\n// Saída\nreturn [\n  {\n    json: {\n      categoria,\n      nome_original: nomeBase || null,\n      nome_limpo: nome_limpo || null,\n      // Volume (se detectado)\n      volume: volume_str,     // ex.: \"2L\" ou \"600ml\" (string amigável)\n      volume_ml: volume_ml,   // ex.: 2000 ou 600 (numérico)\n    },\n  },\n];\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[-880,-496],"id":"c98bccfc-5f2c-48c2-b99d-79419850ba75","name":"Bebida"},{"parameters":{"jsCode":" // Texto vindo do cliente\nconst textoOriginal = (\n  $('MensagemTraduzida').first().json.message ||\n  $json.texto ||\n  \"\"\n).toLowerCase();\n\nlet texto = textoOriginal\n  .normalize(\"NFD\")\n  .replace(/[\\u0300-\\u036f]/g, \"\") // remove acentos\n  .trim();\n\n// Lista de categorias aceitas\nconst categorias = [\"pizza\", \"pizzas\", \"esfirra\", \"borda\", \"item\", \"bebida\", \"refrigerante\"];\n\n// Detecta categoria no texto\nlet categoriaDetectada = categorias.find(c => texto.includes(c)) || \"pizza\";\n\n// Remove a categoria e plurais\nlet nome = texto\n  .replace(new RegExp(\"\\\\b\" + categoriaDetectada + \"\\\\b\", \"gi\"), \"\")\n  .replace(/\\b(pizzas?|esfirras?)\\b/gi, \"\")\n  .trim();\n\n// 🔹 Remove preposições e conectivos comuns\n// (com, c/, e, de, da, do, das, dos, na, no, nas, nos, ao, à, ás, a, o)\nnome = nome\n  .replace(/\\b(c\\/|com|e|de|da|do|das|dos|na|no|nas|nos|ao|a|o|as|os|à|às)\\b/gi, \" \")\n  .replace(/\\s{2,}/g, \" \")\n  .trim();\n\n// Retorna JSON limpo\nreturn [\n  {\n    json: {\n      categoria: $('When Executed by Another Workflow').first().json.categoria ,\n      nome: nome || null,\n      id_empresa:$('Dados Lead').first().json.id_empresa \n      \n    }\n  }\n];\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[352,-1280],"id":"3a81b4e7-22cd-4f5e-8a7a-c20c0e669323","name":"Code"},{"parameters":{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"e48e79ae-dec7-4b06-9078-6ae356325797","leftValue":"={{ $('Code4').item.json.numero }}","rightValue":0,"operator":{"type":"number","operation":"equals"}}],"combinator":"and"},"options":{}},"type":"n8n-nodes-base.if","typeVersion":2.2,"position":[-1472,-112],"id":"3e8c9d24-23f0-4d12-997a-9c27f435507b","name":"If6"},{"parameters":{"operation":"executeQuery","query":" SELECT \n  COALESCE(\n    json_agg(row_to_json(t)),\n    '[]'::json\n  ) AS resultados\nFROM (\n  SELECT \n    numero, \n    nome, \n    categoria, \n    tipo,\n    preco_grande, \n    preco_medio, \n    preco_pequena,\n    descricao \n  FROM cardapio\n  WHERE id_empresa = {{ $('Dados Lead').item.json.id_empresa }}\n    AND numero = {{ $json.numero }}\n  ORDER BY numero\n) AS t;\n","options":{}},"type":"n8n-nodes-base.postgres","typeVersion":2.6,"position":[-1456,208],"id":"5237faaa-e674-4c2e-a9fd-f7912f5f78e1","name":"Consulta5","executeOnce":false,"alwaysOutputData":true,"credentials":{"postgres":{"id":"3NLaVyXonSrCcLE3","name":"Postgres account"}}},{"parameters":{},"type":"n8n-nodes-base.noOp","typeVersion":1,"position":[-1216,208],"id":"ee30cb05-acf8-41a8-b8ce-cc0e019aef82","name":"No Operation, do nothing6","notes":"TEMPLATE DESENVOLVIDO POR NOCODE STARTUP\nhttps://nocodestartup.io/\n\nFORMAÇÃO GESTOR DE AGENTES DE IA:\nhttps://nocodestartup.io/formacao-gestor-agentes-ia/"},{"parameters":{"operation":"executeQuery","query":" SELECT \n  numero, \n  nome, \n  categoria, \n  tipo,\n  preco_grande, \n  preco_medio, \n  preco_pequena,\n  descricao,\n  volume\nFROM cardapio\nWHERE id_empresa = {{ $('Dados Lead').item.json.id_empresa }}\n  AND unaccent(lower(categoria)) = unaccent(lower('{{ $('Code4').item.json.categoria }}'))\n  AND unaccent(lower(palavras_chave)) ILIKE '%' || unaccent(lower(TRIM('{{ $('Bebida').item.json.nome_limpo }}'))) || '%'\n  AND (\n    '{{ $('Bebida').item.json.volume }}' = ''  -- se volume estiver vazio\n    OR volume ILIKE '%' || '{{ $('Bebida').item.json.volume }}' || '%'  -- se volume existir, filtra\n  )\nORDER BY numero;","options":{}},"type":"n8n-nodes-base.postgres","typeVersion":2.6,"position":[272,-768],"id":"9f6140a8-25cc-4bc2-9e95-854e45b7296e","name":"Bebida2","executeOnce":false,"alwaysOutputData":true,"credentials":{"postgres":{"id":"3NLaVyXonSrCcLE3","name":"Postgres account"}}},{"parameters":{"operation":"executeQuery","query":" SELECT *\nFROM salvar_opcoes_turno (\n  {{ $(\"MontPedido\").item.json.user_id }}, \n    {{ $('Dados Lead').item.json.id_empresa }},\n  'bebida',                             -- contexto\n   '{{ JSON.stringify($json.resultados) }}'::jsonb \n)\n","options":{}},"type":"n8n-nodes-base.postgres","typeVersion":2.6,"position":[-480,-496],"id":"dcc14c9a-d22d-473f-afa5-81de6ba34a12","name":"Bebida3","executeOnce":false,"alwaysOutputData":true,"credentials":{"postgres":{"id":"3NLaVyXonSrCcLE3","name":"Postgres account"}}},{"parameters":{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"58b55dfe-ac84-49b6-b694-a6a28ff770b9","leftValue":"={{ $json.total }}","rightValue":"='0'","operator":{"type":"number","operation":"equals"}}],"combinator":"and"},"options":{}},"type":"n8n-nodes-base.if","typeVersion":2.2,"position":[32,-672],"id":"66b662a9-2ca4-441b-82bf-1a7b4dc82ba1","name":"If7"},{"parameters":{"operation":"executeQuery","query":" SELECT \n  numero, \n  nome, \n  categoria, \n  tipo,\n  preco_grande, \n  preco_medio, \n  preco_pequena,\n  descricao,\n  volume\nFROM cardapio\nWHERE id_empresa = {{ $('Dados Lead').item.json.id_empresa }}\n  AND unaccent(lower(categoria)) = unaccent(lower('{{ $('Code4').item.json.categoria }}'))\n  AND unaccent(lower(palavras_chave)) ILIKE '%' || unaccent(lower(TRIM('{{ $('Bebida').item.json.nome_limpo }}'))) || '%'\n  AND (\n    '{{ $('Bebida').item.json.volume }}' = ''  -- se volume estiver vazio\n    OR volume ILIKE '%' || '{{ $('Bebida').item.json.volume }}' || '%'  -- se volume existir, filtra\n  )\nORDER BY numero;","options":{}},"type":"n8n-nodes-base.postgres","typeVersion":2.6,"position":[272,-528],"id":"b6da1a6c-bea5-4d94-b4bb-bdacebf6f0f7","name":"Bebida4","executeOnce":false,"alwaysOutputData":true,"credentials":{"postgres":{"id":"3NLaVyXonSrCcLE3","name":"Postgres account"}}},{"parameters":{"jsCode":" // ✅ Modo: Run Once for All Items\n// Lê todas as linhas que chegaram no node\nconst rows = $input.all().map(i => i.json);\n\n// Normaliza\nconst norm = (v) => (v == null ? '' : String(v).trim());\nconst toNum = (v) => {\n  const n = Number(String(v).replace(',', '.'));\n  return Number.isFinite(n) ? n : 0;\n};\n\n// Filtra só pizzas válidas (valor > 0 e qtd > 0)\nconst pizzas = rows\n  .map(it => ({\n    item_id: norm(it.item_id),\n    numero:  norm(it.numero),\n    nome:    norm(it.nome),\n    tamanho: norm(it.tamanho),\n    categoria: norm(it.categoria),\n    quantidade: toNum(it.quantidade || 1),\n    valor:   toNum(it.valor || 0), // unitário\n  }))\n  .filter(it =>\n    it.categoria === 'pizza' &&\n    it.quantidade > 0 &&\n    it.valor > 0 &&\n    (it.nome || it.numero)\n  );\n\nif (pizzas.length === 0) {\n  return [{ json: { mensagem: \"🧺 Carrinho vazio de *pizzas* por enquanto. Quer escolher um sabor? 🍕\" } }];\n}\n\n// Mapa posição → ids (se quiser usar depois)\nconst pos2item_id = {};\nconst pos2numero  = {};\n\nlet txt = \"🧺 *Seu carrinho (pizzas):*\\n\\n\";\nlet total = 0;\n\npizzas.forEach((it, i) => {\n  const pos = i + 1;\n  pos2item_id[pos] = it.item_id;\n  pos2numero[pos]  = it.numero;\n\n  const nomeOuNumero = it.nome || `(${it.numero})`;\n  const subtotal = it.quantidade * it.valor;\n  total += subtotal;\n\n  txt += `${pos}️⃣ *${nomeOuNumero}*\\n`;\n  txt += `🍕 ${it.tamanho || '—'} ×${it.quantidade}  ·  💰 R$ ${it.valor.toFixed(2).replace('.', ',')}\\n`;\n  txt += `↳ Subtotal: *R$ ${subtotal.toFixed(2).replace('.', ',')}*\\n\\n`;\n});\n\ntxt += `🧾 *Total:* R$ ${total.toFixed(2).replace('.', ',')}\\n`;\ntxt += `\\n👉 Para adicionar *borda* ou *item*, diga: \"adicionar borda cheddar na *posição* 2\".`;\n\n// Retorna um único item com a mensagem montada\nreturn [{\n  json: {\n    mensagem: txt,\n    pos2item_id,\n    pos2numero,\n    total\n  }\n}];\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[-1488,-512],"id":"4af08325-c50d-46b9-83c2-ad2285030682","name":"Code2"},{"parameters":{"jsCode":" // ✅ Modo: Run Once for All Items\n// Lê array vindo da consulta SQL (resultados)\nconst rows = $input.first().json.resultados || [];\n\n// Funções auxiliares\nconst norm = (v) => (v == null ? '' : String(v).trim());\nconst toNum = (v) => {\n  const n = Number(String(v).replace(',', '.'));\n  return Number.isFinite(n) ? n : 0;\n};\n\n// Verifica se tem algo\nif (!Array.isArray(rows) || rows.length === 0) {\n  return [{ json: { mensagem: \"❌ Nenhum item encontrado, tente outro nome. 🍕\" } }];\n}\n\n// Monta texto formatado (WhatsApp)\nlet txt = \"🍕 *Opções encontradas:*\\n\\n\";\n\nrows.forEach((it, i) => {\n  const pos = i + 1;\n  const nome = norm(it.nome) || `(${it.numero})`;\n  const desc = norm(it.descricao);\n  const precoG = toNum(it.preco_grande);\n  const precoM = toNum(it.preco_medio);\n  const precoP = toNum(it.preco_pequena);\n  const volume = norm(it.volume);\n\n  txt += `${pos}️⃣ *${nome}*\\n`;\n  if (desc) txt += `🧀 ${desc}\\n`;\n  if (volume) txt += `🥤 ${volume}\\n`;\n\n  const precos = [];\n  if (precoG > 0) precos.push(`Grande: R$ ${precoG.toFixed(2).replace('.', ',')}`);\n  if (precoM > 0) precos.push(`Média: R$ ${precoM.toFixed(2).replace('.', ',')}`);\n  if (precoP > 0) precos.push(`Pequena: R$ ${precoP.toFixed(2).replace('.', ',')}`);\n\n  if (precos.length > 0)\n    txt += `💰 ${precos.join(' | ')}\\n`;\n\n  txt += '\\n';\n});\n\ntxt += '👉 Qual dessas opções você gostaria de pedir?';\n\n// Retorno\nreturn [{ json: { mensagem: txt } }];\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[-400,-720],"id":"f07db3c7-369f-4b82-a8e4-13dbb1578231","name":"Code3"},{"parameters":{"operation":"executeQuery","query":" \nselect * from  busca_bebida_profundo(1,  '{{ $json.categoria }}',   '{{ $json.nome_limpo }}',   '{{ $json.volume }}')\n ","options":{}},"type":"n8n-nodes-base.postgres","typeVersion":2.6,"position":[640,-304],"id":"884a33ac-a0e6-4df3-b628-2211fe7053d9","name":"Execute a SQL query1","alwaysOutputData":true,"credentials":{"postgres":{"id":"3NLaVyXonSrCcLE3","name":"Postgres account"}}},{"parameters":{"assignments":{"assignments":[{"id":"a56a4024-3d24-442b-8dde-74f631f5baf4","name":"nome_limpo","value":"calabria","type":"string"},{"id":"0ea53eee-00f5-4d95-a316-4a2539d6a3b2","name":"categoria","value":"pizza","type":"string"},{"id":"27b04aae-eaa3-48ee-919c-747f4f73939d","name":"volume","value":"","type":"string"}]},"options":{}},"type":"n8n-nodes-base.set","typeVersion":3.4,"position":[416,-320],"id":"946f271c-1af9-44a8-b970-3ffdf70341cd","name":"Edit Fields"},{"parameters":{"jsCode":" // 🔹 Entrada esperada do node anterior\nconst user_id = $('MontPedido').first().json.user_id || 0;\nconst pedido_id = $('MontPedido').first().json.pedido_id || 0;\nconst id_empresa = $('Dados Lead').first().json.id_empresa || 0;\nconst telefone = ($('Dados Lead').first().json.telefone || \"\").toString();\n\n// 🔸 1️⃣ Cria chave única estável (só concatenação pura)\nconst userkey = `${user_id}${id_empresa}${telefone}`;\n\n// ✅ 2️⃣ Retorno no formato correto pro n8n\nreturn [\n  {\n    json: {\n      user_id,\n      pedido_id,\n      id_empresa,\n      telefone,\n      userkey\n    }\n  }\n];\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[-2304,-112],"id":"278ccf5c-54b9-4035-ad93-c985a7e77e71","name":"MemoryKey3"},{"parameters":{"operation":"executeQuery","query":" \n DELETE FROM n8n_chat_histories  WHERE TRIM(session_id) =   {{$json.userkey}}::text;\n \n\n","options":{}},"type":"n8n-nodes-base.postgres","typeVersion":2.6,"position":[-2128,-112],"id":"44b383ba-2049-4b55-b855-e38052c3b6a9","name":"LimpaN8nHistories","credentials":{"postgres":{"id":"3NLaVyXonSrCcLE3","name":"Postgres account"}}},{"parameters":{"operation":"executeQuery","query":" SELECT *\nFROM salvar_opcoes_turno (\n  {{ $(\"MontPedido\").item.json.user_id }},\n \n    {{ $('Dados Lead').item.json.id_empresa }},\n  '{{ $('Switch').item.json.categoria }}',                             -- contexto\n   '{{ JSON.stringify($json.resultados) }}'::jsonb \n)\n","options":{}},"type":"n8n-nodes-base.postgres","typeVersion":2.6,"position":[-624,-272],"id":"0c62d7a4-cf06-4742-80ea-5754d1c1215a","name":"Bebida5","executeOnce":false,"alwaysOutputData":true,"credentials":{"postgres":{"id":"3NLaVyXonSrCcLE3","name":"Postgres account"}}},{"parameters":{"operation":"executeQuery","query":" \nselect * from  busca_bebida_profundo({{ $('Dados Lead').item.json.id_empresa }},  '{{ $('Code4').item.json.categoria }}',   '{{ $('Bebida').item.json.nome_limpo }}',   '{{ $('Bebida').item.json.volume }}')\n ","options":{}},"type":"n8n-nodes-base.postgres","typeVersion":2.6,"position":[-672,-496],"id":"a362b884-2915-4204-8722-cee59ddb55b7","name":"busca_bebida_profundo","alwaysOutputData":true,"credentials":{"postgres":{"id":"3NLaVyXonSrCcLE3","name":"Postgres account"}}},{"parameters":{"operation":"executeQuery","query":" SELECT\n  COALESCE(json_agg(row_to_json(t)), '[]'::json) AS resultados\nFROM (\n  SELECT numero, nome, categoria, tipo, preco_grande, preco_medio, preco_pequena, descricao\n  FROM cardapio\n  WHERE id_empresa = {{ $json.id_empresa }}\n    AND unaccent(lower(categoria)) = unaccent(lower('{{ $json.categoria }}'))\n    AND unaccent(lower(nome)) ILIKE '%' || unaccent(lower(TRIM('{{ $json.nome }}'))) || '%'\n  ORDER BY numero\n) AS t;","options":{}},"type":"n8n-nodes-base.postgres","typeVersion":2.6,"position":[-848,-272],"id":"fa653ce1-2521-43d7-be47-6ce88ccb648d","name":"BordaOuItem","executeOnce":false,"alwaysOutputData":false,"credentials":{"postgres":{"id":"3NLaVyXonSrCcLE3","name":"Postgres account"}}},{"parameters":{"operation":"executeQuery","query":" SELECT *\nFROM salvar_opcoes_turno (\n  {{ $json.user_id }},   \n   {{ $json.id_empresa }},\n   '{{ $json.categoria }}',                             \n   '{{ JSON.stringify($json.resultados) }}'::jsonb \n)\n\n \n","options":{}},"type":"n8n-nodes-base.postgres","typeVersion":2.6,"position":[80,32],"id":"2c92062f-162c-41fb-a63d-cba5cb69914e","name":"Bebida6","executeOnce":false,"alwaysOutputData":true,"credentials":{"postgres":{"id":"3NLaVyXonSrCcLE3","name":"Postgres account"}}},{"parameters":{"jsCode":" // Pega o resultado do node anterior (ex: \"BuscaPizzaSabor1\")\nconst dados = $json;\n\n// Se o node anterior retorna uma lista (vários itens)\nconst linhas = Array.isArray(dados) ? dados : (dados.resultados || [dados]);\n\n// Converte para JSON string\nconst jsonString = JSON.stringify(linhas, null, 2);\n\n// Retorna um único item com o JSON\nreturn [\n  {\n    json: {\n      total: linhas.length,\n      resultados: linhas,\n      json_string: jsonString,\n      user_id:$('MontPedido').first().json.user_id,\n      pedido_id:$('MontPedido').first().json.pedido_id,\n      id_empresa: $('Dados Lead').first().json.id_empresa,\n      categoria:$('MontPedido').first().json.categoria\n    }\n  }\n];\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[-160,32],"id":"59183c50-cd70-438c-91f7-fc23ef89db3f","name":"Code5"},{"parameters":{"operation":"executeQuery","query":" SELECT *\nFROM salvar_opcoes_turno (\n   {{ $('MontPedido').item.json.user_id }}, \n   {{ $('Dados Lead').item.json.id_empresa }} , '{{ $('Switch').item.json.categoria }}',\n   '{{ JSON.stringify($json.resultados) }}'::jsonb \n)\n\n \n","options":{}},"type":"n8n-nodes-base.postgres","typeVersion":2.6,"position":[384,256],"id":"2875089a-3d60-4cd8-863c-dce3ad045259","name":"Bebida7","executeOnce":false,"alwaysOutputData":true,"credentials":{"postgres":{"id":"3NLaVyXonSrCcLE3","name":"Postgres account"}}}],"connections":{"Dados Lead":{"main":[[{"node":"MontPedido","type":"main","index":0}]]},"MensagemTraduzida":{"main":[[{"node":"Dados Lead","type":"main","index":0}]]},"When Executed by Another Workflow":{"main":[[{"node":"MensagemTraduzida","type":"main","index":0}]]},"MontPedido":{"main":[[{"node":"MemoryKey3","type":"main","index":0}]]},"Code4":{"main":[[{"node":"If6","type":"main","index":0}]]},"BuscaPizzaSabor1":{"main":[[{"node":"Code5","type":"main","index":0}]]},"LogFinal1":{"main":[[]]},"If1":{"main":[[{"node":"BuscaPizzaSabor1","type":"main","index":0}],[{"node":"Consulta3","type":"main","index":0}]]},"Code1":{"main":[[{"node":"No Operation, do nothing8","type":"main","index":0}]]},"If2":{"main":[[],[]]},"QuantidadePizza":{"main":[[{"node":"If1","type":"main","index":0}]]},"If3":{"main":[[{"node":"GetCarrinho","type":"main","index":0}],[{"node":"Code4","type":"main","index":0}]]},"GetCarrinho":{"main":[[{"node":"No Operation, do nothing1","type":"main","index":0}]]},"Consulta":{"main":[[{"node":"If","type":"main","index":0}]]},"If":{"main":[[{"node":"If4","type":"main","index":0}],[]]},"If4":{"main":[[],[{"node":"No Operation, do nothing","type":"main","index":0}]]},"Consulta3":{"main":[[{"node":"If5","type":"main","index":0}]]},"If5":{"main":[[{"node":"Consulta4","type":"main","index":0}],[{"node":"Code1","type":"main","index":0}]]},"Consulta4":{"main":[[{"node":"Bebida7","type":"main","index":0}]]},"Switch":{"main":[[{"node":"Bebida","type":"main","index":0}],[{"node":"BordaOuItem","type":"main","index":0}],[{"node":"BordaOuItem","type":"main","index":0}],[{"node":"BordaOuItem","type":"main","index":0}],[{"node":"QuantidadePizza","type":"main","index":0}]]},"Consulta2":{"main":[[]]},"Bebida":{"main":[[{"node":"busca_bebida_profundo","type":"main","index":0}]]},"If6":{"main":[[{"node":"Switch","type":"main","index":0}],[{"node":"Consulta5","type":"main","index":0}]]},"Consulta5":{"main":[[{"node":"No Operation, do nothing6","type":"main","index":0}]]},"If7":{"main":[[{"node":"Bebida2","type":"main","index":0}],[{"node":"Bebida4","type":"main","index":0}]]},"Code2":{"main":[[]]},"Code3":{"main":[[]]},"Execute a SQL query1":{"main":[[]]},"Edit Fields":{"main":[[{"node":"Execute a SQL query1","type":"main","index":0}]]},"MemoryKey3":{"main":[[{"node":"LimpaN8nHistories","type":"main","index":0}]]},"LimpaN8nHistories":{"main":[[{"node":"If3","type":"main","index":0}]]},"Bebida3":{"main":[[{"node":"No Operation, do nothing2","type":"main","index":0}]]},"Bebida5":{"main":[[{"node":"No Operation, do nothing5","type":"main","index":0}]]},"busca_bebida_profundo":{"main":[[{"node":"Bebida3","type":"main","index":0}]]},"BordaOuItem":{"main":[[{"node":"Bebida5","type":"main","index":0}]]},"Bebida6":{"main":[[{"node":"No Operation, do nothing7","type":"main","index":0}]]},"Code5":{"main":[[{"node":"Bebida6","type":"main","index":0}]]},"Bebida7":{"main":[[{"node":"No Operation, do nothing4","type":"main","index":0}]]}},"settings":{"executionOrder":"v1"},"staticData":null,"meta":{"templateCredsSetupCompleted":true},"pinData":{"When Executed by Another Workflow":[{"json":{"mensagem":"mussarela","user_id":1,"pedido_id":26,"telefone":"5516992975836","rotina":7,"id_empresa":1,"categoria":"pizza"}}]},"versionId":"1cafefb8-9ace-4f49-800c-95f4ffafd3da","triggerCount":0,"shared":[{"createdAt":"2025-10-07T21:18:53.778Z","updatedAt":"2025-10-07T21:18:53.778Z","role":"workflow:owner","workflowId":"gl0RYjlzfJknufRk","projectId":"wFRMrac2003Pl1x6"}],"tags":[]}