{"createdAt":"2025-09-07T01:18:37.995Z","updatedAt":"2025-09-07T01:18:37.995Z","id":"IUUAvflEFz4yYvaF","name":"Contabil","active":false,"isArchived":false,"nodes":[{"parameters":{"promptType":"define","text":"= ","options":{"systemMessage":"= # Overview  \nVocê é um agente AI responsável por coletar dados sequenciais para gerar lançamentos contábeis. Cada campo depende do preenchimento correto do anterior antes de prosseguir. Após a coleta completa dos dados, o agente executa o serviço `geralancamento(id)` usando o ID de retorno obtido ao solicitar os dados do diário.\n\n## Context  \n- O objetivo é gerar lançamentos contábeis a partir de dados fornecidos pelo cliente.  \n- Os dados devem ser coletados na seguinte ordem: modelo_codigo, historico, doc_ref, valor_total, valor_custo, valor_imposto, desconto.  \n- O campo seguinte só deve ser solicitado se o campo anterior for preenchido corretamente.  \n- Após a coleta, o serviço de geração de lançamento deve ser chamado com o ID retornado da criação do diário.  \n\n## Instructions  \n1. Solicite ao cliente o campo `modelo_codigo`.  \n2. Se fornecido, solicite o campo `historico`.  \n3. Se fornecido, solicite o campo `doc_ref`.  \n4. Continue solicitando os campos na seguinte ordem, apenas se o anterior tiver sido preenchido:  \n   - valor_total  \n   - valor_custo  \n   - valor_imposto  \n   - desconto  \n\n\n\n5. Após todos os campos serem coletados, crie o diário atraves da execução    `geradiario(modelo_codigo,historico,doc_ref, valor_total,valor_custo, valor_imposto,desconto )`  e obtenha o ID de retorno da execução  \n \n6. Execute o serviço `geradiario(modelo_codigo,historico,doc_ref, valor_total,valor_custo, valor_imposto,desconto)`  e retorne  o ID retornado.  \n\n{\n  \"id\": {{ memory.previousToolResponse.response[0].id }}\n}\n\n7. Execute o serviço `geralancamento(id)` usando o ID retornado.  \n\n## Tools  \n- Serviço: `geradiario(modelo_codigo,historico,doc_ref, valor_total,valor_custo, valor_imposto,desconto )`  \n- Serviço: `geralancamento(id)` \n- Recurso: Diário contábil (para obter ID de retorno)  \n\n## Examples  \n- Input sequencial:  \n  - modelo_codigo: \"VENDA_REFEICAO\"    \n  - historico: Compra de insumos  \n  - doc_ref: NF1234  \n  - valor_total: 1000  \n  - valor_custo: 0  \n  - valor_imposto: 0  \n  - desconto: 0  \n\n- Output:  \n  - Diário criado com ID: 5789  \n  - Serviço `geralancamento(5789)` executado com sucesso.  \n\n## SOP (Standard Operating Procedure)  \n1. Pergunte o campo `modelo_codigo`.  \n2. Se preenchido, pergunte `historico`.  \n3. Se preenchido, pergunte `doc_ref`.  \n4. Continue com os próximos campos somente se o anterior for preenchido.  \n5. Após coletar todos os campos, envie os dados para criar o diário e armazene o ID retornado.  \n6. Chame `geralancamento(id)` com o ID recebido.  \n7. Confirme com o cliente a execução bem-sucedida.  \n\n## Final Notes  \n- Sempre valide se o campo anterior foi preenchido antes de prosseguir.  \n- Não aceite valores em branco ou nulos.  \n- Os valores numéricos devem estar em formato decimal com ponto (.) como separador.  \n---\n\n\n\n## Final Notes  \n- `modelo_codigo` deve ser uma string representando o tipo de operação (ex: \"VENDA_REFEICAO\", \"COMPRA_MERCADORIA\").  \n- Os valores numéricos devem estar em formato decimal com ponto (.) como separador.  \n- Não aceite valores em branco ou nulos, a não ser valor_custo ,  valor_imposto, desconto.  Esses podem ter valor zero. valor_total não---\n\n\n\n\n\n\n\n\n## Examples - Entrada rápida: - modelo_codigo: PAG_FORNECEDOR - historico: Pgto NF 456 - doc_ref: NF456 - valor_total: 1200 - valor_custo: 0 - valor_imposto: 0 - desconto: 0 - Saída esperada: - geradiario → response[0].id = 42 - geralancamento chamado com id = 42"}},"type":"@n8n/n8n-nodes-langchain.agent","typeVersion":2.2,"position":[656,480],"id":"7ecb4881-b10b-44b3-b6a2-c9ef716619c5","name":"AI Agent"},{"parameters":{"model":{"__rl":true,"value":"gpt-4o-mini","mode":"list","cachedResultName":"gpt-4o-mini"},"options":{"temperature":0}},"type":"@n8n/n8n-nodes-langchain.lmChatOpenAi","typeVersion":1.2,"position":[656,848],"id":"2221a388-1ad0-4bc8-b32b-f62143e609ec","name":"OpenAI Chat Model"},{"parameters":{"sessionIdType":"customKey","sessionKey":"=14552"},"type":"@n8n/n8n-nodes-langchain.memoryBufferWindow","typeVersion":1.3,"position":[720,720],"id":"1432af12-8e09-46c4-95fc-cedae77a0374","name":"Simple Memory"},{"parameters":{"method":"POST","url":"= https://apinocode01.megaapi.com.br/rest/sendMessage/megacode-MyrBo2u0n7N/text","sendHeaders":true,"headerParameters":{"parameters":[{"name":"Client-Token","value":"application/json"},{"name":"Authorization","value":"Bearer MyrBo2u0n7N"}]},"sendBody":true,"specifyBody":"json","jsonBody":"=   {\n  \"messageData\": {\n    \"to\": \"5516992975836\",\n    \"text\": \"{{ $json.output.replace(/\\n/g, '\\\\n')  }}\"\n  }\n}\n","options":{}},"id":"27184780-032c-499e-bff1-8eed1f2bc8a8","name":"RequestMenu7","type":"n8n-nodes-base.httpRequest","typeVersion":4.2,"position":[1024,480]},{"parameters":{"schema":{"__rl":true,"value":"contab","mode":"name"},"table":{"__rl":true,"value":"diario","mode":"list","cachedResultName":"diario"},"columns":{"mappingMode":"defineBelow","value":{"modelo_codigo":"={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('modelo_codigo', `modelo_codigo`, 'string') }}","data_mov":"= {{ $now }}","historico":"={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('historico', `historico`, 'string') }}","doc_ref":"={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('doc_ref', `doc_ref`, 'string') }}","valor_total":"={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('valor_total', `valor_total`, 'number') }}","valor_custo":"={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('valor_custo', `valor_custo`, 'number') }}","valor_imposto":"={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('valor_imposto', `valor_imposto`, 'number') }}","desconto":"={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('desconto', `desconto `, 'number') }}"},"matchingColumns":["id"],"schema":[{"id":"id","displayName":"id","required":false,"defaultMatch":true,"display":true,"type":"number","canBeUsedToMatch":true,"removed":true},{"id":"data_mov","displayName":"data_mov","required":true,"defaultMatch":false,"display":true,"type":"dateTime","canBeUsedToMatch":true},{"id":"modelo_codigo","displayName":"modelo_codigo","required":true,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true},{"id":"historico","displayName":"historico","required":true,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true},{"id":"doc_ref","displayName":"doc_ref","required":false,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true},{"id":"parceiro_id","displayName":"parceiro_id","required":false,"defaultMatch":false,"display":true,"type":"number","canBeUsedToMatch":true,"removed":true},{"id":"valor_total","displayName":"valor_total","required":false,"defaultMatch":false,"display":true,"type":"number","canBeUsedToMatch":true},{"id":"valor_custo","displayName":"valor_custo","required":false,"defaultMatch":false,"display":true,"type":"number","canBeUsedToMatch":true},{"id":"valor_imposto","displayName":"valor_imposto","required":false,"defaultMatch":false,"display":true,"type":"number","canBeUsedToMatch":true},{"id":"desconto","displayName":"desconto","required":false,"defaultMatch":false,"display":true,"type":"number","canBeUsedToMatch":true},{"id":"outros","displayName":"outros","required":false,"defaultMatch":false,"display":true,"type":"object","canBeUsedToMatch":true,"removed":true}],"attemptToConvertTypes":false,"convertFieldsToString":false},"options":{"outputColumns":["id"]}},"type":"n8n-nodes-base.postgresTool","typeVersion":2.6,"position":[832,704],"id":"d02409e7-b761-4a7e-8d5f-ff8df294aef7","name":"geradiario"},{"parameters":{"descriptionType":"manual","toolDescription":"Execute a SQL query in Postgres","operation":"executeQuery","query":"SELECT * FROM contab.gerar_lancamentos_por_diario($1)","options":{"queryReplacement":"={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Query_Parameters', ``, 'string') }}"}},"type":"n8n-nodes-base.postgresTool","typeVersion":2.6,"position":[1024,688],"id":"d0f70828-18af-4636-8f29-8cfb9c32a08a","name":"geralancamento"},{"parameters":{},"type":"n8n-nodes-base.noOp","typeVersion":1,"position":[1232,480],"id":"9e07913b-69dd-4877-802b-7ff34605d3f3","name":"No Operation, do nothing12","notes":"TEMPLATE DESENVOLVIDO POR NOCODE STARTUP\nhttps://nocodestartup.io/\n\nFORMAÇÃO GESTOR DE AGENTES DE IA:\nhttps://nocodestartup.io/formacao-gestor-agentes-ia/"},{"parameters":{"httpMethod":"POST","path":"agente","options":{}},"type":"n8n-nodes-base.webhook","typeVersion":2,"position":[-1280,784],"id":"b6999a88-f38c-49c7-831b-5086e5b4be62","name":"Webhook","webhookId":"66949457-5339-4325-b499-9a15d57ff6a1"},{"parameters":{"rules":{"values":[{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"leftValue":"={{ $json.status }}","rightValue":"menu","operator":{"type":"string","operation":"equals"},"id":"af400445-ccdb-465c-bb38-87e980d17d91"}],"combinator":"and"},"renameOutput":true,"outputKey":"menu"},{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"c8b0ced3-4826-4fb1-8d17-053d7e7ac874","leftValue":"={{ $json.status }}","rightValue":"sair","operator":{"type":"string","operation":"equals","name":"filter.operator.equals"}}],"combinator":"and"},"renameOutput":true,"outputKey":"sair"},{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"e2b4bc27-0610-4495-a368-f931a1af7b35","leftValue":"={{ $json.status }}","rightValue":"voltar","operator":{"type":"string","operation":"equals","name":"filter.operator.equals"}}],"combinator":"and"},"renameOutput":true,"outputKey":"voltar"},{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"cd2e6601-4c7c-4ec5-866d-803a336ecf96","leftValue":"={{ $json.status }}","rightValue":"cadastro","operator":{"type":"string","operation":"equals","name":"filter.operator.equals"}}],"combinator":"and"},"renameOutput":true,"outputKey":"cadastro"},{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"8ed1ccb5-e3fd-47fd-bc07-104ed5d4705b","leftValue":"={{ $json.status }}","rightValue":"lancamento","operator":{"type":"string","operation":"equals","name":"filter.operator.equals"}}],"combinator":"and"},"renameOutput":true,"outputKey":"lancamento"},{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"b8c1114d-3f7b-47a3-9cd6-0f892e78c593","leftValue":"={{ $json.status }}","rightValue":"balancete","operator":{"type":"string","operation":"equals","name":"filter.operator.equals"}}],"combinator":"and"},"renameOutput":true,"outputKey":"balancete"},{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"e7dfeb6c-c09b-4a3e-a2aa-631dfe69eb03","leftValue":"={{ $json.status }}","rightValue":"razao","operator":{"type":"string","operation":"equals","name":"filter.operator.equals"}}],"combinator":"and"},"renameOutput":true,"outputKey":"razao"},{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"886c4f7f-60d9-49c3-a240-ea5425296f2f","leftValue":"={{ $json.status }}","rightValue":"balancosaldo","operator":{"type":"string","operation":"equals","name":"filter.operator.equals"}}],"combinator":"and"},"renameOutput":true,"outputKey":"balancosaldo"},{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"662d8533-704c-4ad0-9fa4-85eab246bdaf","leftValue":"={{ $json.status }}","rightValue":"patrimonial","operator":{"type":"string","operation":"equals","name":"filter.operator.equals"}}],"combinator":"and"},"renameOutput":true,"outputKey":"patrimonial"},{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"dd6568cb-c4ce-4e2a-96bd-33b000224e25","leftValue":"={{ $json.status }}","rightValue":"DER","operator":{"type":"string","operation":"equals","name":"filter.operator.equals"}}],"combinator":"and"},"renameOutput":true,"outputKey":"DER"},{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"bd318d1e-8fb9-4b2f-8d6c-f32b00fb2b73","leftValue":"={{ $json.status }}","rightValue":"modelo","operator":{"type":"string","operation":"equals","name":"filter.operator.equals"}}],"combinator":"and"},"renameOutput":true,"outputKey":"modelo"},{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"ccc5e2f0-78f0-4c2f-af27-e9dd9268a5b5","leftValue":"={{ $json.status }}","rightValue":"token","operator":{"type":"string","operation":"equals","name":"filter.operator.equals"}}],"combinator":"and"}}]},"options":{}},"type":"n8n-nodes-base.switch","typeVersion":3.2,"position":[-448,1360],"id":"7c170336-4b9d-4dc3-95bb-cda41889e52d","name":"Switch"},{"parameters":{"method":"POST","url":"https://apinocode01.megaapi.com.br/rest/sendMessage/megacode-MyrBo2u0n7N/listMessage","sendHeaders":true,"headerParameters":{"parameters":[{"name":"authorization","value":"Bearer MyrBo2u0n7N"}]},"sendBody":true,"specifyBody":"json","jsonBody":" \n                                            {\n                                                \"messageData\": {\n                                                    \"to\": \"5516994066336\",\n                                                    \"buttonText\": \"Escolha\",\n                                                    \"text\": \"Opção\",\n                                                    \"title\": \"Menu contábil\",\n                                                    \"description\": \"Selecione item do Menu\",\n                                                    \"sections\": [\n                                                        {\n                                                            \"title\": \"Lançamento\",\n                                                            \"rows\": [\n                                                                {\n                                                                    \"title\": \"Lançamento\",\n                                                                    \"description\": \"Lançamento Contábil\",\n                                                                    \"rowId\": \"01\"\n                                                                }\n                                                            ]\n                                                        },\n                                                        {\n                                                            \"title\": \"Cadastro\",\n                                                            \"rows\": [\n                                                                {\n                                                                    \"title\": \"Casdatro de Conta \",\n                                                                    \"description\": \"Cadastramento de conta contábil\",\n                                                                    \"rowId\": \"02\"\n                                                                }\n                                                            ]\n                                                        },\n\n                                                       {\n                                                            \"title\": \"Lançamento\",\n                                                            \"rows\": [\n                                                                {\n                                                                    \"title\": \"Lançamento\",\n                                                                    \"description\": \"Lançamento Contábil\",\n                                                                    \"rowId\": \"01\"\n                                                                }\n                                                            ]\n                                                        },\n                                                        {\n                                                            \"title\": \"Voltar\",\n                                                            \"rows\": [\n                                                                {\n                                                                    \"title\": \"Voltar\",\n                                                                    \"description\": \"Voltar\",\n                                                                    \"rowId\": \"03\"\n                                                                }\n                                                            ]\n                                                        },\n\n                                                       {\n                                                            \"title\": \"Processamento Contábil\",\n                                                            \"rows\": [\n                                                                {\n                                                                    \"title\": \"Geração de Lançamento\",\n                                                                    \"description\": \"Processamento Contábil\",\n                                                                    \"rowId\": \"03\"\n                                                                }\n                                                            ]\n                                                        },\n                                                        {\n                                                            \"title\": \"Relatório de Contas\",\n                                                            \"rows\": [\n                                                                {\n                                                                    \"title\": \"Relatório de Contas \",\n                                                                    \"description\": \"Relatório de Contas\",\n                                                                    \"rowId\": \"04\"\n                                                                }\n                                                            ]\n                                                        },\n                                                        {\n                                                            \"title\": \"Relatório Contábeil\",\n                                                            \"rows\": [\n                                                                {\n                                                                    \"title\": \"Relatório Contábeil\",\n                                                                    \"description\": \"Relatório Contábeil\",\n                                                                    \"rowId\": \"05\"\n                                                                }\n                                                            ]\n                                                        }\n                                                    ],\n                                                    \"listType\": 0\n                                                }\n                                            }\n                                        ","options":{}},"type":"n8n-nodes-base.httpRequest","typeVersion":4.2,"position":[0,0],"id":"4ad47d43-f422-4f6e-b6ee-8465ba054789","name":"HTTP Request"},{"parameters":{},"type":"n8n-nodes-base.noOp","typeVersion":1,"position":[272,0],"id":"5581d9c8-56b5-4026-933b-62327bb3d560","name":"No Operation, do nothing","notes":"TEMPLATE DESENVOLVIDO POR NOCODE STARTUP\nhttps://nocodestartup.io/\n\nFORMAÇÃO GESTOR DE AGENTES DE IA:\nhttps://nocodestartup.io/formacao-gestor-agentes-ia/"},{"parameters":{"assignments":{"assignments":[{"id":"468b693c-abc2-4ece-b9c7-15a6a41d329c","name":"selectedRowId","value":"={{ $json.body?.message?.listResponseMessage?.singleSelectReply?.selectedRowId }}","type":"string"},{"id":"3611f97f-8ddc-4cc8-b264-c6105a232bd8","name":"msg","value":"={{ $json.body.message.conversation }}","type":"string"}]},"options":{}},"type":"n8n-nodes-base.set","typeVersion":3.4,"position":[-1040,800],"id":"059923ef-6474-48f7-89ba-47a20c204a55","name":"Edit Fields"},{"parameters":{"conditions":{"options":{"caseSensitive":true,"leftValue":"","typeValidation":"strict","version":2},"conditions":[{"id":"b74707c5-e9f6-4c4c-b126-d0b3eec3d03d","leftValue":"={{ $json.msg }}","rightValue":"","operator":{"type":"string","operation":"empty","singleValue":true}}],"combinator":"and"},"options":{}},"type":"n8n-nodes-base.if","typeVersion":2.2,"position":[-832,800],"id":"f72bba47-3b3e-438a-9a1a-d7fb6d19d20b","name":"If"},{"parameters":{"operation":"select","schema":{"__rl":true,"value":"contab","mode":"name"},"table":{"__rl":true,"value":"menu","mode":"list","cachedResultName":"menu"},"returnAll":true,"where":{"values":[{"column":"selecionado","value":"=true"}]},"options":{}},"type":"n8n-nodes-base.postgres","typeVersion":2.6,"position":[-624,784],"id":"d9f1c70a-c245-42a7-a71c-d9657858c387","name":"Select rows from a table1"},{"parameters":{"operation":"executeQuery","query":"update menu set selecionado =false;","options":{}},"type":"n8n-nodes-base.postgres","typeVersion":2.6,"position":[-1760,1264],"id":"14c8fece-e8c0-442d-a30c-5e81d4989e3c","name":"Execute a SQL query"},{"parameters":{"operation":"executeQuery","query":"update menu set selecionado = true where  selectedRowId= {{ $json.selectedRowId }};","options":{}},"type":"n8n-nodes-base.postgres","typeVersion":2.6,"position":[-1568,1264],"id":"ab9bde80-99d8-45a1-becb-c8d0fa2f28d8","name":"Execute a SQL query1"},{"parameters":{},"type":"n8n-nodes-base.noOp","typeVersion":1,"position":[-1120,1280],"id":"d4071560-b658-4990-9196-1fe96df1d00e","name":"No Operation, do nothing1","notes":"TEMPLATE DESENVOLVIDO POR NOCODE STARTUP\nhttps://nocodestartup.io/\n\nFORMAÇÃO GESTOR DE AGENTES DE IA:\nhttps://nocodestartup.io/formacao-gestor-agentes-ia/"},{"parameters":{"method":"POST","url":"= https://apinocode01.megaapi.com.br/rest/sendMessage/megacode-MyrBo2u0n7N/text","sendHeaders":true,"headerParameters":{"parameters":[{"name":"Client-Token","value":"application/json"},{"name":"Authorization","value":"Bearer MyrBo2u0n7N"}]},"sendBody":true,"specifyBody":"json","jsonBody":"=   {\n  \"messageData\": {\n    \"to\": \"5516992975836\",\n    \"text\": \"Ok digite continar\"\n  }\n}\n","options":{}},"id":"3da7326a-eaa3-4ed2-9720-c06b531aff58","name":"RequestMenu","type":"n8n-nodes-base.httpRequest","typeVersion":4.2,"position":[-1360,1280]},{"parameters":{"promptType":"define","text":"= ","options":{"systemMessage":"= # Overview  \nVocê é um agente AI responsável por coletar dados sequenciais para gerar lançamentos contábeis. Cada campo depende do preenchimento correto do anterior antes de prosseguir. Após a coleta completa dos dados, o agente executa o serviço `geralancamento(id)` usando o ID de retorno obtido ao solicitar os dados do diário.\n\n## Context  \n- O objetivo é gerar lançamentos contábeis a partir de dados fornecidos pelo cliente.  \n- Os dados devem ser coletados na seguinte ordem: modelo_codigo, historico, doc_ref, valor_total, valor_custo, valor_imposto, desconto.  \n- O campo seguinte só deve ser solicitado se o campo anterior for preenchido corretamente.  \n- Após a coleta, o serviço de geração de lançamento deve ser chamado com o ID retornado da criação do diário.  \n\n## Instructions  \n1. Solicite ao cliente o campo `modelo_codigo`.  \n2. Se fornecido, solicite o campo `historico`.  \n3. Se fornecido, solicite o campo `doc_ref`.  \n4. Continue solicitando os campos na seguinte ordem, apenas se o anterior tiver sido preenchido:  \n   - valor_total  \n   - valor_custo  \n   - valor_imposto  \n   - desconto  \n\n\n\n5. Após todos os campos serem coletados, crie o diário atraves da execução    `geradiario(modelo_codigo,historico,doc_ref, valor_total,valor_custo, valor_imposto,desconto )`  e obtenha o ID de retorno da execução  \n \n6. Execute o serviço `geradiario(modelo_codigo,historico,doc_ref, valor_total,valor_custo, valor_imposto,desconto)`  e retorne  o ID retornado.  \n\n{\n  \"id\": {{ memory.previousToolResponse.response[0].id }}\n}\n\n7. Execute o serviço `geralancamento(id)` usando o ID retornado.  \n\n## Tools  \n- Serviço: `geradiario(modelo_codigo,historico,doc_ref, valor_total,valor_custo, valor_imposto,desconto )`  \n- Serviço: `geralancamento(id)` \n- Recurso: Diário contábil (para obter ID de retorno)  \n\n## Examples  \n- Input sequencial:  \n  - modelo_codigo: \"VENDA_REFEICAO\"    \n  - historico: Compra de insumos  \n  - doc_ref: NF1234  \n  - valor_total: 1000  \n  - valor_custo: 0  \n  - valor_imposto: 0  \n  - desconto: 0  \n\n- Output:  \n  - Diário criado com ID: 5789  \n  - Serviço `geralancamento(5789)` executado com sucesso.  \n\n## SOP (Standard Operating Procedure)  \n1. Pergunte o campo `modelo_codigo`.  \n2. Se preenchido, pergunte `historico`.  \n3. Se preenchido, pergunte `doc_ref`.  \n4. Continue com os próximos campos somente se o anterior for preenchido.  \n5. Após coletar todos os campos, envie os dados para criar o diário e armazene o ID retornado.  \n6. Chame `geralancamento(id)` com o ID recebido.  \n7. Confirme com o cliente a execução bem-sucedida.  \n\n## Final Notes  \n- Sempre valide se o campo anterior foi preenchido antes de prosseguir.  \n- Não aceite valores em branco ou nulos.  \n- Os valores numéricos devem estar em formato decimal com ponto (.) como separador.  \n---\n\n\n\n## Final Notes  \n- `modelo_codigo` deve ser uma string representando o tipo de operação (ex: \"VENDA_REFEICAO\", \"COMPRA_MERCADORIA\").  \n- Os valores numéricos devem estar em formato decimal com ponto (.) como separador.  \n- Não aceite valores em branco ou nulos, a não ser valor_custo ,  valor_imposto, desconto.  Esses podem ter valor zero. valor_total não---\n\n\n\n\n\n\n\n\n## Examples - Entrada rápida: - modelo_codigo: PAG_FORNECEDOR - historico: Pgto NF 456 - doc_ref: NF456 - valor_total: 1200 - valor_custo: 0 - valor_imposto: 0 - desconto: 0 - Saída esperada: - geradiario → response[0].id = 42 - geralancamento chamado com id = 42"}},"type":"@n8n/n8n-nodes-langchain.agent","typeVersion":2.2,"position":[240,192],"id":"0c8af650-96e3-4b19-9a03-7586363e1fd9","name":"AI Agent1"},{"parameters":{"sessionIdType":"customKey","sessionKey":"=14552"},"type":"@n8n/n8n-nodes-langchain.memoryBufferWindow","typeVersion":1.3,"position":[304,416],"id":"b7f4f2e2-fa7d-4bdb-b89d-3e630f84a3a8","name":"Simple Memory1"},{"parameters":{"method":"POST","url":"= https://apinocode01.megaapi.com.br/rest/sendMessage/megacode-MyrBo2u0n7N/text","sendHeaders":true,"headerParameters":{"parameters":[{"name":"Client-Token","value":"application/json"},{"name":"Authorization","value":"Bearer MyrBo2u0n7N"}]},"sendBody":true,"specifyBody":"json","jsonBody":"=   {\n  \"messageData\": {\n    \"to\": \"5516992975836\",\n    \"text\": \"{{ $json.output.replace(/\\n/g, '\\\\n')  }}\"\n  }\n}\n","options":{}},"id":"5c433681-e3d3-4ed2-b254-bebdb3fa91a8","name":"RequestMenu8","type":"n8n-nodes-base.httpRequest","typeVersion":4.2,"position":[592,192]},{"parameters":{},"type":"n8n-nodes-base.noOp","typeVersion":1,"position":[848,192],"id":"9d726253-3364-4503-bdc3-2f905aa38ba4","name":"No Operation, do nothing13","notes":"TEMPLATE DESENVOLVIDO POR NOCODE STARTUP\nhttps://nocodestartup.io/\n\nFORMAÇÃO GESTOR DE AGENTES DE IA:\nhttps://nocodestartup.io/formacao-gestor-agentes-ia/"},{"parameters":{"model":{"__rl":true,"value":"gpt-4o-mini","mode":"list","cachedResultName":"gpt-4o-mini"},"options":{"temperature":0}},"type":"@n8n/n8n-nodes-langchain.lmChatOpenAi","typeVersion":1.2,"position":[192,400],"id":"6f5e4974-4467-4520-9873-b458b35a78f8","name":"OpenAI Chat Model1"},{"parameters":{"schema":{"__rl":true,"value":"contab","mode":"name"},"table":{"__rl":true,"value":"modelos","mode":"list","cachedResultName":"modelos"},"columns":{"mappingMode":"defineBelow","value":{"codigo":"={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('codigo', `modelo_codigo`, 'string') }}","nome":"={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('nome', `nome`, 'string') }}"},"matchingColumns":["id"],"schema":[{"id":"id","displayName":"id","required":false,"defaultMatch":true,"display":true,"type":"number","canBeUsedToMatch":true,"removed":true},{"id":"codigo","displayName":"codigo","required":true,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true},{"id":"nome","displayName":"nome","required":true,"defaultMatch":false,"display":true,"type":"string","canBeUsedToMatch":true},{"id":"ativo","displayName":"ativo","required":false,"defaultMatch":false,"display":true,"type":"boolean","canBeUsedToMatch":true,"removed":true}],"attemptToConvertTypes":false,"convertFieldsToString":false},"options":{"outputColumns":["id"]}},"type":"n8n-nodes-base.postgresTool","typeVersion":2.6,"position":[400,400],"id":"2436b442-5976-4c85-b306-6658c8743138","name":"InsereModelo"},{"parameters":{"method":"POST","url":"https://gotenberggotenberg8-production-8d7d.up.railway.app/forms/chromium/convert/html","sendBody":true,"contentType":"multipart-form-data","bodyParameters":{"parameters":[{"parameterType":"formBinaryData","name":"files","inputDataFieldName":"file"}]},"options":{"response":{"response":{"responseFormat":"file","outputPropertyName":"balancete.pdf"}}}},"type":"n8n-nodes-base.httpRequest","typeVersion":4.2,"position":[1440,1088],"id":"d734ebf4-c272-4af7-b686-fe476cf4b9c1","name":"HTTP Request6"},{"parameters":{"method":"POST","url":"=https://apinocode01.megaapi.com.br/rest/sendMessage/megacode-Mp5VTYM2qds/mediaBase64","sendHeaders":true,"headerParameters":{"parameters":[{"name":"Client-Token","value":"application/json"},{"name":"Authorization","value":"Bearer Mp5VTYM2qds"}]},"sendBody":true,"specifyBody":"json","jsonBody":"= {\n  \"messageData\": {\n    \"to\": \"5516992975836\",\n    \"type\": \"document\",\n    \"caption\": \"Segue Balancete\",\n    \"fileName\": \"{{ $node['gerahtml'].json.fileName || 'relatorio.pdf' }}\",\n    \"mimeType\": \"application/pdf\",\n    \"base64\": \"data:application/pdf;base64, {{ $json.base64 }}\"\n  }\n}\n ","options":{}},"id":"cab1de5b-98df-4ed9-ac9c-3ee596820b74","name":"MegaApi3","type":"n8n-nodes-base.httpRequest","typeVersion":4.2,"position":[1920,1088]},{"parameters":{"jsCode":" // garante que entrou um item com binário\nconst item = items[0];\nconst bins = item.binary || {};\nconst keys = Object.keys(bins);\nif (!keys.length) {\n  throw new Error('Nenhum binário no input. No HTTP Request (Gotenberg), ative Download=ON e Response=File.');\n}\n\n// escolhe o PDF: por mimeType, por extensão .pdf, ou o primeiro\nconst pdfKey =\n  keys.find(k => (bins[k].mimeType || '').includes('pdf')) ||\n  keys.find(k => k.toLowerCase().endsWith('.pdf')) ||\n  keys[0];\n\nconst pdf = bins[pdfKey];\nif (!pdf) {\n  throw new Error('PDF não encontrado. Binários disponíveis: ' + keys.join(', '));\n}\n\n// nome do arquivo\nconst fileName = item.json.fileName || pdf.fileName || 'relatorio.pdf';\n\n// sai com base64 + fileName para o próximo nó\nreturn [{\n  json: {\n    base64: pdf.data,                 // JÁ é base64\n    fileName: fileName                // ex.: relatorio-2025-08-20.pdf\n  }\n}];\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[1696,1088],"id":"72152d7f-3b46-4cfd-8307-6048c8532ac1","name":"Code11"},{"parameters":{"operation":"toText","sourceProperty":"html","binaryPropertyName":"=file","options":{"encoding":"utf8","fileName":"index.html"}},"type":"n8n-nodes-base.convertToFile","typeVersion":1.1,"position":[1216,1088],"id":"c4e91cc1-d0b8-4c87-b627-e8608f85a139","name":"Convert to File2"},{"parameters":{"jsCode":" // pega todos os itens da entrada\nconst rows = items.map(item => item.json);\n\n// monta cabeçalho da tabela\nlet html = `\n<!DOCTYPE html>\n<html lang=\"pt-BR\">\n<head>\n<meta charset=\"UTF-8\">\n<title>Balancete</title>\n<style>\n  body { font-family: Arial, sans-serif; margin: 20px; }\n  h2 { text-align: center; }\n  table { border-collapse: collapse; width: 100%; margin-top:20px; }\n  th, td { border: 1px solid #ccc; padding: 6px; text-align: center; font-size: 12px; }\n  th { background-color: #f2f2f2; }\n  tr:nth-child(even) { background-color: #fafafa; }\n</style>\n</head>\n<body>\n  <h2>Balancete</h2>\n  <table>\n    <thead>\n      <tr>\n        <th>Código</th>\n        <th>Nome</th>\n        <th>Tipo</th>\n        <th>Natureza</th>\n        <th>Total Débitos</th>\n        <th>Total Créditos</th>\n        <th>Saldo</th>\n      </tr>\n    </thead>\n    <tbody>\n`;\n\n// preenche as linhas da tabela\nfor (const row of rows) {\n  html += `\n    <tr>\n      <td>${row.codigo}</td>\n      <td>${row.nome}</td>\n      <td>${row.tipo}</td>\n      <td>${row.natureza}</td>\n      <td>${Number(row.total_debitos).toLocaleString('pt-BR',{minimumFractionDigits:2})}</td>\n      <td>${Number(row.total_creditos).toLocaleString('pt-BR',{minimumFractionDigits:2})}</td>\n      <td>${Number(row.saldo).toLocaleString('pt-BR',{minimumFractionDigits:2})}</td>\n    </tr>\n  `;\n}\n\nhtml += `\n    </tbody>\n  </table>\n</body>\n</html>\n`;\n\n// devolve o HTML como campo\nreturn [{ json: { html } }];\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[1008,1088],"id":"5300519f-0fdd-40ac-8c2d-a200097983d0","name":"gerahtml"},{"parameters":{"method":"POST","url":"https://gotenberggotenberg8-production-8d7d.up.railway.app/forms/chromium/convert/html","sendBody":true,"contentType":"multipart-form-data","bodyParameters":{"parameters":[{"parameterType":"formBinaryData","name":"files","inputDataFieldName":"file"}]},"options":{"response":{"response":{"responseFormat":"file","outputPropertyName":"razao.pdf"}}}},"type":"n8n-nodes-base.httpRequest","typeVersion":4.2,"position":[1440,1280],"id":"65fcfada-1baa-4d75-8282-8b877f796aeb","name":"HTTP Request7"},{"parameters":{"jsCode":" // garante que entrou um item com binário\nconst item = items[0];\nconst bins = item.binary || {};\nconst keys = Object.keys(bins);\nif (!keys.length) {\n  throw new Error('Nenhum binário no input. No HTTP Request (Gotenberg), ative Download=ON e Response=File.');\n}\n\n// escolhe o PDF: por mimeType, por extensão .pdf, ou o primeiro\nconst pdfKey =\n  keys.find(k => (bins[k].mimeType || '').includes('pdf')) ||\n  keys.find(k => k.toLowerCase().endsWith('.pdf')) ||\n  keys[0];\n\nconst pdf = bins[pdfKey];\nif (!pdf) {\n  throw new Error('PDF não encontrado. Binários disponíveis: ' + keys.join(', '));\n}\n\n// nome do arquivo\nconst fileName = item.json.fileName || pdf.fileName || 'relatorio.pdf';\n\n// sai com base64 + fileName para o próximo nó\nreturn [{\n  json: {\n    base64: pdf.data,                 // JÁ é base64\n    fileName: fileName                // ex.: relatorio-2025-08-20.pdf\n  }\n}];\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[1696,1280],"id":"ee8d02a1-ed9b-4d66-87d1-0176b256d867","name":"Code"},{"parameters":{"operation":"toText","sourceProperty":"html","binaryPropertyName":"=file","options":{"encoding":"utf8","fileName":"index.html"}},"type":"n8n-nodes-base.convertToFile","typeVersion":1.1,"position":[1216,1280],"id":"9a9f9f6b-f0d5-4737-ba05-265888c1ccb3","name":"Convert to File"},{"parameters":{"operation":"executeQuery","query":"select * from contab.vw_razao;","options":{}},"type":"n8n-nodes-base.postgres","typeVersion":2.6,"position":[768,1280],"id":"2991ce26-0c51-4d22-b409-b1763659e46b","name":"razao"},{"parameters":{"jsCode":" const rows = items.map(item => item.json);\n\nlet html = `\n<!DOCTYPE html>\n<html lang=\"pt-BR\">\n<head>\n<meta charset=\"UTF-8\">\n<title>Razão Contábil</title>\n<style>\n  body {\n    font-family: \"Segoe UI\", Arial, sans-serif;\n    margin: 30px;\n    background-color: #f9fafc;\n  }\n  h2 {\n    text-align: center;\n    color: #2c3e50;\n    margin-bottom: 20px;\n  }\n  table {\n    border-collapse: collapse;\n    width: 100%;\n    font-size: 12px;\n    background-color: #fff;\n    box-shadow: 0 0 8px rgba(0,0,0,0.1);\n  }\n  th {\n    background-color: #2980b9;\n    color: white;\n    padding: 8px;\n    text-align: center;\n  }\n  td {\n    border: 1px solid #ddd;\n    padding: 6px;\n    text-align: center;\n  }\n  td.hist {\n    text-align: left;\n  }\n  tr:nth-child(even) {\n    background-color: #f2f6f9;\n  }\n  tr:hover {\n    background-color: #eaf2f8;\n  }\n</style>\n</head>\n<body>\n  <h2>Razão Contábil</h2>\n  <table>\n    <thead>\n      <tr>\n        <th>Data</th>\n        <th>Código Conta</th>\n        <th>Nome Conta</th>\n        <th>Histórico</th>\n        <th>Débito</th>\n        <th>Crédito</th>\n        <th>Diário ID</th>\n        <th>Modelo</th>\n      </tr>\n    </thead>\n    <tbody>\n`;\n\nfor (const r of rows) {\n  html += `\n    <tr>\n      <td>${new Date(r.data_mov).toLocaleDateString('pt-BR')}</td>\n      <td>${r.conta_codigo}</td>\n      <td>${r.conta_nome}</td>\n      <td class=\"hist\">${r.historico}</td>\n      <td>${Number(r.debito).toLocaleString('pt-BR',{minimumFractionDigits:2})}</td>\n      <td>${Number(r.credito).toLocaleString('pt-BR',{minimumFractionDigits:2})}</td>\n      <td>${r.diario_id}</td>\n      <td>${r.modelo_codigo}</td>\n    </tr>\n  `;\n}\n\nhtml += `\n    </tbody>\n  </table>\n</body>\n</html>\n`;\n\nreturn [{ json: { html } }];\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[1008,1280],"id":"5e5a2259-4363-47fa-b01a-52a3b86b70bd","name":"Code1"},{"parameters":{"operation":"executeQuery","query":"select * from contab.vw_balancete;","options":{}},"type":"n8n-nodes-base.postgres","typeVersion":2.6,"position":[768,1088],"id":"2e6c570a-0032-4f71-9c3f-8d11cec154ac","name":"balancete"},{"parameters":{"method":"POST","url":"https://gotenberggotenberg8-production-8d7d.up.railway.app/forms/chromium/convert/html","sendBody":true,"contentType":"multipart-form-data","bodyParameters":{"parameters":[{"parameterType":"formBinaryData","name":"files","inputDataFieldName":"file"}]},"options":{"response":{"response":{"responseFormat":"file","outputPropertyName":"balancetesaldo.pdf"}}}},"type":"n8n-nodes-base.httpRequest","typeVersion":4.2,"position":[1440,1472],"id":"ab7786f2-6078-4d5a-8740-1d739e733764","name":"HTTP Request8"},{"parameters":{"method":"POST","url":"=https://apinocode01.megaapi.com.br/rest/sendMessage/megacode-Mp5VTYM2qds/mediaBase64","sendHeaders":true,"headerParameters":{"parameters":[{"name":"Client-Token","value":"application/json"},{"name":"Authorization","value":"Bearer Mp5VTYM2qds"}]},"sendBody":true,"specifyBody":"json","jsonBody":"= {\n  \"messageData\": {\n    \"to\": \"5516992975836\",\n    \"type\": \"document\",\n    \"caption\": \"Segue Balancete Saldo\",\n    \"fileName\": \"{{ $node['gerahtml1'].json.fileName || 'balancetesaldo.pdf' }}\",\n    \"mimeType\": \"application/pdf\",\n    \"base64\": \"data:application/pdf;base64, {{ $json.base64 }}\"\n  }\n}\n ","options":{}},"id":"7a636e9a-1436-4d16-9a7a-b75d2abfa462","name":"MegaApi4","type":"n8n-nodes-base.httpRequest","typeVersion":4.2,"position":[1920,1472]},{"parameters":{"jsCode":" // garante que entrou um item com binário\nconst item = items[0];\nconst bins = item.binary || {};\nconst keys = Object.keys(bins);\nif (!keys.length) {\n  throw new Error('Nenhum binário no input. No HTTP Request (Gotenberg), ative Download=ON e Response=File.');\n}\n\n// escolhe o PDF: por mimeType, por extensão .pdf, ou o primeiro\nconst pdfKey =\n  keys.find(k => (bins[k].mimeType || '').includes('pdf')) ||\n  keys.find(k => k.toLowerCase().endsWith('.pdf')) ||\n  keys[0];\n\nconst pdf = bins[pdfKey];\nif (!pdf) {\n  throw new Error('PDF não encontrado. Binários disponíveis: ' + keys.join(', '));\n}\n\n// nome do arquivo\nconst fileName = item.json.fileName || pdf.fileName || 'relatorio.pdf';\n\n// sai com base64 + fileName para o próximo nó\nreturn [{\n  json: {\n    base64: pdf.data,                 // JÁ é base64\n    fileName: fileName                // ex.: relatorio-2025-08-20.pdf\n  }\n}];\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[1696,1472],"id":"8053d385-18db-445c-b884-1ec65713242b","name":"Code12"},{"parameters":{"operation":"toText","sourceProperty":"html","binaryPropertyName":"=file","options":{"encoding":"utf8","fileName":"index.html"}},"type":"n8n-nodes-base.convertToFile","typeVersion":1.1,"position":[1216,1472],"id":"0b86b473-e401-491f-a5e3-c1222deeb022","name":"Convert to File3"},{"parameters":{"jsCode":" // === Code node (Run Once for All Items) ===\n// Entrada: items -> [{ conta_codigo, conta_nome, saldo_mes_anterior, saldo_mes_atual, diferenca }, ...]\n// Saída: { html } -> para Convert to File / Gotenberg\n\nconst rows = items.map(i => i.json);\n\n// ordena por código de conta (humano)\nrows.sort((a, b) => String(a.conta_codigo).localeCompare(String(b.conta_codigo), 'pt-BR', { numeric: true }));\n\nconst fmt   = (n) => Number(n || 0).toLocaleString('pt-BR', { minimumFractionDigits: 2, maximumFractionDigits: 2 });\nconst sum   = (key) => rows.reduce((acc, r) => acc + (Number(r[key]) || 0), 0);\nconst cellN = (n) => `<td class=\"num ${Number(n) < 0 ? 'neg' : ''}\">${fmt(n)}</td>`;\n\n// totais\nconst totalAnt  = sum('saldo_mes_anterior');\nconst totalMes  = sum('saldo_mes_atual');\n// se a consulta já traz \"diferenca\" por linha, somamos; senão, calculamos por (mes - anterior)\nconst totalDiff = rows.some(r => r.hasOwnProperty('diferenca')) ? sum('diferenca') : (totalMes - totalAnt);\n\n// metadata\nconst geradoEm = new Date().toLocaleString('pt-BR');\nconst titulo   = 'Balancete de Saldos';\nconst subtitulo= `Gerado em ${geradoEm}`;\n\nlet html = `<!DOCTYPE html>\n<html lang=\"pt-BR\">\n<head>\n<meta charset=\"UTF-8\">\n<title>${titulo}</title>\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\n<style>\n  :root{\n    --primary:#1e88e5;\n    --zebra:#f5f9ff;\n    --border:#e5e9f2;\n    --text:#2c3e50;\n    --muted:#6b7a90;\n    --total-bg:#eef3fb;\n    --neg:#c0392b;\n  }\n  @page { margin: 20mm 12mm; }\n  * { box-sizing: border-box; }\n  body{\n    font-family: \"Segoe UI\", Arial, sans-serif;\n    color: var(--text);\n    margin: 0;\n    padding: 24px;\n    background: #fff;\n  }\n  header{\n    text-align:center;\n    margin-bottom: 14px;\n  }\n  h1{\n    margin: 0 0 4px 0;\n    font-size: 20px;\n    font-weight: 700;\n    letter-spacing: .3px;\n  }\n  .sub{\n    color: var(--muted);\n    font-size: 12px;\n  }\n  table{\n    width:100%;\n    border-collapse: collapse;\n    font-size: 12px;\n    margin-top: 8px;\n  }\n  thead th{\n    background: var(--primary);\n    color: #fff;\n    padding: 8px 10px;\n    text-align: left;\n    border: 1px solid var(--primary);\n    white-space: nowrap;\n  }\n  tbody td{\n    border: 1px solid var(--border);\n    padding: 7px 10px;\n    vertical-align: top;\n  }\n  tbody tr:nth-child(even){ background: var(--zebra); }\n  td.cod   { width: 90px; font-variant-numeric: tabular-nums; }\n  td.nome  { width: auto; }\n  .num{\n    text-align: right;\n    font-variant-numeric: tabular-nums;\n    white-space: nowrap;\n  }\n  .neg{ color: var(--neg); font-weight: 600; }\n  tfoot td{\n    border: 1px solid var(--border);\n    background: var(--total-bg);\n    font-weight: 700;\n    padding: 8px 10px;\n  }\n  .tot-label{ text-align:right; }\n</style>\n</head>\n<body>\n  <header>\n    <h1>${titulo}</h1>\n    <div class=\"sub\">${subtitulo}</div>\n  </header>\n\n  <table>\n    <thead>\n      <tr>\n        <th>Código</th>\n        <th>Conta</th>\n        <th>Saldo mês anterior</th>\n        <th>Saldo do mês</th>\n        <th>Diferença</th>\n      </tr>\n    </thead>\n    <tbody>\n`;\n\nfor (const r of rows) {\n  html += `\n      <tr>\n        <td class=\"cod\">${r.conta_codigo ?? ''}</td>\n        <td class=\"nome\">${r.conta_nome ?? ''}</td>\n        ${cellN(r.saldo_mes_anterior)}\n        ${cellN(r.saldo_mes_atual)}\n        ${cellN(r.diferenca ?? (Number(r.saldo_mes_atual||0) - Number(r.saldo_mes_anterior||0)))}\n      </tr>\n  `;\n}\n\nhtml += `\n    </tbody>\n    <tfoot>\n      <tr>\n        <td colspan=\"2\" class=\"tot-label\">Totais</td>\n        ${cellN(totalAnt)}\n        ${cellN(totalMes)}\n        ${cellN(totalDiff)}\n      </tr>\n    </tfoot>\n  </table>\n</body>\n</html>`;\n\nreturn [{ json: { html } }];\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[1008,1472],"id":"a1809e80-66a5-4a0c-8926-74b2265d2a84","name":"gerahtml1"},{"parameters":{"method":"POST","url":"=https://apinocode01.megaapi.com.br/rest/sendMessage/megacode-Mp5VTYM2qds/mediaBase64","sendHeaders":true,"headerParameters":{"parameters":[{"name":"Client-Token","value":"application/json"},{"name":"Authorization","value":"Bearer Mp5VTYM2qds"}]},"sendBody":true,"specifyBody":"json","jsonBody":"= {\n  \"messageData\": {\n    \"to\": \"5516992975836\",\n    \"type\": \"document\",\n    \"caption\": \"Segue Relatório Razão\",\n    \"fileName\": \"{{ $node['gerahtmlrazao'].json.fileName || 'razao.pdf' }}\",\n    \"mimeType\": \"application/pdf\",\n    \"base64\": \"data:application/pdf;base64, {{ $json.base64 }}\"\n  }\n}\n ","options":{}},"id":"4af42719-af90-418d-8650-3e2956e794a5","name":"MegaApi","type":"n8n-nodes-base.httpRequest","typeVersion":4.2,"position":[1920,1280]},{"parameters":{"operation":"executeQuery","query":"select * from contab.vw_balancete_saldos;","options":{}},"type":"n8n-nodes-base.postgres","typeVersion":2.6,"position":[768,1472],"id":"2a7650b9-1d0e-446a-a28c-e71f15cc70fe","name":"balancetesaldo"},{"parameters":{"method":"POST","url":"https://gotenberggotenberg8-production-8d7d.up.railway.app/forms/chromium/convert/html","sendBody":true,"contentType":"multipart-form-data","bodyParameters":{"parameters":[{"parameterType":"formBinaryData","name":"files","inputDataFieldName":"file"}]},"options":{"response":{"response":{"responseFormat":"file","outputPropertyName":"patrimonial.pdf"}}}},"type":"n8n-nodes-base.httpRequest","typeVersion":4.2,"position":[1440,1648],"id":"caf864d4-e5ec-4aac-a1b8-8e222f818dc7","name":"HTTP Request9"},{"parameters":{"method":"POST","url":"=https://apinocode01.megaapi.com.br/rest/sendMessage/megacode-Mp5VTYM2qds/mediaBase64","sendHeaders":true,"headerParameters":{"parameters":[{"name":"Client-Token","value":"application/json"},{"name":"Authorization","value":"Bearer Mp5VTYM2qds"}]},"sendBody":true,"specifyBody":"json","jsonBody":"= {\n  \"messageData\": {\n    \"to\": \"5516992975836\",\n    \"type\": \"document\",\n    \"caption\": \"Segue Balanço Patrimonial\",\n    \"fileName\": \"{{ $node['gerahtml2'].json.fileName || 'patrimonial.pdf' }}\",\n    \"mimeType\": \"application/pdf\",\n    \"base64\": \"data:application/pdf;base64, {{ $json.base64 }}\"\n  }\n}\n ","options":{}},"id":"1dfd15a3-2924-4660-ab1a-402cddceadd8","name":"MegaApi5","type":"n8n-nodes-base.httpRequest","typeVersion":4.2,"position":[1920,1648]},{"parameters":{"jsCode":" // garante que entrou um item com binário\nconst item = items[0];\nconst bins = item.binary || {};\nconst keys = Object.keys(bins);\nif (!keys.length) {\n  throw new Error('Nenhum binário no input. No HTTP Request (Gotenberg), ative Download=ON e Response=File.');\n}\n\n// escolhe o PDF: por mimeType, por extensão .pdf, ou o primeiro\nconst pdfKey =\n  keys.find(k => (bins[k].mimeType || '').includes('pdf')) ||\n  keys.find(k => k.toLowerCase().endsWith('.pdf')) ||\n  keys[0];\n\nconst pdf = bins[pdfKey];\nif (!pdf) {\n  throw new Error('PDF não encontrado. Binários disponíveis: ' + keys.join(', '));\n}\n\n// nome do arquivo\nconst fileName = item.json.fileName || pdf.fileName || 'relatorio.pdf';\n\n// sai com base64 + fileName para o próximo nó\nreturn [{\n  json: {\n    base64: pdf.data,                 // JÁ é base64\n    fileName: fileName                // ex.: relatorio-2025-08-20.pdf\n  }\n}];\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[1712,1648],"id":"89172359-6c03-4c56-8a20-a807cd92d6be","name":"Code13"},{"parameters":{"operation":"toText","sourceProperty":"html","binaryPropertyName":"=file","options":{"encoding":"utf8","fileName":"index.html"}},"type":"n8n-nodes-base.convertToFile","typeVersion":1.1,"position":[1216,1648],"id":"3e4e772a-b3e9-4e3c-bec9-82bfc01b39b0","name":"Convert to File4"},{"parameters":{"jsCode":" // Entrada: items -> [{ ordem, descricao, saldo_inicial, saldo_final, diferenca }, ...]\n// Saída: { html }\n\nconst rows = items.map(i => i.json);\nrows.sort((a, b) => Number(a.ordem) - Number(b.ordem));\n\nconst fmt = (n) => Number(Math.abs(n || 0)).toLocaleString('pt-BR', {\n  minimumFractionDigits: 2,\n  maximumFractionDigits: 2\n});\n\n// Define natureza (D ou C)\nfunction natureza(desc, valor) {\n  const d = String(desc || '').toUpperCase();\n  const v = Number(valor) || 0;\n  if (d.startsWith('ATIVO')) return v >= 0 ? 'D' : 'C';\n  if (d.startsWith('PASSIVO') || d.includes('PATRIMÔNIO')) return v >= 0 ? 'C' : 'D';\n  return v >= 0 ? 'D' : 'C';\n}\n\nconst isSection = (desc) => {\n  const d = String(desc || '').toUpperCase();\n  return d === 'ATIVO' || d === 'PASSIVO E PL' || d.includes('PATRIMÔNIO');\n};\n\n// Totais (seções)\nlet ativoIni=0, ativoFim=0, ativoDif=0, passIni=0, passFim=0, passDif=0;\nfor (const r of rows) {\n  const d = String(r.descricao || '').toUpperCase();\n  if (d === 'ATIVO') {\n    ativoIni += Number(r.saldo_inicial) || 0;\n    ativoFim += Number(r.saldo_final)   || 0;\n    ativoDif += Number(r.diferenca)     || 0;\n  } else if (d === 'PASSIVO E PL' || d.includes('PATRIMÔNIO')) {\n    passIni += Number(r.saldo_inicial) || 0;\n    passFim += Number(r.saldo_final)   || 0;\n    passDif += Number(r.diferenca)     || 0;\n  }\n}\nconst chkIni = ativoIni - passIni;\nconst chkFim = ativoFim - passFim;\nconst chkDif = ativoDif - passDif;\n\nconst geradoEm = new Date().toLocaleString('pt-BR');\n\nlet html = `<!DOCTYPE html>\n<html lang=\"pt-BR\">\n<head>\n<meta charset=\"UTF-8\">\n<title>Balanço Patrimonial</title>\n<style>\n  :root{ --primary:#1e88e5; --zebra:#f5f9ff; --border:#e5e9f2; --section:#f0f5ff; --total:#eef3fb; }\n  body{ font-family:\"Segoe UI\", Arial, sans-serif; padding:24px; }\n  header{ text-align:center; margin-bottom:14px; }\n  h1{ margin:0; font-size:20px; }\n  .sub{ color:#6b7a90; font-size:12px; }\n  table{ width:100%; border-collapse:collapse; font-size:12px; }\n  thead th{ background:var(--primary); color:#fff; padding:8px; }\n  td, th{ border:1px solid var(--border); padding:6px 10px; }\n  tbody tr:nth-child(even){ background:var(--zebra); }\n  .sec{ background:var(--section); font-weight:700; }\n  .num{ text-align:right; }\n  .tot{ background:var(--total); font-weight:700; }\n  .center{ text-align:center; }\n</style>\n</head>\n<body>\n<header>\n  <h1>Balanço Patrimonial</h1>\n  <div class=\"sub\">Gerado em ${geradoEm}</div>\n</header>\n<table>\n  <thead>\n    <tr>\n      <th>Descrição</th>\n      <th>Saldo inicial</th><th></th>\n      <th>Saldo final</th><th></th>\n      <th>Diferença</th><th></th>\n    </tr>\n  </thead>\n  <tbody>`;\n\nfor (const r of rows) {\n  const ini = Number(r.saldo_inicial) || 0;\n  const fim = Number(r.saldo_final)   || 0;\n  const dif = Number(r.diferenca)     || 0;\n  html += `\n    <tr class=\"${isSection(r.descricao)?'sec':''}\">\n      <td>${r.descricao}</td>\n      <td class=\"num\">${fmt(ini)}</td><td class=\"center\">${natureza(r.descricao, ini)}</td>\n      <td class=\"num\">${fmt(fim)}</td><td class=\"center\">${natureza(r.descricao, fim)}</td>\n      <td class=\"num\">${fmt(dif)}</td><td class=\"center\">${natureza(r.descricao, dif)}</td>\n    </tr>`;\n}\n\nhtml += `\n  </tbody>\n  <tfoot>\n    <tr class=\"tot\">\n      <td>Ativo (totais)</td>\n      <td class=\"num\">${fmt(ativoIni)}</td><td class=\"center\">${natureza('ATIVO', ativoIni)}</td>\n      <td class=\"num\">${fmt(ativoFim)}</td><td class=\"center\">${natureza('ATIVO', ativoFim)}</td>\n      <td class=\"num\">${fmt(ativoDif)}</td><td class=\"center\">${natureza('ATIVO', ativoDif)}</td>\n    </tr>\n    <tr class=\"tot\">\n      <td>Passivo + PL (totais)</td>\n      <td class=\"num\">${fmt(passIni)}</td><td class=\"center\">${natureza('PASSIVO E PL', passIni)}</td>\n      <td class=\"num\">${fmt(passFim)}</td><td class=\"center\">${natureza('PASSIVO E PL', passFim)}</td>\n      <td class=\"num\">${fmt(passDif)}</td><td class=\"center\">${natureza('PASSIVO E PL', passDif)}</td>\n    </tr>\n    <tr class=\"tot\">\n      <td>Checagem (Ativo − Passivo/PL)</td>\n      <td class=\"num\">${fmt(chkIni)}</td><td class=\"center\">${natureza('ATIVO', chkIni)}</td>\n      <td class=\"num\">${fmt(chkFim)}</td><td class=\"center\">${natureza('ATIVO', chkFim)}</td>\n      <td class=\"num\">${fmt(chkDif)}</td><td class=\"center\">${natureza('ATIVO', chkDif)}</td>\n    </tr>\n  </tfoot>\n</table>\n</body>\n</html>`;\n\nreturn [{ json: { html } }];\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[1008,1648],"id":"62b84006-9385-4e66-9a2e-b508d1bee425","name":"gerahtml2"},{"parameters":{"operation":"executeQuery","query":" select * from contab.vw_balanco_patrimonial;","options":{}},"type":"n8n-nodes-base.postgres","typeVersion":2.6,"position":[768,1648],"id":"b2652c40-1a1e-467d-8c58-3d80cc6175d3","name":"BalancoPatrimonial"},{"parameters":{},"type":"n8n-nodes-base.noOp","typeVersion":1,"position":[2160,1648],"id":"e0df270f-c825-436e-813b-0ef0faed9492","name":"No Operation, do nothing14","notes":"TEMPLATE DESENVOLVIDO POR NOCODE STARTUP\nhttps://nocodestartup.io/\n\nFORMAÇÃO GESTOR DE AGENTES DE IA:\nhttps://nocodestartup.io/formacao-gestor-agentes-ia/"},{"parameters":{},"type":"n8n-nodes-base.noOp","typeVersion":1,"position":[2128,1088],"id":"80213390-3bdc-4da0-8809-b221c01efd29","name":"No Operation, do nothing15","notes":"TEMPLATE DESENVOLVIDO POR NOCODE STARTUP\nhttps://nocodestartup.io/\n\nFORMAÇÃO GESTOR DE AGENTES DE IA:\nhttps://nocodestartup.io/formacao-gestor-agentes-ia/"},{"parameters":{},"type":"n8n-nodes-base.noOp","typeVersion":1,"position":[2144,1280],"id":"3ecdea85-13b5-4a93-aee5-363a79068ec3","name":"No Operation, do nothing16","notes":"TEMPLATE DESENVOLVIDO POR NOCODE STARTUP\nhttps://nocodestartup.io/\n\nFORMAÇÃO GESTOR DE AGENTES DE IA:\nhttps://nocodestartup.io/formacao-gestor-agentes-ia/"},{"parameters":{},"type":"n8n-nodes-base.noOp","typeVersion":1,"position":[2144,1472],"id":"8b7a173c-7ca8-4744-8729-fbf3c3456296","name":"No Operation, do nothing17","notes":"TEMPLATE DESENVOLVIDO POR NOCODE STARTUP\nhttps://nocodestartup.io/\n\nFORMAÇÃO GESTOR DE AGENTES DE IA:\nhttps://nocodestartup.io/formacao-gestor-agentes-ia/"},{"parameters":{"method":"POST","url":"https://gotenberggotenberg8-production-8d7d.up.railway.app/forms/chromium/convert/html","sendBody":true,"contentType":"multipart-form-data","bodyParameters":{"parameters":[{"parameterType":"formBinaryData","name":"files","inputDataFieldName":"file"}]},"options":{"response":{"response":{"responseFormat":"file","outputPropertyName":"der.pdf"}}}},"type":"n8n-nodes-base.httpRequest","typeVersion":4.2,"position":[1440,1840],"id":"2b95b917-fa69-40cf-af89-8e515c56d764","name":"HTTP Request10"},{"parameters":{"method":"POST","url":"=https://apinocode01.megaapi.com.br/rest/sendMessage/megacode-Mp5VTYM2qds/mediaBase64","sendHeaders":true,"headerParameters":{"parameters":[{"name":"Client-Token","value":"application/json"},{"name":"Authorization","value":"Bearer Mp5VTYM2qds"}]},"sendBody":true,"specifyBody":"json","jsonBody":"= {\n  \"messageData\": {\n    \"to\": \"5516992975836\",\n    \"type\": \"document\",\n    \"caption\": \"Segue DER\",\n    \"fileName\": \"{{ $node['gerahtml3'].json.fileName || 'der.pdf' }}\",\n    \"mimeType\": \"application/pdf\",\n    \"base64\": \"data:application/pdf;base64, {{ $json.base64 }}\"\n  }\n}\n ","options":{}},"id":"dc83b6a4-66e6-4a57-99ff-a54744e69a8f","name":"MegaApi6","type":"n8n-nodes-base.httpRequest","typeVersion":4.2,"position":[1920,1840]},{"parameters":{"jsCode":" // garante que entrou um item com binário\nconst item = items[0];\nconst bins = item.binary || {};\nconst keys = Object.keys(bins);\nif (!keys.length) {\n  throw new Error('Nenhum binário no input. No HTTP Request (Gotenberg), ative Download=ON e Response=File.');\n}\n\n// escolhe o PDF: por mimeType, por extensão .pdf, ou o primeiro\nconst pdfKey =\n  keys.find(k => (bins[k].mimeType || '').includes('pdf')) ||\n  keys.find(k => k.toLowerCase().endsWith('.pdf')) ||\n  keys[0];\n\nconst pdf = bins[pdfKey];\nif (!pdf) {\n  throw new Error('PDF não encontrado. Binários disponíveis: ' + keys.join(', '));\n}\n\n// nome do arquivo\nconst fileName = item.json.fileName || pdf.fileName || 'relatorio.pdf';\n\n// sai com base64 + fileName para o próximo nó\nreturn [{\n  json: {\n    base64: pdf.data,                 // JÁ é base64\n    fileName: fileName                // ex.: relatorio-2025-08-20.pdf\n  }\n}];\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[1712,1840],"id":"dea2d36e-4bda-4292-a741-8b8e688637b7","name":"Code14"},{"parameters":{"operation":"toText","sourceProperty":"html","binaryPropertyName":"=file","options":{"encoding":"utf8","fileName":"index.html"}},"type":"n8n-nodes-base.convertToFile","typeVersion":1.1,"position":[1216,1840],"id":"1805bea6-6e31-4429-aef5-008c76d3c65e","name":"Convert to File5"},{"parameters":{"jsCode":" // === Code node (Run Once for All Items) ===\n// Entrada: items -> [{ ordem, grupo, valor_mes, valor_acumulado }, ...]\n// Saída: { html } -> para Convert to File (ou Gotenberg)\n\nconst rows = items.map(i => i.json);\nrows.sort((a, b) => Number(a.ordem) - Number(b.ordem));\n\nconst fmt = (n) => Number(n || 0).toLocaleString('pt-BR', {\n  minimumFractionDigits: 2,\n  maximumFractionDigits: 2\n});\n\n// Identifica linhas de \"resultado\" para destacar\nconst isResultado = (grupo) => {\n  const g = String(grupo || '').toUpperCase();\n  return g.includes('RESULTADO') || g.includes('LUCRO') || g.includes('PREJU');\n};\n\nconst geradoEm = new Date().toLocaleString('pt-BR');\nconst titulo = 'Demonstração do Resultado do Exercício (DRE)';\nconst subtitulo = `Gerado em ${geradoEm}`;\n\nlet html = `<!DOCTYPE html>\n<html lang=\"pt-BR\">\n<head>\n<meta charset=\"UTF-8\">\n<title>${titulo}</title>\n<style>\n  :root{\n    --primary:#1e88e5; --zebra:#f5f9ff; --border:#e5e9f2;\n    --text:#2c3e50; --muted:#6b7a90; --total:#eef3fb;\n  }\n  body{ font-family:\"Segoe UI\", Arial, sans-serif; margin:0; padding:24px; color:var(--text);}\n  header{text-align:center; margin-bottom:16px;}\n  h1{ margin:0; font-size:20px; }\n  .sub{ color:var(--muted); font-size:12px; }\n  table{ width:100%; border-collapse:collapse; font-size:13px; }\n  thead th{ background:var(--primary); color:#fff; padding:8px; text-align:left; }\n  td, th{ border:1px solid var(--border); padding:6px 10px; }\n  tbody tr:nth-child(even){ background:var(--zebra); }\n  .num{ text-align:right; font-variant-numeric:tabular-nums; white-space:nowrap; }\n  .resultado{ background:var(--total); font-weight:700; }\n</style>\n</head>\n<body>\n<header>\n  <h1>${titulo}</h1>\n  <div class=\"sub\">${subtitulo}</div>\n</header>\n\n<table>\n  <thead>\n    <tr>\n      <th>Grupo</th>\n      <th>Valor do mês</th>\n      <th>Acumulado no ano</th>\n    </tr>\n  </thead>\n  <tbody>\n`;\n\nfor (const r of rows) {\n  const linhaClasse = isResultado(r.grupo) ? 'resultado' : '';\n  html += `\n    <tr class=\"${linhaClasse}\">\n      <td>${r.grupo}</td>\n      <td class=\"num\">${fmt(r.valor_mes)}</td>\n      <td class=\"num\">${fmt(r.valor_acumulado)}</td>\n    </tr>`;\n}\n\nhtml += `\n  </tbody>\n</table>\n</body>\n</html>`;\n\nreturn [{ json: { html } }];\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[1008,1840],"id":"1543f36a-d8b0-4be7-838f-5177ffd23d42","name":"gerahtml3"},{"parameters":{},"type":"n8n-nodes-base.noOp","typeVersion":1,"position":[2160,1840],"id":"5a766f72-cdec-43b2-928c-ebcd56a0ee86","name":"No Operation, do nothing18","notes":"TEMPLATE DESENVOLVIDO POR NOCODE STARTUP\nhttps://nocodestartup.io/\n\nFORMAÇÃO GESTOR DE AGENTES DE IA:\nhttps://nocodestartup.io/formacao-gestor-agentes-ia/"},{"parameters":{"operation":"executeQuery","query":" select * from contab.modelos ;","options":{}},"type":"n8n-nodes-base.postgres","typeVersion":2.6,"position":[768,2032],"id":"41ff8bff-df17-400d-bd1d-899b9424c4fc","name":"BalancoPatrimonial2"},{"parameters":{"method":"POST","url":"https://gotenberggotenberg8-production-8d7d.up.railway.app/forms/chromium/convert/html","sendBody":true,"contentType":"multipart-form-data","bodyParameters":{"parameters":[{"parameterType":"formBinaryData","name":"files","inputDataFieldName":"file"}]},"options":{"response":{"response":{"responseFormat":"file","outputPropertyName":"modelos.pdf"}}}},"type":"n8n-nodes-base.httpRequest","typeVersion":4.2,"position":[1440,2032],"id":"65c8d91a-9f94-4dd5-bf6d-4834b9ed7080","name":"HTTP Request11"},{"parameters":{"jsCode":" // garante que entrou um item com binário\nconst item = items[0];\nconst bins = item.binary || {};\nconst keys = Object.keys(bins);\nif (!keys.length) {\n  throw new Error('Nenhum binário no input. No HTTP Request (Gotenberg), ative Download=ON e Response=File.');\n}\n\n// escolhe o PDF: por mimeType, por extensão .pdf, ou o primeiro\nconst pdfKey =\n  keys.find(k => (bins[k].mimeType || '').includes('pdf')) ||\n  keys.find(k => k.toLowerCase().endsWith('.pdf')) ||\n  keys[0];\n\nconst pdf = bins[pdfKey];\nif (!pdf) {\n  throw new Error('PDF não encontrado. Binários disponíveis: ' + keys.join(', '));\n}\n\n// nome do arquivo\nconst fileName = item.json.fileName || pdf.fileName || 'relatorio.pdf';\n\n// sai com base64 + fileName para o próximo nó\nreturn [{\n  json: {\n    base64: pdf.data,                 // JÁ é base64\n    fileName: fileName                // ex.: relatorio-2025-08-20.pdf\n  }\n}];\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[1712,2032],"id":"3ac43b36-5922-43e1-8037-b919c68b9b8b","name":"Code15"},{"parameters":{"operation":"toText","sourceProperty":"html","binaryPropertyName":"=file","options":{"encoding":"utf8","fileName":"index.html"}},"type":"n8n-nodes-base.convertToFile","typeVersion":1.1,"position":[1216,2032],"id":"d28b9aa1-47e2-4002-9d8d-10fcba49aec5","name":"Convert to File6"},{"parameters":{"jsCode":" // === Code node (Run Once for All Items) ===\n// Entrada: items -> [{ codigo, nome, ativo }, ...]\n// Saída: { html } -> passe para Convert to File / Gotenberg\n\nconst rows = items.map(i => i.json);\n\n// ordena por nome (ou por código, se preferir)\nrows.sort((a, b) => String(a.nome||'').localeCompare(String(b.nome||''), 'pt-BR'));\n\nconst geradoEm = new Date().toLocaleString('pt-BR');\nconst titulo    = 'Modelos Contábeis';\nconst subtitulo = `Gerado em ${geradoEm}`;\n\nconst total       = rows.length;\nconst ativos      = rows.filter(r => String(r.ativo) === 'true' || r.ativo === true).length;\nconst inativos    = total - ativos;\n\nconst badge = (flag) =>\n  `<span class=\"badge ${flag ? 'ok' : 'off'}\">${flag ? 'Ativo' : 'Inativo'}</span>`;\n\nlet html = `<!DOCTYPE html>\n<html lang=\"pt-BR\">\n<head>\n<meta charset=\"UTF-8\">\n<title>${titulo}</title>\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\n<style>\n  :root{\n    --primary:#1e88e5; --zebra:#f7fbff; --border:#e6edf4; --text:#2c3e50; --muted:#6b7a90;\n    --ok:#0f9d58; --off:#c0392b; --chip:#eef3fb;\n  }\n  @page { margin: 18mm 12mm; }\n  *{ box-sizing:border-box; }\n  body{ font-family:\"Segoe UI\",Arial,sans-serif; color:var(--text); margin:0; padding:24px; }\n  header{ text-align:center; margin-bottom:16px; }\n  h1{ margin:0 0 4px 0; font-size:20px; font-weight:700; }\n  .sub{ color:var(--muted); font-size:12px; }\n  .chips{ display:flex; gap:8px; justify-content:center; margin-top:6px; }\n  .chip{ background:var(--chip); border:1px solid var(--border); border-radius:999px; padding:4px 10px; font-size:12px; }\n  table{ width:100%; border-collapse:collapse; font-size:13px; margin-top:14px; }\n  thead th{\n    background:var(--primary); color:#fff; padding:9px 10px; text-align:left; border:1px solid var(--primary);\n  }\n  tbody td{ border:1px solid var(--border); padding:8px 10px; vertical-align:top; }\n  tbody tr:nth-child(even){ background:var(--zebra); }\n  .codigo{ width:160px; font-family:ui-monospace, SFMono-Regular, Menlo, Consolas, \"Liberation Mono\", monospace; }\n  .nome{ width:auto; }\n  .status{ width:120px; text-align:center; }\n  .badge{\n    display:inline-block; min-width:64px; text-align:center;\n    padding:3px 8px; border-radius:999px; font-size:12px; font-weight:600;\n    border:1px solid;\n  }\n  .badge.ok{ color:var(--ok); border-color:var(--ok); background:#e9f7f0; }\n  .badge.off{ color:var(--off); border-color:var(--off); background:#fdecea; }\n</style>\n</head>\n<body>\n<header>\n  <h1>${titulo}</h1>\n  <div class=\"sub\">${subtitulo}</div>\n  <div class=\"chips\">\n    <div class=\"chip\">Total: <strong>${total}</strong></div>\n    <div class=\"chip\">Ativos: <strong>${ativos}</strong></div>\n    <div class=\"chip\">Inativos: <strong>${inativos}</strong></div>\n  </div>\n</header>\n\n<table>\n  <thead>\n    <tr>\n      <th>Código</th>\n      <th>Nome</th>\n      <th>Status</th>\n    </tr>\n  </thead>\n  <tbody>\n`;\n\nfor (const r of rows) {\n  const ativo = (String(r.ativo) === 'true' || r.ativo === true);\n  html += `\n    <tr>\n      <td class=\"codigo\">${r.codigo ?? ''}</td>\n      <td class=\"nome\">${r.nome ?? ''}</td>\n      <td class=\"status\">${badge(ativo)}</td>\n    </tr>`;\n}\n\nhtml += `\n  </tbody>\n</table>\n</body>\n</html>`;\n\nreturn [{ json: { html } }];\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[1008,2032],"id":"8781adc4-6daa-47be-aafa-dec14f7501d1","name":"gerahtml4"},{"parameters":{},"type":"n8n-nodes-base.noOp","typeVersion":1,"position":[2160,2032],"id":"1cdaf9c4-55c8-4878-af6d-10bf73cfe864","name":"No Operation, do nothing19","notes":"TEMPLATE DESENVOLVIDO POR NOCODE STARTUP\nhttps://nocodestartup.io/\n\nFORMAÇÃO GESTOR DE AGENTES DE IA:\nhttps://nocodestartup.io/formacao-gestor-agentes-ia/"},{"parameters":{"method":"POST","url":"=https://apinocode01.megaapi.com.br/rest/sendMessage/megacode-Mp5VTYM2qds/mediaBase64","sendHeaders":true,"headerParameters":{"parameters":[{"name":"Client-Token","value":"application/json"},{"name":"Authorization","value":"Bearer Mp5VTYM2qds"}]},"sendBody":true,"specifyBody":"json","jsonBody":"= {\n  \"messageData\": {\n    \"to\": \"5516992975836\",\n    \"type\": \"document\",\n    \"caption\": \"Segue relatório de modelos\",\n    \"fileName\": \"{{ $node['gerahtml4'].json.fileName || 'modelos.pdf' }}\",\n    \"mimeType\": \"application/pdf\",\n    \"base64\": \"data:application/pdf;base64, {{ $json.base64 }}\"\n  }\n}\n ","options":{}},"id":"3c00d457-d12b-49d6-a036-89867db51adf","name":"MegaApi7","type":"n8n-nodes-base.httpRequest","typeVersion":4.2,"position":[1920,2032]},{"parameters":{"method":"POST","url":"https://gotenberggotenberg8-production-8d7d.up.railway.app/forms/chromium/convert/html","sendBody":true,"contentType":"multipart-form-data","bodyParameters":{"parameters":[{"parameterType":"formBinaryData","name":"files","inputDataFieldName":"file"}]},"options":{"response":{"response":{"responseFormat":"file","outputPropertyName":"=modelo.pdf"}}}},"type":"n8n-nodes-base.httpRequest","typeVersion":4.2,"position":[1440,2224],"id":"dba1e330-f724-4408-9c30-e8e0054f1a42","name":"HTTP Request12"},{"parameters":{"jsCode":" // garante que entrou um item com binário\nconst item = items[0];\nconst bins = item.binary || {};\nconst keys = Object.keys(bins);\nif (!keys.length) {\n  throw new Error('Nenhum binário no input. No HTTP Request (Gotenberg), ative Download=ON e Response=File.');\n}\n\n// escolhe o PDF: por mimeType, por extensão .pdf, ou o primeiro\nconst pdfKey =\n  keys.find(k => (bins[k].mimeType || '').includes('pdf')) ||\n  keys.find(k => k.toLowerCase().endsWith('.pdf')) ||\n  keys[0];\n\nconst pdf = bins[pdfKey];\nif (!pdf) {\n  throw new Error('PDF não encontrado. Binários disponíveis: ' + keys.join(', '));\n}\n\n// nome do arquivo\nconst fileName = item.json.fileName || pdf.fileName || 'relatorio.pdf';\n\n// sai com base64 + fileName para o próximo nó\nreturn [{\n  json: {\n    base64: pdf.data,                 // JÁ é base64\n    fileName: fileName                // ex.: relatorio-2025-08-20.pdf\n  }\n}];\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[1712,2224],"id":"59f41940-88be-4e9e-95fd-a235a8f0b291","name":"Code16"},{"parameters":{"operation":"toText","sourceProperty":"html","binaryPropertyName":"=file","options":{"encoding":"utf8","fileName":"index.html"}},"type":"n8n-nodes-base.convertToFile","typeVersion":1.1,"position":[1216,2224],"id":"19a3b4d9-4e9b-41ea-aa30-c4b1a23a7f4a","name":"Convert to File7"},{"parameters":{"jsCode":" // === Code node (Run Once for All Items) ===\n// Entrada: items -> [{ modelo, ordem, conta, dc, fonte_valor, valor_fixo, fator, obrigatorio }, ...]\n// Saída: { html }  -> passe para Convert to File / Gotenberg\n\nconst rows = items.map(i => i.json);\n\n// ordena: modelo A..Z e ordem crescente\nrows.sort((a,b)=>{\n  const m = String(a.modelo||'').localeCompare(String(b.modelo||''), 'pt-BR');\n  if (m !== 0) return m;\n  return Number(a.ordem||0) - Number(b.ordem||0);\n});\n\n// agrupa por modelo\nconst grupos = new Map();\nfor (const r of rows) {\n  const key = r.modelo ?? '(sem modelo)';\n  if (!grupos.has(key)) grupos.set(key, []);\n  grupos.get(key).push(r);\n}\n\nconst fmt2 = (n) => {\n  if (n === null || n === undefined || n === '') return '';\n  const v = Number(n);\n  if (Number.isNaN(v)) return String(n);\n  return v.toLocaleString('pt-BR', { minimumFractionDigits: 2, maximumFractionDigits: 6 });\n};\nconst yesno = (b) => (String(b)==='true' || b===true) ? 'Obrigatório' : 'Opcional';\n\nconst badgeDC = (dc) => {\n  const d = String(dc||'').toUpperCase().trim();\n  if (d === 'D') return `<span class=\"badge deb\">D&eacute;bito</span>`;\n  if (d === 'C') return `<span class=\"badge cred\">Cr&eacute;dito</span>`;\n  return `<span class=\"badge mute\">${dc ?? '-'}</span>`;\n};\nconst badgeObr = (flag) => {\n  const on = (String(flag)==='true' || flag===true);\n  return `<span class=\"badge ${on?'ok':'off'}\">${on?'Obrigatório':'Opcional'}</span>`;\n};\n\nconst geradoEm = new Date().toLocaleString('pt-BR');\nconst titulo = 'Modelos → Linhas (Plano de Contas)';\n\nlet html = `<!DOCTYPE html>\n<html lang=\"pt-BR\">\n<head>\n<meta charset=\"UTF-8\">\n<title>${titulo}</title>\n<meta http-equiv=\"Content-Type\" content=\"text/html; charset=UTF-8\">\n<style>\n  :root{\n    --primary:#1e88e5; --zebra:#f7fbff; --border:#e6edf4; --text:#2c3e50; --muted:#6b7a90;\n    --ok:#0f9d58; --off:#c0392b; --deb:#1565c0; --cred:#8e24aa; --chip:#eef3fb;\n  }\n  @page { margin: 18mm 12mm; }\n  *{ box-sizing:border-box; }\n  body{ font-family:\"Segoe UI\",Arial,sans-serif; color:var(--text); margin:0; padding:24px; }\n  header{ text-align:center; margin-bottom:12px; }\n  h1{ margin:0 0 4px 0; font-size:20px; font-weight:800; letter-spacing:.2px; }\n  .sub{ color:var(--muted); font-size:12px; }\n  .chips{ display:flex; gap:8px; justify-content:center; flex-wrap:wrap; margin-top:6px; }\n  .chip{ background:var(--chip); border:1px solid var(--border); border-radius:999px; padding:4px 10px; font-size:12px; }\n  .toc{ display:flex; gap:8px; flex-wrap:wrap; margin:14px 0 0; justify-content:center; }\n  .toc a{ text-decoration:none; color:var(--primary); border:1px solid var(--border); padding:4px 10px; border-radius:999px; font-size:12px; }\n  section{ margin-top:18px; page-break-inside:avoid; }\n  h2{ font-size:15px; margin:0 0 6px 0; display:flex; align-items:center; gap:8px; }\n  .tag{ font-size:11px; color:#fff; background:var(--primary); padding:2px 8px; border-radius:999px; }\n  table{ width:100%; border-collapse:collapse; font-size:12.5px; margin-top:8px; }\n  thead th{ background:var(--primary); color:#fff; padding:8px 10px; text-align:left; border:1px solid var(--primary); }\n  tbody td{ border:1px solid var(--border); padding:7px 10px; vertical-align:top; }\n  tbody tr:nth-child(even){ background:var(--zebra); }\n  .num{ text-align:right; font-variant-numeric:tabular-nums; white-space:nowrap; }\n  .mono{ font-family:ui-monospace, SFMono-Regular, Menlo, Consolas, \"Liberation Mono\", monospace; }\n  .badge{\n    display:inline-block; min-width:80px; text-align:center;\n    padding:3px 8px; border-radius:999px; font-size:11.5px; font-weight:700; border:1px solid;\n  }\n  .badge.deb{ color:var(--deb);  border-color:var(--deb);  background:#e8f1ff; }\n  .badge.cred{ color:var(--cred); border-color:var(--cred); background:#f3e8f8; }\n  .badge.ok{ color:var(--ok); border-color:var(--ok); background:#e9f7f0; }\n  .badge.off{ color:var(--off); border-color:var(--off); background:#fdecea; }\n  .badge.mute{ color:var(--muted); border-color:var(--border); background:#fafbfc; }\n  footer{ margin-top:16px; color:var(--muted); font-size:11px; text-align:center; }\n</style>\n</head>\n<body>\n<header>\n  <h1>${titulo}</h1>\n  <div class=\"sub\">Gerado em ${geradoEm}</div>\n  <div class=\"chips\">\n    <div class=\"chip\">Modelos: <strong>${grupos.size}</strong></div>\n    <div class=\"chip\">Linhas totais: <strong>${rows.length}</strong></div>\n  </div>\n  <div class=\"toc\">\n    ${[...grupos.keys()].map((m,i)=>`<a href=\"#m${i}\">${m}</a>`).join('')}\n  </div>\n</header>\n`;\n\n// seções por modelo\nlet idx = 0;\nfor (const [modelo, linhas] of grupos.entries()) {\n  html += `\n  <section id=\"m${idx++}\">\n    <h2><span class=\"tag\">${linhas.length} linha${linhas.length>1?'s':''}</span> ${modelo}</h2>\n    <table>\n      <thead>\n        <tr>\n          <th style=\"width:70px\">Ordem</th>\n          <th style=\"width:120px\">Conta</th>\n          <th style=\"width:110px\">D/C</th>\n          <th>Fonte do valor</th>\n          <th style=\"width:120px\" class=\"num\">Valor fixo</th>\n          <th style=\"width:90px\" class=\"num\">Fator</th>\n          <th style=\"width:120px\">Obrigatório</th>\n        </tr>\n      </thead>\n      <tbody>\n        ${linhas.map(r=>`\n          <tr>\n            <td class=\"num\">${Number(r.ordem||0)}</td>\n            <td class=\"mono\">${r.conta ?? ''}</td>\n            <td>${badgeDC(r.dc)}</td>\n            <td class=\"mono\">${r.fonte_valor ?? ''}</td>\n            <td class=\"num\">${fmt2(r.valor_fixo)}</td>\n            <td class=\"num\">${fmt2(r.fator ?? 1)}</td>\n            <td>${badgeObr(r.obrigatorio)}</td>\n          </tr>\n        `).join('')}\n      </tbody>\n    </table>\n  </section>`;\n}\n\nhtml += `\n<footer>\n  D/C = natureza da partida. \"Fonte do valor\" indica qual campo do lançamento abastece a linha (ex.: valor_total, valor_custo, valor_imposto).\n</footer>\n</body>\n</html>`;\n\nreturn [{ json: { html } }];\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[1008,2224],"id":"faea6e27-d7fe-4592-9dd8-03cd711206dd","name":"gerahtml5"},{"parameters":{},"type":"n8n-nodes-base.noOp","typeVersion":1,"position":[2160,2224],"id":"64d9c77e-3036-4cb2-b4e0-0cbbfe69e003","name":"No Operation, do nothing20","notes":"TEMPLATE DESENVOLVIDO POR NOCODE STARTUP\nhttps://nocodestartup.io/\n\nFORMAÇÃO GESTOR DE AGENTES DE IA:\nhttps://nocodestartup.io/formacao-gestor-agentes-ia/"},{"parameters":{"method":"POST","url":"=https://apinocode01.megaapi.com.br/rest/sendMessage/megacode-Mp5VTYM2qds/mediaBase64","sendHeaders":true,"headerParameters":{"parameters":[{"name":"Client-Token","value":"application/json"},{"name":"Authorization","value":"Bearer Mp5VTYM2qds"}]},"sendBody":true,"specifyBody":"json","jsonBody":"= {\n  \"messageData\": {\n    \"to\": \"5516992975836\",\n    \"type\": \"document\",\n    \"caption\": \"Segue relatório de modelos\",\n    \"fileName\": \"{{ $node['gerahtml5'].json.fileName || 'modelos.pdf' }}\",\n    \"mimeType\": \"application/pdf\",\n    \"base64\": \"data:application/pdf;base64, {{ $json.base64 }}\"\n  }\n}\n ","options":{}},"id":"b41586a1-3df8-44ed-bf87-55c96949b78b","name":"MegaApi8","type":"n8n-nodes-base.httpRequest","typeVersion":4.2,"position":[1920,2224]},{"parameters":{"operation":"executeQuery","query":" select * from contab.vw_dre_ytd  ;","options":{}},"type":"n8n-nodes-base.postgres","typeVersion":2.6,"position":[768,1840],"id":"56245e09-8bd1-40f7-a091-654f4d35aca2","name":"dre_ytd"},{"parameters":{"operation":"executeQuery","query":"  SELECT\n  mo.codigo  AS modelo,\n  ml.ordem,\n  co.codigo  AS conta,\n  ml.dc, \n \n  ml.obrigatorio\nFROM contab.modelos_linhas ml\nJOIN contab.modelos mo ON mo.id = ml.modelo_id\nJOIN contab.contas  co ON co.id = ml.conta_id\nORDER BY mo.codigo, ml.ordem;","options":{}},"type":"n8n-nodes-base.postgres","typeVersion":2.6,"position":[768,2224],"id":"1f9d8084-4c4f-429a-9af8-e749f3884753","name":"ModeloToken"},{"parameters":{"method":"POST","url":"https://gotenberggotenberg8-production-8d7d.up.railway.app/forms/chromium/convert/html","sendBody":true,"contentType":"multipart-form-data","bodyParameters":{"parameters":[{"parameterType":"formBinaryData","name":"files","inputDataFieldName":"file"}]},"options":{"response":{"response":{"responseFormat":"file","outputPropertyName":"=resumo_executivo.pdf"}}}},"type":"n8n-nodes-base.httpRequest","typeVersion":4.2,"position":[1456,2416],"id":"5e77a325-f3ad-4002-989f-7778494e5896","name":"HTTP Request13"},{"parameters":{"jsCode":" // garante que entrou um item com binário\nconst item = items[0];\nconst bins = item.binary || {};\nconst keys = Object.keys(bins);\nif (!keys.length) {\n  throw new Error('Nenhum binário no input. No HTTP Request (Gotenberg), ative Download=ON e Response=File.');\n}\n\n// escolhe o PDF: por mimeType, por extensão .pdf, ou o primeiro\nconst pdfKey =\n  keys.find(k => (bins[k].mimeType || '').includes('pdf')) ||\n  keys.find(k => k.toLowerCase().endsWith('.pdf')) ||\n  keys[0];\n\nconst pdf = bins[pdfKey];\nif (!pdf) {\n  throw new Error('PDF não encontrado. Binários disponíveis: ' + keys.join(', '));\n}\n\n// nome do arquivo\nconst fileName = item.json.fileName || pdf.fileName || 'relatorio.pdf';\n\n// sai com base64 + fileName para o próximo nó\nreturn [{\n  json: {\n    base64: pdf.data,                 // JÁ é base64\n    fileName: fileName                // ex.: relatorio-2025-08-20.pdf\n  }\n}];\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[1712,2416],"id":"4c854309-d259-477c-b89e-6263ea5c9856","name":"Code17"},{"parameters":{"operation":"toText","sourceProperty":"html","binaryPropertyName":"=file","options":{"encoding":"utf8","fileName":"index.html"}},"type":"n8n-nodes-base.convertToFile","typeVersion":1.1,"position":[1216,2416],"id":"518c1093-b074-4d96-abc7-19798025d10d","name":"Convert to File8"},{"parameters":{"jsCode":" // === Code node (Run Once for All Items) ===\n// Entrada: 1 item com campos: ano, mes, receita_liquida, cmv_csp, margem_bruta (opcional),\n//          margem_contribuicao, despesa_fixa, resultado_operacional, resultado_liquido,\n//          margem_liquida_pct, liquidez_aprox, endividamento_aprox, empresa_nome (opcional)\n// Saída:   [{ json: { html } }]\n\nconst src = (items[0] || {}).json || {};\n\n// Utils\nfunction num(x){\n  if (x === null || x === undefined) return null;\n  if (typeof x === 'number') return x;\n  const s = String(x).replace(/[^0-9+\\-.,]/g, '').replace(/\\.(?=.*\\.)/g, '').replace(',', '.');\n  const n = parseFloat(s);\n  return Number.isNaN(n) ? null : n;\n}\nconst fmt$ = new Intl.NumberFormat('pt-BR', { style:'currency', currency:'BRL' });\nconst fmtN = new Intl.NumberFormat('pt-BR');\nconst fmtBR = (n) => (n==null || !isFinite(n)) ? '-' : fmt$.format(n);\nfunction fmtPctMaybeFrac(v){\n  let n = num(v);\n  if (n == null || !isFinite(n)) return '-';\n  if (n <= 1.5) n *= 100; // aceita fração (0.085 = 8.5%)\n  return String(n.toFixed(1)).replace('.', ',') + '%';\n}\nconst clamp01 = (x) => (!isFinite(x) ? 0 : Math.max(0, Math.min(1, x)));\n\nconst empresa = src.empresa_nome || 'Minha Empresa';\nconst ano     = src.ano ?? '';\nconst mes     = src.mes ?? '';\n\nconst receita = num(src.receita_liquida);\nconst cmv     = num(src.cmv_csp);\nconst mBruta  = num(src.margem_bruta);\nconst mContr  = num(src.margem_contribuicao);\nconst dFixa   = num(src.despesa_fixa);\nconst rOper   = num(src.resultado_operacional);\nconst rLiq    = num(src.resultado_liquido);\nconst liq     = num(src.liquidez_aprox);\nconst endiv   = num(src.endividamento_aprox);\n\n// Derivados\nlet pe = null, ating = null;\nif (receita > 0 && mContr > 0) {\n  const taxaMC = mContr / receita;        // % de MC sobre Receita\n  pe = dFixa / taxaMC;                    // Ponto de Equilíbrio\n  if (isFinite(pe) && pe > 0) ating = receita / pe;\n}\n\n// Despesa Variável (aprox): rec - CMV - MC  (pois MC = rec - CMV - Var)\nlet dVar = null;\nif (receita != null && cmv != null && mContr != null) {\n  dVar = receita - cmv - mContr;\n}\n\n// Barras % (sobre receita)\nlet pCMV=0, pVar=0, pFix=0;\nif (receita > 0) {\n  pCMV = clamp01(cmv/receita)*100;\n  pFix = clamp01(dFixa/receita)*100;\n  pVar = clamp01((dVar ?? 0)/receita)*100;\n  const soma = pCMV + pVar + pFix;\n  if (soma > 100) { const k = 100/soma; pCMV*=k; pVar*=k; pFix*=k; }\n}\n\n// Alertas\nconst alertas = [];\nif (mContr != null && mContr < 0) alertas.push('Margem de contribuição negativa.');\nif (rLiq  != null && rLiq  < 0) alertas.push('Resultado líquido negativo.');\nif (!(receita > 0))            alertas.push('Receita líquida zero/negativa.');\nif (liq != null && isFinite(liq) && liq < 1) alertas.push('Liquidez < 1,0.');\nconst alertasTxt = alertas.length ? alertas.join(' ') : 'Sem alertas críticos no período.';\nconst classeResultado = (rLiq > 0) ? 'ok' : (rLiq < 0 ? 'bad' : '');\n\nconst nowBR = new Date().toLocaleString('pt-BR', { day:'2-digit', month:'2-digit', year:'numeric', hour:'2-digit', minute:'2-digit' });\n\n// === HTML (tema escuro, leve) ===\nconst css = `\nbody{font-family:system-ui,-apple-system,Segoe UI,Roboto,Arial;margin:0;background:#0f172a;color:#e5e7eb}\n.wrap{padding:24px}\nheader{display:flex;justify-content:space-between;align-items:center;margin-bottom:18px;border-bottom:1px solid #1f2937;padding-bottom:12px}\n.brand{font-weight:700;letter-spacing:.3px;color:#f9fafb}\n.period,.muted{color:#9ca3af}\n.badge{background:#1f2937;border:1px solid #1f2937;border-radius:999px;padding:4px 8px;font-size:12px}\n.g{display:grid;gap:12px;grid-template-columns:repeat(4,1fr)}\n.c{background:#111827;border:1px solid #1f2937;border-radius:14px;padding:14px;min-height:88px}\n.t{margin:0 0 6px 0;font-size:12px;color:#9ca3af;text-transform:uppercase;letter-spacing:.06em}\n.v{font-size:20px;font-weight:700;color:#f9fafb}\n.ok{color:#16a34a}.bad{color:#dc2626}.warn{color:#ea580c}\n.row{display:flex;gap:12px}.col{flex:1}\n.bar{height:10px;background:#0b122a;border-radius:999px;overflow:hidden;border:1px solid #1f2937}\n.b1,.b2,.b3{display:block;height:100%}.b1{background:#7c3aed}.b2{background:#2563eb}.b3{background:#f59e0b}\ntable{width:100%;border-collapse:collapse;font-size:12px}\nth,td{border-bottom:1px solid #1f2937;padding:8px;text-align:left}\nth{color:#9ca3af;text-transform:uppercase;font-size:11px}\nfooter{margin-top:16px;color:#6b7280;font-size:12px}\n`;\n\nconst html = `<!doctype html><html lang=\"pt-BR\"><head><meta charset=\"utf-8\"><meta name=\"viewport\" content=\"width=device-width,initial-scale=1\"><title>Resumo Executivo – ${empresa} – ${String(mes).padStart(2,'0')}/${ano}</title><style>${css}</style></head><body><div class=\"wrap\"><header><div><div class=\"brand\">Resumo Executivo – ${empresa}</div><div class=\"period\">Competência: ${String(mes).padStart(2,'0')}/${ano}</div></div><div class=\"badge\">Gerado em ${nowBR}</div></header><section class=\"g\"><div class=\"c\"><div class=\"t\">Receita Líquida</div><div class=\"v\">${fmtBR(receita)}</div><div class=\"muted\" style=\"font-size:12px\">DRE Gerencial</div></div><div class=\"c\"><div class=\"t\">Resultado Líquido</div><div class=\"v ${classeResultado}\">${fmtBR(rLiq)}</div><div class=\"muted\" style=\"font-size:12px\">Margem líquida: <b>${fmtPctMaybeFrac(src.margem_liquida_pct)}</b></div></div><div class=\"c\"><div class=\"t\">Margem de Contribuição</div><div class=\"v\">${fmtBR(mContr)}</div><div class=\"muted\" style=\"font-size:12px\">= Receita Líq − CMV − Desp. Variáveis</div></div><div class=\"c\"><div class=\"t\">Ponto de Equilíbrio</div><div class=\"v\">${pe?fmtBR(pe):'-'}</div><div class=\"muted\" style=\"font-size:12px\">Atingimento: <b>${ating?String((ating*100).toFixed(0)).replace('.',',')+'%':'-'}</b></div></div></section><section class=\"row\" style=\"margin-top:16px\"><div class=\"col c\"><div class=\"t\">Estrutura de Custos/Despesas sobre Receita</div><div class=\"bar\"><span class=\"b1\" style=\"width:${Math.round(pCMV)}%\"></span></div><div class=\"bar\" style=\"margin-top:6px\"><span class=\"b2\" style=\"width:${Math.round(pVar)}%\"></span></div><div class=\"bar\" style=\"margin-top:6px\"><span class=\"b3\" style=\"width:${Math.round(pFix)}%\"></span></div><div class=\"muted\" style=\"font-size:12px;margin-top:6px\">CMV: ${fmtBR(cmv)} • Fixas: ${fmtBR(dFixa)}${dVar!=null?` • Variáveis (aprox): ${fmtBR(dVar)}`:''}</div></div><div class=\"col c\"><div class=\"t\">Indicadores Financeiros</div><div class=\"badge\">Liquidez: <b>${(liq==null||!isFinite(liq))?'-':String(liq.toFixed(2)).replace('.',',')}</b></div> <div class=\"badge\">Endividamento: <b>${(endiv==null||!isFinite(endiv))?'-':String(endiv.toFixed(2)).replace('.',',')}</b></div><div class=\"muted\" style=\"font-size:12px;margin-top:6px\">Valores aproximados por variação mensal.</div></div></section><section class=\"c\" style=\"margin-top:16px\"><div class=\"t\">DRE Gerencial (Síntese)</div><table><thead><tr><th>Grupo</th><th>Valor</th></tr></thead><tbody>${mBruta!=null?`<tr><td>Margem Bruta</td><td>${fmtBR(mBruta)}</td></tr>`:''}<tr><td>Receita Líquida</td><td>${fmtBR(receita)}</td></tr><tr><td>CMV/CSP</td><td>${fmtBR(cmv)}</td></tr>${dVar!=null?`<tr><td>Despesas Variáveis (aprox.)</td><td>${fmtBR(dVar)}</td></tr>`:''}<tr><td>Margem de Contribuição</td><td>${fmtBR(mContr)}</td></tr><tr><td>Despesas Fixas</td><td>${fmtBR(dFixa)}</td></tr><tr><td>Resultado Operacional</td><td>${fmtBR(rOper)}</td></tr><tr><td><b>Resultado Líquido</b></td><td><b>${fmtBR(rLiq)}</b></td></tr></tbody></table></section><section class=\"c\" style=\"margin-top:16px\"><div class=\"t\">Alertas</div><div class=\"muted\" style=\"line-height:1.6;font-size:12px\">${alertasTxt}</div></section><footer>Fonte: schema <b>contab</b> – vw_resumo_executivo / vw_dre_gerencial / sp_resumo_gerencial.</footer></div></body></html>`;\n\nreturn [{ json: { html } }];\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[992,2416],"id":"8d975563-0a4b-49bd-a76d-0fd3e7090396","name":"gerahtml6"},{"parameters":{},"type":"n8n-nodes-base.noOp","typeVersion":1,"position":[2160,2416],"id":"96dbbaf6-7099-4967-a092-9c662cb72007","name":"No Operation, do nothing21","notes":"TEMPLATE DESENVOLVIDO POR NOCODE STARTUP\nhttps://nocodestartup.io/\n\nFORMAÇÃO GESTOR DE AGENTES DE IA:\nhttps://nocodestartup.io/formacao-gestor-agentes-ia/"},{"parameters":{"method":"POST","url":"=https://apinocode01.megaapi.com.br/rest/sendMessage/megacode-Mp5VTYM2qds/mediaBase64","sendHeaders":true,"headerParameters":{"parameters":[{"name":"Client-Token","value":"application/json"},{"name":"Authorization","value":"Bearer Mp5VTYM2qds"}]},"sendBody":true,"specifyBody":"json","jsonBody":"= {\n  \"messageData\": {\n    \"to\": \"5516992975836\",\n    \"type\": \"document\",\n    \"caption\": \"Segue relatório de modelos\",\n    \"fileName\": \"{{ $node['gerahtml6'].json.fileName || 'resumo_executivo.pdf' }}\",\n    \"mimeType\": \"application/pdf\",\n    \"base64\": \"data:application/pdf;base64, {{ $json.base64 }}\"\n  }\n}\n ","options":{}},"id":"ac0a8875-75c9-4f75-a58e-dc192b0ee858","name":"MegaApi9","type":"n8n-nodes-base.httpRequest","typeVersion":4.2,"position":[1920,2416]},{"parameters":{"operation":"executeQuery","query":"  -- Resumo 1 página do mês atual\nSELECT *\nFROM contab.vw_resumo_executivo\nWHERE ano = EXTRACT(YEAR FROM CURRENT_DATE)::int\n  AND mes = EXTRACT(MONTH FROM CURRENT_DATE)::int;","options":{}},"type":"n8n-nodes-base.postgres","typeVersion":2.6,"position":[768,2416],"id":"141bfe86-8e57-4793-8dad-cc93fdc983d3","name":"resumeexecutivo"},{"parameters":{"method":"POST","url":"https://gotenberggotenberg8-production-8d7d.up.railway.app/forms/chromium/convert/html","sendBody":true,"contentType":"multipart-form-data","bodyParameters":{"parameters":[{"parameterType":"formBinaryData","name":"files","inputDataFieldName":"file"}]},"options":{"response":{"response":{"responseFormat":"file","outputPropertyName":"=dre_gerencial.pdf"}}}},"type":"n8n-nodes-base.httpRequest","typeVersion":4.2,"position":[1456,2624],"id":"72f39edc-c9c1-4019-a0f4-9698cf0f1169","name":"HTTP Request14"},{"parameters":{"jsCode":" // garante que entrou um item com binário\nconst item = items[0];\nconst bins = item.binary || {};\nconst keys = Object.keys(bins);\nif (!keys.length) {\n  throw new Error('Nenhum binário no input. No HTTP Request (Gotenberg), ative Download=ON e Response=File.');\n}\n\n// escolhe o PDF: por mimeType, por extensão .pdf, ou o primeiro\nconst pdfKey =\n  keys.find(k => (bins[k].mimeType || '').includes('pdf')) ||\n  keys.find(k => k.toLowerCase().endsWith('.pdf')) ||\n  keys[0];\n\nconst pdf = bins[pdfKey];\nif (!pdf) {\n  throw new Error('PDF não encontrado. Binários disponíveis: ' + keys.join(', '));\n}\n\n// nome do arquivo\nconst fileName = item.json.fileName || pdf.fileName || 'relatorio.pdf';\n\n// sai com base64 + fileName para o próximo nó\nreturn [{\n  json: {\n    base64: pdf.data,                 // JÁ é base64\n    fileName: fileName                // ex.: relatorio-2025-08-20.pdf\n  }\n}];\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[1712,2624],"id":"ddc08e4c-a80b-4d3c-af87-60f0b019d389","name":"Code18"},{"parameters":{"operation":"toText","sourceProperty":"html","binaryPropertyName":"=file","options":{"encoding":"utf8","fileName":"index.html"}},"type":"n8n-nodes-base.convertToFile","typeVersion":1.1,"position":[1216,2624],"id":"694abead-75d7-4f62-b25c-4c9208264596","name":"Convert to File9"},{"parameters":{"jsCode":" // === Code node (Run Once for All Items) ===\n// Entrada: 1 item por mês com campos: ano, mes, empresa_nome(opc),\n// receita_liquida, receita_bruta(opc), cmv_csp, despesa_variavel(opc),\n// margem_contribuicao(opc), despesa_fixa, resultado_operacional, imposto_sobre_lucro(opc),\n// resultado_liquido\n// Saída: [{ json: { html } }]\n\nconst rowsIn = items.map(i => i.json || {}).filter(r => r?.ano!=null && r?.mes!=null);\nif (!rowsIn.length) {\n  return [{ json: { html: '<!doctype html><meta charset=\"utf-8\"><body style=\"font-family:system-ui;margin:24px\">Sem dados.</body>' } }];\n}\n\n// helpers\nfunction num(x){ if(x==null) return null; if(typeof x==='number') return x;\n  const s=String(x).replace(/[^0-9+\\-.,]/g,'').replace(/\\.(?=.*\\.)/g,'').replace(',', '.'); const n=parseFloat(s); return Number.isNaN(n)?null:n; }\nconst fmt$ = new Intl.NumberFormat('pt-BR',{style:'currency',currency:'BRL'});\nconst fmtBR = n => (n==null||!isFinite(n))?'-':fmt$.format(n);\nconst clamp01 = x => (!isFinite(x)?0:Math.max(0,Math.min(1,x)));\nconst pctTxt = f => (f==null||!isFinite(f))?'-':( (f*100).toFixed(1).replace('.',',') + '%' );\nconst ym = (y,m)=> `${String(m).padStart(2,'0')}/${y}`;\n\n// ordena e limita (12)\nrowsIn.sort((a,b)=> (a.ano-b.ano) || (a.mes-b.mes));\nconst rows = rowsIn.slice(-12).map(r=>{\n  const receita = num(r.receita_liquida);\n  const baseAbs = (receita!=null) ? Math.abs(receita) : null; // para proporções quando receita ≤ 0\n  const cmv = num(r.cmv_csp);\n  const despFixa = num(r.despesa_fixa);\n  const mc = r.margem_contribuicao!=null ? num(r.margem_contribuicao)\n           : (receita!=null && cmv!=null && r.despesa_variavel!=null ? (receita - cmv - num(r.despesa_variavel)) : null);\n  const rliq = num(r.resultado_liquido);\n  const rop  = num(r.resultado_operacional);\n  const rbr  = num(r.receita_bruta);\n  const imp  = num(r.imposto_sobre_lucro);\n\n  // proporções sobre base ABS para não explodir quando receita < 0\n  const pCMV = (baseAbs>0 && cmv!=null) ? clamp01(cmv/baseAbs) : null;\n  const pFix = (baseAbs>0 && despFixa!=null) ? clamp01(despFixa/baseAbs) : null;\n  const varAbs = (receita!=null && cmv!=null && mc!=null) ? Math.max(0, receita - cmv - mc) : null;\n  const pVar = (baseAbs>0 && varAbs!=null) ? clamp01(varAbs/baseAbs) : null;\n\n  // margem líquida sobre |receita|\n  const mliqFrac = (baseAbs>0 && rliq!=null) ? (rliq/baseAbs) : null;\n\n  return {\n    ano:r.ano, mes:r.mes, empresa_nome:r.empresa_nome,\n    receita, cmv, mc, despFixa, rop, rliq, rbr, imp,\n    pCMV, pVar, pFix, mliqFrac\n  };\n});\n\nconst cur = rows[rows.length-1];\nconst empresa = rows[0].empresa_nome || 'Minha Empresa';\nconst periodo = `${ym(rows[0].ano, rows[0].mes)} a ${ym(cur.ano, cur.mes)}`;\n\n// barras mês atual (normaliza soma <= 100)\nlet b1 = (cur.pCMV!=null) ? Math.round(cur.pCMV*100) : 0;\nlet b2 = (cur.pVar!=null) ? Math.round(cur.pVar*100) : 0;\nlet b3 = (cur.pFix!=null) ? Math.round(cur.pFix*100) : 0;\nlet sum = b1+b2+b3; if (sum>100) { const k=100/sum; b1=Math.round(b1*k); b2=Math.round(b2*k); b3=Math.round(b3*k); }\n\nconst nowBR = new Date().toLocaleString('pt-BR',{day:'2-digit',month:'2-digit',year:'numeric',hour:'2-digit',minute:'2-digit'});\n\n// tabela 12m\nconst body12 = rows.map(r=>{\n  const cls = (r.rliq>0)?'pos':(r.rliq<0?'neg':'');\n  return `<tr>\n    <td>${ym(r.ano,r.mes)}</td>\n    <td>${fmtBR(r.rbr)}</td>\n    <td>${fmtBR(r.receita)}</td>\n    <td>${fmtBR(r.cmv)}</td>\n    <td>${fmtBR(r.mc)}</td>\n    <td>${fmtBR(r.despFixa)}</td>\n    <td class=\"${cls}\">${fmtBR(r.rliq)}</td>\n    <td>${pctTxt(r.mliqFrac)}</td>\n  </tr>`;\n}).join('');\n\n// CSS e HTML (tema escuro, compacto)\nconst css = `\nbody{font-family:system-ui,-apple-system,Segoe UI,Roboto,Arial;margin:0;background:#0f172a;color:#e5e7eb}\n.wrap{padding:24px;max-width:920px;margin:0 auto}\nheader{display:flex;justify-content:space-between;align-items:center;margin-bottom:16px;border-bottom:1px solid #1f2937;padding-bottom:10px}\n.brand{font-weight:700;color:#f9fafb}.muted{color:#9ca3af}\n.badge{background:#1f2937;border:1px solid #1f2937;border-radius:999px;padding:4px 8px;font-size:12px;color:#9ca3af}\n.kpis{display:grid;grid-template-columns:repeat(4,1fr);gap:10px}\n.card{background:#111827;border:1px solid #1f2937;border-radius:12px;padding:12px}\n.t{margin:0 0 6px 0;font-size:11px;color:#9ca3af;text-transform:uppercase;letter-spacing:.06em}\n.v{font-size:18px;font-weight:800;color:#f9fafb}\n.pos{color:#16a34a}.neg{color:#dc2626}\n.row{display:flex;gap:10px;margin-top:12px}\n.col{flex:1}\n.bar{height:10px;background:#0b122a;border:1px solid #1f2937;border-radius:999px;overflow:hidden}\n.b1,.b2,.b3{display:block;height:100%}.b1{background:#7c3aed}.b2{background:#2563eb}.b3{background:#f59e0b}\n.table{width:100%;border-collapse:collapse;font-size:12px}\nth,td{border-bottom:1px solid #1f2937;padding:6px;text-align:left}\nth{color:#9ca3af;text-transform:uppercase;font-size:11px}\nfooter{margin-top:12px;color:#6b7280;font-size:12px}\n`;\n\nconst html = `<!doctype html><html lang=\"pt-BR\"><head><meta charset=\"utf-8\">\n<meta name=\"viewport\" content=\"width=device-width,initial-scale=1\"><title>DRE Gerencial – ${empresa}</title>\n<style>${css}</style></head><body><div class=\"wrap\">\n<header><div><div class=\"brand\">DRE Gerencial – ${empresa}</div><div class=\"muted\">${periodo}</div></div><div class=\"badge\">Gerado em ${nowBR}</div></header>\n\n<section class=\"kpis\">\n  <div class=\"card\"><div class=\"t\">Receita Líquida (mês)</div><div class=\"v ${cur.receita<0?'neg':''}\">${fmtBR(cur.receita)}</div></div>\n  <div class=\"card\"><div class=\"t\">Margem de Contribuição (mês)</div><div class=\"v ${cur.mc<0?'neg':''}\">${fmtBR(cur.mc)}</div></div>\n  <div class=\"card\"><div class=\"t\">Despesas Fixas (mês)</div><div class=\"v\">${fmtBR(cur.despFixa)}</div></div>\n  <div class=\"card\"><div class=\"t\">Resultado Líquido (mês)</div><div class=\"v ${cur.rliq<0?'neg':'pos'}\">${fmtBR(cur.rliq)}</div></div>\n</section>\n\n<section class=\"row\">\n  <div class=\"col card\">\n    <div class=\"t\">Estrutura sobre |Receita| (mês atual)</div>\n    <div class=\"bar\" title=\"CMV\"><span class=\"b1\" style=\"width:${b1}%\"></span></div>\n    <div class=\"bar\" style=\"margin-top:6px\" title=\"Despesas Variáveis\"><span class=\"b2\" style=\"width:${b2}%\"></span></div>\n    <div class=\"bar\" style=\"margin-top:6px\" title=\"Despesas Fixas\"><span class=\"b3\" style=\"width:${b3}%\"></span></div>\n    <div class=\"muted\" style=\"font-size:12px;margin-top:6px\">CMV: ${fmtBR(cur.cmv)} • Variáveis(≈): ${fmtBR(cur.receita!=null&&cur.cmv!=null&&cur.mc!=null?Math.max(0,cur.receita-cur.cmv-cur.mc):null)} • Fixas: ${fmtBR(cur.despFixa)}</div>\n  </div>\n  <div class=\"col card\">\n    <div class=\"t\">DRE (mês atual)</div>\n    <table class=\"table\">\n      <tbody>\n        ${cur.rbr!=null?`<tr><th>Receita Bruta</th><td>${fmtBR(cur.rbr)}</td></tr>`:''}\n        <tr><th>Receita Líquida</th><td class=\"${cur.receita<0?'neg':''}\">${fmtBR(cur.receita)}</td></tr>\n        <tr><th>CMV/CSP</th><td>${fmtBR(cur.cmv)}</td></tr>\n        ${cur.mc!=null?`<tr><th>Margem de Contribuição</th><td class=\"${cur.mc<0?'neg':''}\">${fmtBR(cur.mc)}</td></tr>`:''}\n        <tr><th>Despesas Fixas</th><td>${fmtBR(cur.despFixa)}</td></tr>\n        <tr><th>Resultado Operacional</th><td class=\"${cur.rop<0?'neg':''}\">${fmtBR(cur.rop)}</td></tr>\n        ${cur.imp!=null?`<tr><th>Imposto s/ Lucro</th><td>${fmtBR(cur.imp)}</td></tr>`:''}\n        <tr><th>Resultado Líquido</th><td class=\"${cur.rliq<0?'neg':'pos'}\"><b>${fmtBR(cur.rliq)}</b></td></tr>\n      </tbody>\n    </table>\n  </div>\n</section>\n\n<section class=\"card\" style=\"margin-top:12px\">\n  <div class=\"t\">DRE – Últimos ${rows.length} meses (margem líquida sobre |receita|)</div>\n  <table class=\"table\">\n    <thead><tr>\n      <th>Mês</th><th>Rec. Bruta</th><th>Rec. Líquida</th><th>CMV</th><th>MC</th><th>Fixas</th><th>Res. Líquido</th><th>Margem Líq.</th>\n    </tr></thead>\n    <tbody>${body12}</tbody>\n  </table>\n</section>\n\n<footer>Fonte: <b>contab.vw_dre_gerencial</b>. Obs.: Proporções calculadas sobre |receita líquida| quando receita ≤ 0, apenas para visualização.</footer>\n</div></body></html>`;\n\nreturn [{ json: { html } }];\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[976,2624],"id":"c5866fe6-bf85-4d17-9a0e-aa60998e73d7","name":"gerahtml7"},{"parameters":{},"type":"n8n-nodes-base.noOp","typeVersion":1,"position":[2160,2624],"id":"f842bc06-2f9c-46ca-9caa-86e6dda36305","name":"No Operation, do nothing22","notes":"TEMPLATE DESENVOLVIDO POR NOCODE STARTUP\nhttps://nocodestartup.io/\n\nFORMAÇÃO GESTOR DE AGENTES DE IA:\nhttps://nocodestartup.io/formacao-gestor-agentes-ia/"},{"parameters":{"method":"POST","url":"=https://apinocode01.megaapi.com.br/rest/sendMessage/megacode-Mp5VTYM2qds/mediaBase64","sendHeaders":true,"headerParameters":{"parameters":[{"name":"Client-Token","value":"application/json"},{"name":"Authorization","value":"Bearer Mp5VTYM2qds"}]},"sendBody":true,"specifyBody":"json","jsonBody":"= {\n  \"messageData\": {\n    \"to\": \"5516992975836\",\n    \"type\": \"document\",\n    \"caption\": \"Segue relatório de modelos\",\n    \"fileName\": \"{{ $node['gerahtml7'].json.fileName || 'dre_gerencial.pdf' }}\",\n    \"mimeType\": \"application/pdf\",\n    \"base64\": \"data:application/pdf;base64, {{ $json.base64 }}\"\n  }\n}\n ","options":{}},"id":"e009db45-7fea-4780-8f74-73b528551571","name":"MegaApi10","type":"n8n-nodes-base.httpRequest","typeVersion":4.2,"position":[1936,2624]},{"parameters":{"operation":"executeQuery","query":" select * from contab.vw_dre_gerencial\n","options":{}},"type":"n8n-nodes-base.postgres","typeVersion":2.6,"position":[768,2624],"id":"636ce2b7-f3d5-465f-a912-152524ba59f3","name":"dergerencial"},{"parameters":{"method":"POST","url":"https://gotenberggotenberg8-production-8d7d.up.railway.app/forms/chromium/convert/html","sendBody":true,"contentType":"multipart-form-data","bodyParameters":{"parameters":[{"parameterType":"formBinaryData","name":"files","inputDataFieldName":"file"}]},"options":{"response":{"response":{"responseFormat":"file","outputPropertyName":"=balancokpi.pdf"}}}},"type":"n8n-nodes-base.httpRequest","typeVersion":4.2,"position":[1472,2848],"id":"974863c8-ea1d-4568-bbfd-410edcf95bc0","name":"HTTP Request15"},{"parameters":{"jsCode":" // garante que entrou um item com binário\nconst item = items[0];\nconst bins = item.binary || {};\nconst keys = Object.keys(bins);\nif (!keys.length) {\n  throw new Error('Nenhum binário no input. No HTTP Request (Gotenberg), ative Download=ON e Response=File.');\n}\n\n// escolhe o PDF: por mimeType, por extensão .pdf, ou o primeiro\nconst pdfKey =\n  keys.find(k => (bins[k].mimeType || '').includes('pdf')) ||\n  keys.find(k => k.toLowerCase().endsWith('.pdf')) ||\n  keys[0];\n\nconst pdf = bins[pdfKey];\nif (!pdf) {\n  throw new Error('PDF não encontrado. Binários disponíveis: ' + keys.join(', '));\n}\n\n// nome do arquivo\nconst fileName = item.json.fileName || pdf.fileName || 'relatorio.pdf';\n\n// sai com base64 + fileName para o próximo nó\nreturn [{\n  json: {\n    base64: pdf.data,                 // JÁ é base64\n    fileName: fileName                // ex.: relatorio-2025-08-20.pdf\n  }\n}];\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[1712,2848],"id":"180a4e26-2b50-4f07-aad1-b3e96679b4c0","name":"Code19"},{"parameters":{"operation":"toText","sourceProperty":"html","binaryPropertyName":"=file","options":{"encoding":"utf8","fileName":"index.html"}},"type":"n8n-nodes-base.convertToFile","typeVersion":1.1,"position":[1216,2848],"id":"87a5bcac-1363-4d11-a065-a7df901d59b2","name":"Convert to File10"},{"parameters":{"jsCode":"// === Code node (Run Once for All Items) ===\n// Relatório: KPIs de Balanço (liquidez, endividamento e variações) – dark, leve.\n\nconst rowsIn = items.map(i => i.json || {}).filter(r => r?.ano!=null && r?.mes!=null);\nif (!rowsIn.length) {\n  return [{ json: { html: '<!doctype html><meta charset=\"utf-8\"><body style=\"font-family:system-ui;margin:24px\">Sem dados de vw_balanco_kpis.</body>' } }];\n}\n\n// helpers\nfunction num(x){ if(x==null) return null; if(typeof x==='number') return x;\n  const s=String(x).replace(/[^0-9+\\-.,]/g,'').replace(/\\.(?=.*\\.)/g,'').replace(',', '.'); const n=parseFloat(s); return Number.isNaN(n)?null:n; }\nconst fmt$ = new Intl.NumberFormat('pt-BR',{style:'currency',currency:'BRL'});\nconst fmtBR = n => (n==null||!isFinite(n))?'-':fmt$.format(n);\nconst fmt2 = n => (n==null||!isFinite(n))?'-':String(Number(n).toFixed(2)).replace('.',',');\nconst ym = (y,m)=> `${String(m).padStart(2,'0')}/${y}`;\nconst nowBR = new Date().toLocaleString('pt-BR',{day:'2-digit',month:'2-digit',year:'numeric',hour:'2-digit',minute:'2-digit'});\n\nfunction liqClass(v){ if(v==null||!isFinite(v)) return ''; if(v>=2) return 'pos'; if(v>=1) return 'warn'; return 'neg'; }\nfunction endClass(v){ if(v==null||!isFinite(v)) return ''; if(v<0) return 'neg'; if(v<=0.5) return 'pos'; if(v<=1.0) return 'warn'; return 'neg'; }\nfunction deltaArrow(cur,prev,betterWhenDown=false){\n  if(cur==null||prev==null||!isFinite(cur)||!isFinite(prev)) return '';\n  const d = cur - prev;\n  if (d === 0) return '↔ 0,00';\n  const good = betterWhenDown ? d<0 : d>0;\n  const arrow = d>0 ? '▲' : '▼';\n  return `<span class=\"${good?'pos':'neg'}\">${arrow} ${fmt2(Math.abs(d))}</span>`;\n}\n\n// sort & limit 12\nrowsIn.sort((a,b)=> (a.ano-b.ano) || (a.mes-b.mes));\nconst data = rowsIn.slice(-12).map(r=>({\n  ano:r.ano, mes:r.mes, empresa_nome:r.empresa_nome,\n  ativo_var:num(r.ativo_var), passivo_var:num(r.passivo_var), pl_var:num(r.pl_var),\n  liquidez:num(r.liquidez_aprox), endiv:num(r.endividamento_aprox)\n}));\n\nconst empresa = data[0].empresa_nome || 'Minha Empresa';\nconst cur = data[data.length-1];\nconst prev = data[data.length-2] || null;\nconst periodo = `${ym(data[0].ano,data[0].mes)} a ${ym(cur.ano,cur.mes)}`;\n\n// tabela últimos meses\nconst bodyHtml = data.map((r,idx)=>{\n  const p = idx>0 ? data[idx-1] : null;\n  const dL = p ? deltaArrow(r.liquidez, p.liquidez, false) : '';\n  const dE = p ? deltaArrow(r.endiv,    p.endiv,    true ) : '';\n  const clsR = r.liquidez!=null ? liqClass(r.liquidez) : '';\n  const clsE = r.endiv!=null ? endClass(r.endiv) : '';\n  return `<tr>\n    <td>${ym(r.ano,r.mes)}</td>\n    <td>${fmtBR(r.ativo_var)}</td>\n    <td>${fmtBR(r.passivo_var)}</td>\n    <td>${fmtBR(r.pl_var)}</td>\n    <td class=\"${clsR}\">${fmt2(r.liquidez)}</td>\n    <td class=\"${clsE}\">${fmt2(r.endiv)}</td>\n    <td>${dL}</td>\n    <td>${dE}</td>\n  </tr>`;\n}).join('');\n\n// deltas do mês atual vs anterior\nconst dAtivo   = prev ? deltaArrow(cur.ativo_var,   prev.ativo_var)   : '';\nconst dPassivo = prev ? deltaArrow(cur.passivo_var, prev.passivo_var, true) : ''; // menos passivo é melhor\nconst dPL      = prev ? deltaArrow(cur.pl_var,      prev.pl_var)      : '';\nconst dLiq     = prev ? deltaArrow(cur.liquidez,    prev.liquidez)    : '';\nconst dEnd     = prev ? deltaArrow(cur.endiv,       prev.endiv, true) : '';\n\nconst liqCls = liqClass(cur.liquidez);\nconst endCls = endClass(cur.endiv);\n\n// CSS (dark, compacto)\nconst css = `\nbody{font-family:system-ui,-apple-system,Segoe UI,Roboto,Arial;margin:0;background:#0f172a;color:#e5e7eb}\n.wrap{padding:24px;max-width:920px;margin:0 auto}\nheader{display:flex;justify-content:space-between;align-items:center;margin-bottom:16px;border-bottom:1px solid #1f2937;padding-bottom:10px}\n.brand{font-weight:700;color:#f9fafb}.muted{color:#9ca3af}\n.badge{background:#1f2937;border:1px solid #1f2937;border-radius:999px;padding:4px 8px;font-size:12px;color:#9ca3af}\n.kpis{display:grid;grid-template-columns:repeat(5,1fr);gap:10px}\n.card{background:#111827;border:1px solid #1f2937;border-radius:12px;padding:12px}\n.t{margin:0 0 6px 0;font-size:11px;color:#9ca3af;text-transform:uppercase;letter-spacing:.06em}\n.v{font-size:18px;font-weight:800;color:#f9fafb}\n.pos{color:#16a34a}.neg{color:#dc2626}.warn{color:#f59e0b}\n.sub{font-size:12px;color:#9ca3af}\n.table{width:100%;border-collapse:collapse;font-size:12px;margin-top:12px}\nth,td{border-bottom:1px solid #1f2937;padding:6px;text-align:left}\nth{color:#9ca3af;text-transform:uppercase;font-size:11px}\nfooter{margin-top:12px;color:#6b7280;font-size:12px}\n`;\n\n// HTML final\nconst html = `<!doctype html><html lang=\"pt-BR\"><head><meta charset=\"utf-8\">\n<meta name=\"viewport\" content=\"width=device-width,initial-scale=1\"><title>KPIs de Balanço – ${empresa}</title>\n<style>${css}</style></head><body><div class=\"wrap\">\n<header><div><div class=\"brand\">KPIs de Balanço – ${empresa}</div><div class=\"muted\">${periodo}</div></div><div class=\"badge\">Gerado em ${nowBR}</div></header>\n\n<section class=\"kpis\">\n  <div class=\"card\"><div class=\"t\">Liquidez Aproximada (mês)</div><div class=\"v ${liqCls}\">${fmt2(cur.liquidez)}</div><div class=\"sub\">vs mês ant.: ${dLiq||'-'}</div></div>\n  <div class=\"card\"><div class=\"t\">Endividamento Aproximado (mês)</div><div class=\"v ${endCls}\">${fmt2(cur.endiv)}</div><div class=\"sub\">vs mês ant.: ${dEnd||'-'}</div></div>\n  <div class=\"card\"><div class=\"t\">Variação do Ativo</div><div class=\"v\">${fmtBR(cur.ativo_var)}</div><div class=\"sub\">vs mês ant.: ${dAtivo||'-'}</div></div>\n  <div class=\"card\"><div class=\"t\">Variação do Passivo</div><div class=\"v\">${fmtBR(cur.passivo_var)}</div><div class=\"sub\">vs mês ant.: ${dPassivo||'-'}</div></div>\n  <div class=\"card\"><div class=\"t\">Variação do PL</div><div class=\"v\">${fmtBR(cur.pl_var)}</div><div class=\"sub\">vs mês ant.: ${dPL||'-'}</div></div>\n</section>\n\n<section class=\"card\">\n  <div class=\"t\">Série (até ${data.length} meses)</div>\n  <table class=\"table\">\n    <thead><tr>\n      <th>Mês</th><th>Ativo Δ</th><th>Passivo Δ</th><th>PL Δ</th>\n      <th>Liquidez</th><th>Endivid.</th><th>Δ Liquidez</th><th>Δ Endivid.</th>\n    </tr></thead>\n    <tbody>${bodyHtml}</tbody>\n  </table>\n</section>\n\n<footer>Fonte: <b>contab.vw_balanco_kpis</b>. Observações: setas (▲/▼) mostram variação vs mês anterior; para Endividamento, queda é melhor.</footer>\n</div></body></html>`;\n\nreturn [{ json: { html } }];\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[992,2848],"id":"1d6bdbfa-10a0-48fc-9031-1efc2a7f49be","name":"gerahtml8"},{"parameters":{},"type":"n8n-nodes-base.noOp","typeVersion":1,"position":[2160,2848],"id":"2935dfc9-148b-49d5-9afa-dfb981764405","name":"No Operation, do nothing23","notes":"TEMPLATE DESENVOLVIDO POR NOCODE STARTUP\nhttps://nocodestartup.io/\n\nFORMAÇÃO GESTOR DE AGENTES DE IA:\nhttps://nocodestartup.io/formacao-gestor-agentes-ia/"},{"parameters":{"method":"POST","url":"=https://apinocode01.megaapi.com.br/rest/sendMessage/megacode-Mp5VTYM2qds/mediaBase64","sendHeaders":true,"headerParameters":{"parameters":[{"name":"Client-Token","value":"application/json"},{"name":"Authorization","value":"Bearer Mp5VTYM2qds"}]},"sendBody":true,"specifyBody":"json","jsonBody":"= {\n  \"messageData\": {\n    \"to\": \"5516992975836\",\n    \"type\": \"document\",\n    \"caption\": \"Segue relatório de modelos\",\n    \"fileName\": \"{{ $node['gerahtml8'].json.fileName || 'balancokpi.pdf' }}\",\n    \"mimeType\": \"application/pdf\",\n    \"base64\": \"data:application/pdf;base64, {{ $json.base64 }}\"\n  }\n}\n ","options":{}},"id":"13b8fa96-ced0-4db7-82da-9d78d92276b6","name":"MegaApi11","type":"n8n-nodes-base.httpRequest","typeVersion":4.2,"position":[1952,2848]},{"parameters":{"operation":"executeQuery","query":" SELECT *\nFROM contab.vw_balanco_kpis\nWHERE make_date(ano, mes, 1) >= date_trunc('month', CURRENT_DATE) - interval '11 months'\nORDER BY ano, mes;","options":{}},"type":"n8n-nodes-base.postgres","typeVersion":2.6,"position":[768,2848],"id":"a8328401-8a93-40ca-86b2-80e0dc60d915","name":"balancokpi"},{"parameters":{"method":"POST","url":"https://gotenberggotenberg8-production-8d7d.up.railway.app/forms/chromium/convert/html","sendBody":true,"contentType":"multipart-form-data","bodyParameters":{"parameters":[{"parameterType":"formBinaryData","name":"files","inputDataFieldName":"file"}]},"options":{"response":{"response":{"responseFormat":"file","outputPropertyName":"=balanconiveis.pdf"}}}},"type":"n8n-nodes-base.httpRequest","typeVersion":4.2,"position":[1456,3056],"id":"fafe607f-7fae-464e-8fcb-e197f63ddfea","name":"HTTP Request16"},{"parameters":{"jsCode":" // garante que entrou um item com binário\nconst item = items[0];\nconst bins = item.binary || {};\nconst keys = Object.keys(bins);\nif (!keys.length) {\n  throw new Error('Nenhum binário no input. No HTTP Request (Gotenberg), ative Download=ON e Response=File.');\n}\n\n// escolhe o PDF: por mimeType, por extensão .pdf, ou o primeiro\nconst pdfKey =\n  keys.find(k => (bins[k].mimeType || '').includes('pdf')) ||\n  keys.find(k => k.toLowerCase().endsWith('.pdf')) ||\n  keys[0];\n\nconst pdf = bins[pdfKey];\nif (!pdf) {\n  throw new Error('PDF não encontrado. Binários disponíveis: ' + keys.join(', '));\n}\n\n// nome do arquivo\nconst fileName = item.json.fileName || pdf.fileName || 'relatorio.pdf';\n\n// sai com base64 + fileName para o próximo nó\nreturn [{\n  json: {\n    base64: pdf.data,                 // JÁ é base64\n    fileName: fileName                // ex.: relatorio-2025-08-20.pdf\n  }\n}];\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[1712,3056],"id":"cec563df-9c03-40c1-ac1b-a8f687bcbfa5","name":"Code20"},{"parameters":{"operation":"toText","sourceProperty":"html","binaryPropertyName":"=file","options":{"encoding":"utf8","fileName":"index.html"}},"type":"n8n-nodes-base.convertToFile","typeVersion":1.1,"position":[1216,3056],"id":"9337da9d-c66b-42ff-9e76-c51fd1c016c3","name":"Convert to File11"},{"parameters":{"jsCode":" // === Code node (Run Once for All Items) ===\n// Relatório: KPIs de Balanço (NÍVEL) — Liquidez Corrente (AC/PC) e Endividamento (Passivo/Ativo)\n\nconst rows = items.map(i => i.json || {}).filter(r => r?.ano!=null && r?.mes!=null);\nif (!rows.length) {\n  return [{ json: { html: '<!doctype html><meta charset=\"utf-8\"><body style=\"font-family:system-ui;margin:24px\">Sem dados de vw_balanco_niveis.</body>' } }];\n}\n\nrows.sort((a,b)=> (a.ano-b.ano) || (a.mes-b.mes));\nconst data = rows.slice(-12);\n\nconst fmt2 = n => (n==null || !isFinite(n)) ? '-' : String(Number(n).toFixed(2)).replace('.',',');\nconst fmt$ = new Intl.NumberFormat('pt-BR', { style:'currency', currency:'BRL' });\nconst fmtBR = n => (n==null || !isFinite(n)) ? '-' : fmt$.format(n);\nconst ym = (y,m)=> `${String(m).padStart(2,'0')}/${y}`;\n\nfunction liqClass(v){ if(v==null||!isFinite(v)) return ''; if(v>=2) return 'pos'; if(v>=1) return 'warn'; return 'neg'; }\nfunction endClass(v){ if(v==null||!isFinite(v)) return ''; if(v<=0.5) return 'pos'; if(v<=1.0) return 'warn'; return 'neg'; }\nfunction delta(cur, prev){ if(cur==null||prev==null||!isFinite(cur)||!isFinite(prev)) return ''; const d=cur-prev; if(d===0) return '↔ 0,00'; const arrow=d>0?'▲':'▼'; return `${arrow} ${fmt2(Math.abs(d))}`; }\n\nconst cur = data[data.length-1];\nconst prev = data[data.length-2] || null;\nconst empresa = rows[0].empresa_nome || 'Minha Empresa';\nconst periodo = `${ym(data[0].ano,data[0].mes)} a ${ym(cur.ano,cur.mes)}`;\nconst nowBR = new Date().toLocaleString('pt-BR',{day:'2-digit',month:'2-digit',year:'numeric',hour:'2-digit',minute:'2-digit'});\n\nconst dLiq = prev ? delta(cur.liquidez_corrente, prev.liquidez_corrente) : '';\nconst dEnd = prev ? delta(cur.endividamento,    prev.endividamento)    : '';\n\nconst body = data.map((r,i)=>{\n  const p = i>0 ? data[i-1] : null;\n  const liqCls = liqClass(r.liquidez_corrente);\n  const endCls = endClass(r.endividamento);\n  return `<tr>\n    <td>${ym(r.ano,r.mes)}</td>\n    <td>${fmtBR(r.ativo_circ)}</td>\n    <td>${fmtBR(r.passivo_circ)}</td>\n    <td>${fmtBR(r.ativo_total)}</td>\n    <td>${fmtBR(r.passivo_total)}</td>\n    <td class=\"${liqCls}\">${fmt2(r.liquidez_corrente)}</td>\n    <td class=\"${endCls}\">${fmt2(r.endividamento)}</td>\n    <td>${p ? delta(r.liquidez_corrente, p.liquidez_corrente) : ''}</td>\n    <td>${p ? delta(r.endividamento,    p.endividamento)    : ''}</td>\n  </tr>`;\n}).join('');\n\nconst css = `\nbody{font-family:system-ui,-apple-system,Segoe UI,Roboto,Arial;margin:0;background:#0f172a;color:#e5e7eb}\n.wrap{padding:24px;max-width:960px;margin:0 auto}\nheader{display:flex;justify-content:space-between;align-items:center;margin-bottom:16px;border-bottom:1px solid #1f2937;padding-bottom:10px}\n.brand{font-weight:700;color:#f9fafb}.muted{color:#9ca3af}\n.badge{background:#1f2937;border:1px solid #1f2937;border-radius:999px;padding:4px 8px;font-size:12px;color:#9ca3af}\n.kpis{display:grid;grid-template-columns:repeat(5,1fr);gap:10px}\n.card{background:#111827;border:1px solid #1f2937;border-radius:12px;padding:12px}\n.t{margin:0 0 6px 0;font-size:11px;color:#9ca3af;text-transform:uppercase;letter-spacing:.06em}\n.v{font-size:18px;font-weight:800;color:#f9fafb}\n.pos{color:#16a34a}.neg{color:#dc2626}.warn{color:#f59e0b}\n.sub{font-size:12px;color:#9ca3af}\n.table{width:100%;border-collapse:collapse;font-size:12px;margin-top:12px}\nth,td{border-bottom:1px solid #1f2937;padding:6px;text-align:left}\nth{color:#9ca3af;text-transform:uppercase;font-size:11px}\nfooter{margin-top:12px;color:#6b7280;font-size:12px}\n`;\n\nconst html = `<!doctype html><html lang=\"pt-BR\"><head><meta charset=\"utf-8\">\n<meta name=\"viewport\" content=\"width=device-width,initial-scale=1\"><title>KPIs de Balanço (Nível) – ${empresa}</title>\n<style>${css}</style></head><body><div class=\"wrap\">\n<header><div><div class=\"brand\">KPIs de Balanço – ${empresa}</div><div class=\"muted\">${periodo}</div></div><div class=\"badge\">Gerado em ${nowBR}</div></header>\n\n<section class=\"kpis\">\n  <div class=\"card\"><div class=\"t\">Liquidez Corrente (AC/PC)</div><div class=\"v ${liqClass(cur.liquidez_corrente)}\">${fmt2(cur.liquidez_corrente)}</div><div class=\"sub\">vs mês ant.: ${dLiq||'-'}</div></div>\n  <div class=\"card\"><div class=\"t\">Endividamento (Passivo/Ativo)</div><div class=\"v ${endClass(cur.endividamento)}\">${fmt2(cur.endividamento)}</div><div class=\"sub\">vs mês ant.: ${dEnd||'-'}</div></div>\n  <div class=\"card\"><div class=\"t\">Ativo Total</div><div class=\"v\">${fmtBR(cur.ativo_total)}</div></div>\n  <div class=\"card\"><div class=\"t\">Passivo Total</div><div class=\"v\">${fmtBR(cur.passivo_total)}</div></div>\n  <div class=\"card\"><div class=\"t\">Patrimônio Líquido</div><div class=\"v\">${fmtBR(cur.pl)}</div></div>\n</section>\n\n<section class=\"card\">\n  <div class=\"t\">Série (até ${data.length} meses)</div>\n  <table class=\"table\">\n    <thead><tr>\n      <th>Mês</th><th>AC</th><th>PC</th><th>Ativo</th><th>Passivo</th>\n      <th>Liquidez</th><th>Endivid.</th><th>ΔLiquidez</th><th>ΔEndivid.</th>\n    </tr></thead>\n    <tbody>${body}</tbody>\n  </table>\n</section>\n\n<footer>Fonte: <b>contab.vw_balanco_niveis</b>. Faixas: Liquidez &ge; 2 (ok), 1–2 (atenção), &lt;1 (crítico). Endividamento &le; 0,5 (ok), 0,5–1 (atenção), &gt;1 (alerta).</footer>\n</div></body></html>`;\n\nreturn [{ json: { html } }];\n"},"type":"n8n-nodes-base.code","typeVersion":2,"position":[1008,3056],"id":"d3d7807c-600b-4517-b8ce-fc63a7848e1b","name":"gerahtml9"},{"parameters":{},"type":"n8n-nodes-base.noOp","typeVersion":1,"position":[2160,3056],"id":"88d920e5-200f-46f8-b216-a4e3d7786874","name":"No Operation, do nothing24","notes":"TEMPLATE DESENVOLVIDO POR NOCODE STARTUP\nhttps://nocodestartup.io/\n\nFORMAÇÃO GESTOR DE AGENTES DE IA:\nhttps://nocodestartup.io/formacao-gestor-agentes-ia/"},{"parameters":{"method":"POST","url":"=https://apinocode01.megaapi.com.br/rest/sendMessage/megacode-Mp5VTYM2qds/mediaBase64","sendHeaders":true,"headerParameters":{"parameters":[{"name":"Client-Token","value":"application/json"},{"name":"Authorization","value":"Bearer Mp5VTYM2qds"}]},"sendBody":true,"specifyBody":"json","jsonBody":"= {\n  \"messageData\": {\n    \"to\": \"5516992975836\",\n    \"type\": \"document\",\n    \"caption\": \"Segue relatório de modelos\",\n    \"fileName\": \"{{ $node['gerahtml9'].json.fileName || 'balanconiveis.pdf' }}\",\n    \"mimeType\": \"application/pdf\",\n    \"base64\": \"data:application/pdf;base64, {{ $json.base64 }}\"\n  }\n}\n ","options":{}},"id":"adc85f24-7bba-49f0-9566-f5860b255a4b","name":"MegaApi12","type":"n8n-nodes-base.httpRequest","typeVersion":4.2,"position":[1936,3056]},{"parameters":{"operation":"executeQuery","query":" \nSELECT *\nFROM contab.vw_balanco_niveis\nWHERE make_date(ano,mes,1) >= date_trunc('month', CURRENT_DATE) - interval '11 months'\nORDER BY ano, mes;","options":{}},"type":"n8n-nodes-base.postgres","typeVersion":2.6,"position":[784,3056],"id":"6fce4249-7701-4e6c-9d9f-bc2586eacf2e","name":"BalancoNiveis"}],"connections":{"OpenAI Chat Model":{"ai_languageModel":[[{"node":"AI Agent","type":"ai_languageModel","index":0}]]},"Simple Memory":{"ai_memory":[[{"node":"AI Agent","type":"ai_memory","index":0}]]},"AI Agent":{"main":[[{"node":"RequestMenu7","type":"main","index":0}]]},"geradiario":{"ai_tool":[[{"node":"AI Agent","type":"ai_tool","index":0}]]},"geralancamento":{"ai_tool":[[{"node":"AI Agent","type":"ai_tool","index":0}]]},"RequestMenu7":{"main":[[{"node":"No Operation, do nothing12","type":"main","index":0}]]},"Webhook":{"main":[[{"node":"Edit Fields","type":"main","index":0}]]},"Switch":{"main":[[{"node":"HTTP Request","type":"main","index":0}],[],[],[{"node":"AI Agent1","type":"main","index":0}],[{"node":"AI Agent","type":"main","index":0}],[{"node":"balancete","type":"main","index":0}],[{"node":"razao","type":"main","index":0}],[{"node":"balancetesaldo","type":"main","index":0}],[{"node":"BalancoPatrimonial","type":"main","index":0}],[{"node":"dre_ytd","type":"main","index":0}],[{"node":"BalancoPatrimonial2","type":"main","index":0}],[{"node":"ModeloToken","type":"main","index":0}]]},"HTTP Request":{"main":[[{"node":"No Operation, do nothing","type":"main","index":0}]]},"Edit Fields":{"main":[[{"node":"If","type":"main","index":0}]]},"If":{"main":[[{"node":"Select rows from a table1","type":"main","index":0}],[{"node":"Execute a SQL query","type":"main","index":0}]]},"Select rows from a table1":{"main":[[{"node":"Switch","type":"main","index":0}]]},"Execute a SQL query1":{"main":[[{"node":"RequestMenu","type":"main","index":0}]]},"Execute a SQL query":{"main":[[{"node":"Execute a SQL query1","type":"main","index":0}]]},"RequestMenu":{"main":[[{"node":"No Operation, do nothing1","type":"main","index":0}]]},"AI Agent1":{"main":[[{"node":"RequestMenu8","type":"main","index":0}]]},"Simple Memory1":{"ai_memory":[[{"node":"AI Agent1","type":"ai_memory","index":0}]]},"RequestMenu8":{"main":[[{"node":"No Operation, do nothing13","type":"main","index":0}]]},"OpenAI Chat Model1":{"ai_languageModel":[[{"node":"AI Agent1","type":"ai_languageModel","index":0}]]},"InsereModelo":{"ai_tool":[[{"node":"AI Agent1","type":"ai_tool","index":0}]]},"HTTP Request6":{"main":[[{"node":"Code11","type":"main","index":0}]]},"Code11":{"main":[[{"node":"MegaApi3","type":"main","index":0}]]},"Convert to File2":{"main":[[{"node":"HTTP Request6","type":"main","index":0}]]},"gerahtml":{"main":[[{"node":"Convert to File2","type":"main","index":0}]]},"HTTP Request7":{"main":[[{"node":"Code","type":"main","index":0}]]},"Code":{"main":[[{"node":"MegaApi","type":"main","index":0}]]},"Convert to File":{"main":[[{"node":"HTTP Request7","type":"main","index":0}]]},"razao":{"main":[[{"node":"Code1","type":"main","index":0}]]},"Code1":{"main":[[{"node":"Convert to File","type":"main","index":0}]]},"balancete":{"main":[[{"node":"gerahtml","type":"main","index":0}]]},"HTTP Request8":{"main":[[{"node":"Code12","type":"main","index":0}]]},"Code12":{"main":[[{"node":"MegaApi4","type":"main","index":0}]]},"Convert to File3":{"main":[[{"node":"HTTP Request8","type":"main","index":0}]]},"gerahtml1":{"main":[[{"node":"Convert to File3","type":"main","index":0}]]},"balancetesaldo":{"main":[[{"node":"gerahtml1","type":"main","index":0}]]},"HTTP Request9":{"main":[[{"node":"Code13","type":"main","index":0}]]},"Code13":{"main":[[{"node":"MegaApi5","type":"main","index":0}]]},"Convert to File4":{"main":[[{"node":"HTTP Request9","type":"main","index":0}]]},"gerahtml2":{"main":[[{"node":"Convert to File4","type":"main","index":0}]]},"BalancoPatrimonial":{"main":[[{"node":"gerahtml2","type":"main","index":0}]]},"MegaApi5":{"main":[[{"node":"No Operation, do nothing14","type":"main","index":0}]]},"MegaApi3":{"main":[[{"node":"No Operation, do nothing15","type":"main","index":0}]]},"MegaApi":{"main":[[{"node":"No Operation, do nothing16","type":"main","index":0}]]},"MegaApi4":{"main":[[{"node":"No Operation, do nothing17","type":"main","index":0}]]},"HTTP Request10":{"main":[[{"node":"Code14","type":"main","index":0}]]},"MegaApi6":{"main":[[{"node":"No Operation, do nothing18","type":"main","index":0}]]},"Code14":{"main":[[{"node":"MegaApi6","type":"main","index":0}]]},"Convert to File5":{"main":[[{"node":"HTTP Request10","type":"main","index":0}]]},"gerahtml3":{"main":[[{"node":"Convert to File5","type":"main","index":0}]]},"BalancoPatrimonial2":{"main":[[{"node":"gerahtml4","type":"main","index":0}]]},"HTTP Request11":{"main":[[{"node":"Code15","type":"main","index":0}]]},"Code15":{"main":[[{"node":"MegaApi7","type":"main","index":0}]]},"Convert to File6":{"main":[[{"node":"HTTP Request11","type":"main","index":0}]]},"gerahtml4":{"main":[[{"node":"Convert to File6","type":"main","index":0}]]},"MegaApi7":{"main":[[{"node":"No Operation, do nothing19","type":"main","index":0}]]},"HTTP Request12":{"main":[[{"node":"Code16","type":"main","index":0}]]},"Code16":{"main":[[{"node":"MegaApi8","type":"main","index":0}]]},"Convert to File7":{"main":[[{"node":"HTTP Request12","type":"main","index":0}]]},"gerahtml5":{"main":[[{"node":"Convert to File7","type":"main","index":0}]]},"MegaApi8":{"main":[[{"node":"No Operation, do nothing20","type":"main","index":0}]]},"dre_ytd":{"main":[[{"node":"gerahtml3","type":"main","index":0}]]},"ModeloToken":{"main":[[{"node":"gerahtml5","type":"main","index":0}]]},"HTTP Request13":{"main":[[{"node":"Code17","type":"main","index":0}]]},"Code17":{"main":[[{"node":"MegaApi9","type":"main","index":0}]]},"Convert to File8":{"main":[[{"node":"HTTP Request13","type":"main","index":0}]]},"gerahtml6":{"main":[[{"node":"Convert to File8","type":"main","index":0}]]},"MegaApi9":{"main":[[{"node":"No Operation, do nothing21","type":"main","index":0}]]},"resumeexecutivo":{"main":[[{"node":"gerahtml6","type":"main","index":0}]]},"HTTP Request14":{"main":[[{"node":"Code18","type":"main","index":0}]]},"Code18":{"main":[[{"node":"MegaApi10","type":"main","index":0}]]},"Convert to File9":{"main":[[{"node":"HTTP Request14","type":"main","index":0}]]},"gerahtml7":{"main":[[{"node":"Convert to File9","type":"main","index":0}]]},"MegaApi10":{"main":[[{"node":"No Operation, do nothing22","type":"main","index":0}]]},"dergerencial":{"main":[[{"node":"gerahtml7","type":"main","index":0}]]},"HTTP Request15":{"main":[[{"node":"Code19","type":"main","index":0}]]},"Code19":{"main":[[{"node":"MegaApi11","type":"main","index":0}]]},"Convert to File10":{"main":[[{"node":"HTTP Request15","type":"main","index":0}]]},"gerahtml8":{"main":[[{"node":"Convert to File10","type":"main","index":0}]]},"MegaApi11":{"main":[[{"node":"No Operation, do nothing23","type":"main","index":0}]]},"balancokpi":{"main":[[{"node":"gerahtml8","type":"main","index":0}]]},"HTTP Request16":{"main":[[{"node":"Code20","type":"main","index":0}]]},"Code20":{"main":[[{"node":"MegaApi12","type":"main","index":0}]]},"Convert to File11":{"main":[[{"node":"HTTP Request16","type":"main","index":0}]]},"gerahtml9":{"main":[[{"node":"Convert to File11","type":"main","index":0}]]},"MegaApi12":{"main":[[{"node":"No Operation, do nothing24","type":"main","index":0}]]},"BalancoNiveis":{"main":[[{"node":"gerahtml9","type":"main","index":0}]]}},"settings":{"executionOrder":"v1"},"staticData":null,"meta":null,"pinData":{},"versionId":"43bca5dd-a044-40e7-9c58-cec1f454975a","triggerCount":0,"shared":[{"createdAt":"2025-09-07T01:18:37.995Z","updatedAt":"2025-09-07T01:18:37.995Z","role":"workflow:owner","workflowId":"IUUAvflEFz4yYvaF","projectId":"wFRMrac2003Pl1x6"}],"tags":[]}