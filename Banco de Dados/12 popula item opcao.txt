   CREATE OR REPLACE PROCEDURE popula_item_opcoes(
    p_user_id INT,
    p_pedido_id INT
)
LANGUAGE plpgsql
AS $$
BEGIN
  -- Limpa opções antigas

DELETE FROM item_opcoes o
USING item_pedido_temp i
WHERE o.item_id = i.item_id
  AND i.user_id = p_user_id
  AND i.pedido_id = p_pedido_id;

  -- Pizzas inteiras
 INSERT INTO item_opcoes (item_id, numero, nome, descricao, preco, opcao, parte)
WITH cand AS (
  SELECT DISTINCT i2.item_id, c.numero, c.nome, c.descricao, c.preco_grande AS preco,  1 as parte 
  FROM item_pedido_temp i2
  JOIN cardapio c
    ON c.categoria = 'pizza'
   AND c.nome ILIKE '%' || TRIM(i2.nome) || '%'
  WHERE i2.status = 'opcoes'
    AND i2.user_id = p_user_id
    AND i2.pedido_id = p_pedido_id
    AND i2.numero = 0
    AND i2.categoria = 'pizza'
),
novos AS (
  SELECT c.*
  FROM cand c
  WHERE NOT EXISTS (
    SELECT 1 FROM item_opcoes io
    WHERE io.item_id = c.item_id AND io.numero = c.numero
  )
),
base AS (
  SELECT item_id, COALESCE(MAX(opcao),0) AS max_opcao
  FROM item_opcoes
  WHERE item_id IN (SELECT item_id FROM novos)
  GROUP BY item_id
)
SELECT n.item_id, n.numero, n.nome, n.descricao, n.preco,
       COALESCE(b.max_opcao,0) + ROW_NUMBER() OVER (PARTITION BY n.item_id ORDER BY n.numero) AS opcao, n.parte
FROM novos n
LEFT JOIN base b USING (item_id);

  -- Pizzas fracionadas (parte com nome_fracao)
 
INSERT INTO item_opcoes (item_id, numero, nome, descricao, preco, opcao, parte )
WITH cand AS (
  SELECT DISTINCT i2.item_id, c.numero, c.nome, c.descricao, c.preco_grande AS preco, 2 as parte 
  FROM item_pedido_temp i2
  JOIN cardapio c
    ON c.categoria = 'pizza'
   AND c.nome ILIKE '%' || TRIM(i2.nome_fracao) || '%'
  WHERE i2.status = 'opcoes'
    AND i2.user_id = p_user_id
    AND i2.pedido_id = p_pedido_id
    AND i2.numero_fracao = 0
    AND i2.categoria = 'pizza'
    AND i2.fracionada = true
),
novos AS (
  SELECT c.*
  FROM cand c
  WHERE NOT EXISTS (
    SELECT 1 FROM item_opcoes io
    WHERE io.item_id = c.item_id AND io.numero = c.numero
  )
),
base AS (
  SELECT item_id, COALESCE(MAX(opcao),0) AS max_opcao
  FROM item_opcoes
  WHERE item_id IN (SELECT item_id FROM novos)
  GROUP BY item_id
)
SELECT n.item_id, n.numero, n.nome, n.descricao, n.preco,
       COALESCE(b.max_opcao,0) + ROW_NUMBER() OVER (PARTITION BY n.item_id ORDER BY n.numero) AS opcao, n.parte
FROM novos n
LEFT JOIN base b USING (item_id);



  -- Bebidas e Bordas
 

INSERT INTO item_opcoes (item_id, numero, nome, descricao, preco, opcao, parte )
WITH cand AS (
  SELECT DISTINCT i2.item_id, c.numero, c.nome, c.descricao, c.preco_grande AS preco, 1 as parte 
  FROM item_pedido_temp i2
  JOIN cardapio c
    ON c.categoria IN ('bebida','borda')
   AND c.palavras_chave ILIKE '%' || TRIM(i2.nome) || '%'
  WHERE i2.status = 'opcoes'
    AND i2.user_id = p_user_id
    AND i2.pedido_id = p_pedido_id
    AND i2.numero = 0
    AND i2.categoria IN ('bebida','borda')
    AND i2.fracionada = false
),
novos AS (
  SELECT c.*
  FROM cand c
  WHERE NOT EXISTS (
    SELECT 1 FROM item_opcoes io
    WHERE io.item_id = c.item_id AND io.numero = c.numero
  )
),
base AS (
  SELECT item_id, COALESCE(MAX(opcao),0) AS max_opcao
  FROM item_opcoes
  WHERE item_id IN (SELECT item_id FROM novos)
  GROUP BY item_id
)
SELECT n.item_id, n.numero, n.nome, n.descricao, n.preco,
       COALESCE(b.max_opcao,0) + ROW_NUMBER() OVER (PARTITION BY n.item_id ORDER BY n.numero) AS opcao, n.parte
FROM novos n
LEFT JOIN base b USING (item_id);


END;
$$;




