   CREATE OR REPLACE FUNCTION public.calcula_pre_pedido(
  p_user_id   integer,
  p_pedido_id integer
)
RETURNS text
LANGUAGE plpgsql
AS $$
 
DECLARE
  v_total  numeric := 0;
  v_pagto  text;
  v_itens  text;
  v_resumo text;
  v_qtd    integer := 0;
BEGIN
  -- √Çncora no pedido_temp; LEFT JOIN para itens (pode n√£o ter)
  SELECT
    COALESCE(SUM(i.valor), 0) + 3                                   AS total,         -- taxa fixa somada
    MAX(p.tipo_cobranca)                                            AS tipo_cobranca,
    STRING_AGG(
      E'\n        ' ||
      RPAD(  -- descri√ß√£o com largura fixa
        TRIM(BOTH ' ' FROM
            '(' || i.ordem_item::text || ') ' ||  -- <<< aqui entra a ordem
          CASE WHEN COALESCE(i.quantidade,1) > 1 THEN i.quantidade::text || 'x ' ELSE '' END ||
          COALESCE(i.nome,'') ||
          CASE WHEN COALESCE(i.tamanho,'')   <> '' THEN ' (' || i.tamanho   || ')' ELSE '' END ||
          CASE WHEN COALESCE(i.categoria,'') <> '' THEN '-' || i.categoria ELSE '' END
        ),
        60, ' '  -- <<< ajuste aqui o tamanho da coluna da descri√ß√£o
      )
      || 'R$ ' ||
      LPAD(TO_CHAR(COALESCE(i.valor,0), 'FM999G999G990D00'), 6, ' '), -- valor alinhado √† direita
         '' ORDER BY i.ordem_item  -- <<< aqui est√° a mudan√ßa
    )                                                                AS itens,
    COUNT(*) FILTER (WHERE i.pedido_id IS NOT NULL)                  AS qtd_itens
  INTO v_total, v_pagto, v_itens, v_qtd
  FROM public.pedido_temp p
  LEFT JOIN public.item_pedido_temp i
         ON i.user_id   = p.user_id
        AND i.pedido_id = p.pedido_id
  WHERE p.user_id   = p_user_id
    AND p.pedido_id = p_pedido_id
  GROUP BY p.user_id, p.pedido_id ;

  -- Pedido n√£o existe
  IF NOT FOUND THEN
    RETURN 'üì¶ Pedido n√£o encontrado para o usu√°rio informado.';
  END IF;

  -- Pedido existe mas sem itens
  IF v_qtd = 0 THEN
    RETURN 'üì¶ Ainda n√£o h√° itens no pedido.';
  END IF;

  -- Monta o resumo
  v_resumo :=
      'üì¶ Pedido n¬∫ ' || 'Em constru√ß√£o'|| E'\n' ||
      'üìã Resumo:'    || COALESCE(v_itens, '') || E'\n' ||
      'üí≥ Forma de pagamento: ' || COALESCE(v_pagto, 'n√£o informado') || E'\n' ||
      'üì¶ Entrega:                                      R$  3.00' || E'\n' ||
      'üí∞ Total:                                        R$ '|| TO_CHAR(v_total, 'FM999G999G990D00')|| E'\n' ||
      'üì¶ Total de Itens                                     ' ||TO_CHAR(v_qtd, '00' );

  RETURN v_resumo;
END;
$$; 


GRANT EXECUTE ON FUNCTION public.calcula_pre_pedido(integer, integer) TO authenticated, PUBLIC;

-- teste
SELECT calcula_pre_pedido(1,7);
 